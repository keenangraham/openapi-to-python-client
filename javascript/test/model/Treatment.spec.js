/**
 * IGVF Project API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.IgvfProjectApi);
  }
}(this, function(expect, IgvfProjectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new IgvfProjectApi.Treatment();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Treatment', function() {
    it('should create an instance of Treatment', function() {
      // uncomment below and update the code to test Treatment
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be.a(IgvfProjectApi.Treatment);
    });

    it('should have the property releaseTimestamp (base name: "release_timestamp")', function() {
      // uncomment below and update the code to test the property releaseTimestamp
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property lab (base name: "lab")', function() {
      // uncomment below and update the code to test the property lab
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property award (base name: "award")', function() {
      // uncomment below and update the code to test the property award
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property sources (base name: "sources")', function() {
      // uncomment below and update the code to test the property sources
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property lotId (base name: "lot_id")', function() {
      // uncomment below and update the code to test the property lotId
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property productId (base name: "product_id")', function() {
      // uncomment below and update the code to test the property productId
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property documents (base name: "documents")', function() {
      // uncomment below and update the code to test the property documents
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property schemaVersion (base name: "schema_version")', function() {
      // uncomment below and update the code to test the property schemaVersion
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property uuid (base name: "uuid")', function() {
      // uncomment below and update the code to test the property uuid
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property aliases (base name: "aliases")', function() {
      // uncomment below and update the code to test the property aliases
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property creationTimestamp (base name: "creation_timestamp")', function() {
      // uncomment below and update the code to test the property creationTimestamp
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property submittedBy (base name: "submitted_by")', function() {
      // uncomment below and update the code to test the property submittedBy
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property submitterComment (base name: "submitter_comment")', function() {
      // uncomment below and update the code to test the property submitterComment
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property amount (base name: "amount")', function() {
      // uncomment below and update the code to test the property amount
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property amountUnits (base name: "amount_units")', function() {
      // uncomment below and update the code to test the property amountUnits
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property duration (base name: "duration")', function() {
      // uncomment below and update the code to test the property duration
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property durationUnits (base name: "duration_units")', function() {
      // uncomment below and update the code to test the property durationUnits
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property pH (base name: "pH")', function() {
      // uncomment below and update the code to test the property pH
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property purpose (base name: "purpose")', function() {
      // uncomment below and update the code to test the property purpose
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property postTreatmentTime (base name: "post_treatment_time")', function() {
      // uncomment below and update the code to test the property postTreatmentTime
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property postTreatmentTimeUnits (base name: "post_treatment_time_units")', function() {
      // uncomment below and update the code to test the property postTreatmentTimeUnits
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property temperature (base name: "temperature")', function() {
      // uncomment below and update the code to test the property temperature
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property temperatureUnits (base name: "temperature_units")', function() {
      // uncomment below and update the code to test the property temperatureUnits
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property treatmentType (base name: "treatment_type")', function() {
      // uncomment below and update the code to test the property treatmentType
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property treatmentTermId (base name: "treatment_term_id")', function() {
      // uncomment below and update the code to test the property treatmentTermId
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property treatmentTermName (base name: "treatment_term_name")', function() {
      // uncomment below and update the code to test the property treatmentTermName
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property depletion (base name: "depletion")', function() {
      // uncomment below and update the code to test the property depletion
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "@id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "@type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property summary (base name: "summary")', function() {
      // uncomment below and update the code to test the property summary
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

    it('should have the property biosamplesTreated (base name: "biosamples_treated")', function() {
      // uncomment below and update the code to test the property biosamplesTreated
      //var instance = new IgvfProjectApi.Treatment();
      //expect(instance).to.be();
    });

  });

}));
