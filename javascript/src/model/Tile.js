/**
 * IGVF Project API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Tile model module.
 * @module model/Tile
 * @version 0.1.0
 */
class Tile {
    /**
     * Constructs a new <code>Tile</code>.
     * The coordinates and an identifier in plain text for the specific tile of a protein region cloned in an expression vector library. The associated gene for this protein must be listed in the small_scale_gene_list or large_scale_gene_list property.
     * @alias module:model/Tile
     */
    constructor() { 
        
        Tile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Tile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Tile} obj Optional instance to populate.
     * @return {module:model/Tile} The populated <code>Tile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Tile();

            if (data.hasOwnProperty('tile_id')) {
                obj['tile_id'] = ApiClient.convertToType(data['tile_id'], 'String');
            }
            if (data.hasOwnProperty('tile_start')) {
                obj['tile_start'] = ApiClient.convertToType(data['tile_start'], 'Number');
            }
            if (data.hasOwnProperty('tile_end')) {
                obj['tile_end'] = ApiClient.convertToType(data['tile_end'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Tile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Tile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['tile_id'] && !(typeof data['tile_id'] === 'string' || data['tile_id'] instanceof String)) {
            throw new Error("Expected the field `tile_id` to be a primitive type in the JSON string but got " + data['tile_id']);
        }

        return true;
    }


}



/**
 * An identifier in plain text for the specific tile of a protein region cloned in an expression vector library.
 * @member {String} tile_id
 */
Tile.prototype['tile_id'] = undefined;

/**
 * The 1-based, closed (inclusive) starting coordinate.
 * @member {Number} tile_start
 */
Tile.prototype['tile_start'] = undefined;

/**
 * The 1-based, closed (inclusive) ending coordinate.
 * @member {Number} tile_end
 */
Tile.prototype['tile_end'] = undefined;






export default Tile;

