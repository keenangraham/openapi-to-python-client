{
  "openapi": "3.1.0",
  "info": {
    "title": "IGVF Project API",
    "version": "0.1.0"
  },
  "paths": {
    "/search": {
      "get": {
        "summary": "Search for objects in the IGVF Project",
        "description": "Search endpoint that accepts various query parameters to filter, sort, and paginate results. Supports complex filtering on types and fields within JSON objects.",
        "parameters": [
          {
            "name": "debug",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Enables debug mode for the search."
          },
          {
            "name": "field",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to include in the response. Can be repeated for multiple fields."
          },
          {
            "name": "frame",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "object",
                "embedded"
              ]
            },
            "description": "Specifies the format of the returned objects."
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Starting index for pagination."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Maximum number of results to return. Use 'all' for all results."
          },
          {
            "name": "mode",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specifies the search mode."
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Fields to sort results by. Prefix with '-' for descending order. Can be repeated for multiple sort fields."
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "description": "Type of objects to return. Can be repeated for multiple types."
          },
          {
            "name": "config",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Configuration options for the search."
          },
          {
            "name": "advancedQuery",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Advanced query string for complex searches."
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query string for searching."
          },
          {
            "name": "field_filters",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Any field from any object type can be used as a filter. Use '!=' for negation, '*' as a wildcard, and 'lt:', 'lte:', 'gt:', 'gte:' for range queries on numeric fields."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@graph": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/AccessKey"
                          },
                          {
                            "$ref": "#/components/schemas/AnalysisStep"
                          },
                          {
                            "$ref": "#/components/schemas/Award"
                          },
                          {
                            "$ref": "#/components/schemas/Biomarker"
                          },
                          {
                            "$ref": "#/components/schemas/Document"
                          },
                          {
                            "$ref": "#/components/schemas/HumanDonor"
                          },
                          {
                            "$ref": "#/components/schemas/RodentDonor"
                          },
                          {
                            "$ref": "#/components/schemas/AlignmentFile"
                          },
                          {
                            "$ref": "#/components/schemas/ConfigurationFile"
                          },
                          {
                            "$ref": "#/components/schemas/GenomeBrowserAnnotationFile"
                          },
                          {
                            "$ref": "#/components/schemas/ImageFile"
                          },
                          {
                            "$ref": "#/components/schemas/MatrixFile"
                          },
                          {
                            "$ref": "#/components/schemas/ModelFile"
                          },
                          {
                            "$ref": "#/components/schemas/ReferenceFile"
                          },
                          {
                            "$ref": "#/components/schemas/SequenceFile"
                          },
                          {
                            "$ref": "#/components/schemas/SignalFile"
                          },
                          {
                            "$ref": "#/components/schemas/TabularFile"
                          },
                          {
                            "$ref": "#/components/schemas/AnalysisSet"
                          },
                          {
                            "$ref": "#/components/schemas/AuxiliarySet"
                          },
                          {
                            "$ref": "#/components/schemas/ConstructLibrarySet"
                          },
                          {
                            "$ref": "#/components/schemas/CuratedSet"
                          },
                          {
                            "$ref": "#/components/schemas/MeasurementSet"
                          },
                          {
                            "$ref": "#/components/schemas/ModelSet"
                          },
                          {
                            "$ref": "#/components/schemas/PredictionSet"
                          },
                          {
                            "$ref": "#/components/schemas/Gene"
                          },
                          {
                            "$ref": "#/components/schemas/Image"
                          },
                          {
                            "$ref": "#/components/schemas/InstitutionalCertificate"
                          },
                          {
                            "$ref": "#/components/schemas/Lab"
                          },
                          {
                            "$ref": "#/components/schemas/CrisprModification"
                          },
                          {
                            "$ref": "#/components/schemas/Modification"
                          },
                          {
                            "$ref": "#/components/schemas/AssayTerm"
                          },
                          {
                            "$ref": "#/components/schemas/PhenotypeTerm"
                          },
                          {
                            "$ref": "#/components/schemas/PlatformTerm"
                          },
                          {
                            "$ref": "#/components/schemas/SampleTerm"
                          },
                          {
                            "$ref": "#/components/schemas/OpenReadingFrame"
                          },
                          {
                            "$ref": "#/components/schemas/Page"
                          },
                          {
                            "$ref": "#/components/schemas/PhenotypicFeature"
                          },
                          {
                            "$ref": "#/components/schemas/Publication"
                          },
                          {
                            "$ref": "#/components/schemas/InVitroSystem"
                          },
                          {
                            "$ref": "#/components/schemas/MultiplexedSample"
                          },
                          {
                            "$ref": "#/components/schemas/PrimaryCell"
                          },
                          {
                            "$ref": "#/components/schemas/TechnicalSample"
                          },
                          {
                            "$ref": "#/components/schemas/Tissue"
                          },
                          {
                            "$ref": "#/components/schemas/WholeOrganism"
                          },
                          {
                            "$ref": "#/components/schemas/Software"
                          },
                          {
                            "$ref": "#/components/schemas/SoftwareVersion"
                          },
                          {
                            "$ref": "#/components/schemas/Source"
                          },
                          {
                            "$ref": "#/components/schemas/Treatment"
                          },
                          {
                            "$ref": "#/components/schemas/User"
                          },
                          {
                            "$ref": "#/components/schemas/Workflow"
                          }
                        ]
                      }
                    },
                    "@id": {
                      "type": "string"
                    },
                    "@type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "facets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "terms": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "doc_count": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessKey": {
        "title": "Access Key",
        "required": [],
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "2"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "Description of the access key.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$|^$",
            "default": ""
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "current",
            "enum": [
              "current",
              "deleted"
            ]
          },
          "user": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "access_key_id": {
            "title": "Access Key ID",
            "description": "An access key.",
            "type": "string"
          },
          "secret_access_key_hash": {
            "title": "Secret Access Key Hash",
            "description": "A secret access key.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          }
        }
      },
      "AnalysisStep": {
        "title": "Analysis Step",
        "description": "A step in a computational analysis workflow. For example, a sequence alignment step that represents the phase of the computational analysis in which sequenced reads are being aligned to the reference genome.",
        "type": "object",
        "required": [
          "lab",
          "award",
          "title",
          "step_label",
          "analysis_step_types",
          "input_content_types",
          "output_content_types",
          "workflow"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "in progress",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "released"
            ]
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "5"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "analysis_step_types": {
            "title": "Analysis Step Types",
            "description": "The classification of the software.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "title": "Type",
              "type": "string",
              "enum": [
                "alignment",
                "file format conversion",
                "signal generation"
              ]
            }
          },
          "step_label": {
            "title": "Step Label",
            "description": "Unique lowercased label of the analysis step that includes the relevant assays, the software used, and the purpose of the step, e.g. rampage-grit-peak-calling-step",
            "type": "string",
            "pattern": "^[a-z0-9-]+-step$"
          },
          "title": {
            "title": "Title",
            "description": "The preferred viewable name of the analysis step, likely the same as the step label.",
            "type": "string",
            "pattern": "^[a-zA-Z\\d_().,-]+(?:\\s[a-zA-Z\\d_().,-]+)*[step|Step]$"
          },
          "workflow": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Workflow",
                  "title": "Workflow"
                }
              ]
            ]
          },
          "parents": {
            "title": "Parents",
            "description": "The precursor steps.",
            "uniqueItems": true,
            "minItems": 1,
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/AnalysisStep",
                    "title": "AnalysisStep"
                  }
                ]
              ]
            }
          },
          "input_content_types": {
            "title": "Input Content Types",
            "description": "The content types used as input for the analysis step.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "title": "Input Content Type",
              "description": "A content type used as input for the analysis step.",
              "type": "string",
              "anyOf": [
                {
                  "comment": "Content Type describes the content of the file.",
                  "enum": [
                    "alignments",
                    "transcriptome alignments"
                  ],
                  "submissionExample": {
                    "appscript": "alignments",
                    "igvf_utils": "alignments"
                  }
                },
                {
                  "comment": "Content Type describes the content of the file.",
                  "enum": [
                    "seqspec"
                  ],
                  "submissionExample": {
                    "appscript": "seqspec",
                    "igvf_utils": "seqspec"
                  }
                },
                {
                  "comment": "Content Type describes the content of the file.",
                  "enum": [
                    "contact matrix",
                    "sparse gene count matrix",
                    "sparse peak count matrix",
                    "sparse transcript count matrix",
                    "transcriptome annotations"
                  ],
                  "submissionExample": {
                    "appscript": "contact matrix",
                    "igvf_utils": "contact matrix"
                  }
                },
                {
                  "comment": "Content Type describes the content of the file. Genome reference are composite nucleic acid sequences assembled from the sequence of several different individual organisms representing the species. Guide RNA sequences are sequences of RNA molecules used in assays involving CRISPR editing. Sequence barcodes are lists of barcodes found in the sequencing library. Spike-ins are nucleic acid fragments of known sequence and quantity used for calibration in high-throughput sequencing. Transcriptome references are transcriptomic sequences of an idealized representative individual in a species. Vector sequences are sequences tested in MPRAs.",
                  "oneOf": [
                    {
                      "enum": [
                        "biological_context",
                        "complexes",
                        "complexes_complexes",
                        "complexes_proteins",
                        "complexes_terms",
                        "diseases_genes",
                        "drugs",
                        "elements_genes",
                        "elements reference",
                        "exclusion list",
                        "genes",
                        "genes_genes",
                        "genes_pathways",
                        "genes_terms",
                        "genes_transcripts",
                        "genome reference",
                        "go_terms_proteins",
                        "inclusion list",
                        "motifs",
                        "motifs_proteins",
                        "ontology_terms",
                        "ontology_terms_ontology_terms",
                        "pathways",
                        "pathways_pathways",
                        "proteins",
                        "proteins_proteins",
                        "regulatory_regions",
                        "regulatory_regions_genes",
                        "regulatory_regions_genes_biosamples",
                        "regulatory_regions_genes_biosamples_donors",
                        "regulatory_regions_genes_biosamples_treatments_chebi",
                        "regulatory_regions_genes_biosamples_treatments_proteins",
                        "regulatory_regions_regulatory_regions",
                        "spike-ins",
                        "studies",
                        "studies_variants",
                        "studies_variants_phenotypes",
                        "transcriptome reference",
                        "transcripts",
                        "transcripts_proteins",
                        "variants",
                        "variants_drugs",
                        "variants_drugs_genes",
                        "variants_genes",
                        "variants_genes_terms",
                        "variants_proteins",
                        "variants_proteins_terms",
                        "variants_proteins_biosamples",
                        "variants_proteins_phenotypes",
                        "variants_regulatory_regions",
                        "variants_variants"
                      ]
                    },
                    {
                      "enum": [
                        "guide RNA sequences",
                        "sequence barcodes",
                        "vector sequences"
                      ],
                      "permission": "admin_only"
                    }
                  ],
                  "submissionExample": {
                    "appscript": "variants",
                    "igvf_utils": "variants"
                  }
                },
                {
                  "comment": "Content Type describes the content of the file. Reads are individual sequences of bases corresponding to DNA or RNA fragments in a FASTQ text file format. Subreads are sequences of bases produced using PacBio platforms.",
                  "enum": [
                    "Nanopore reads",
                    "PacBio subreads",
                    "reads"
                  ],
                  "submissionExample": {
                    "appscript": "reads",
                    "igvf_utils": "reads"
                  }
                },
                {
                  "comment": "Content Type describes the content of the file.",
                  "enum": [
                    "signal",
                    "signal of all reads",
                    "signal of unique reads",
                    "signal p-value",
                    "raw signal",
                    "read-depth signal",
                    "control signal",
                    "fold change over control"
                  ],
                  "submissionExample": {
                    "appscript": "signal",
                    "igvf_utils": "signal"
                  }
                }
              ]
            }
          },
          "output_content_types": {
            "title": "Output Content Types",
            "description": "The content types produced as output by the analysis step.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "title": "Output Content Type",
              "description": "A content type produced as output by the analysis step.",
              "type": "string",
              "anyOf": [
                {
                  "comment": "Content Type describes the content of the file.",
                  "enum": [
                    "alignments",
                    "transcriptome alignments"
                  ],
                  "submissionExample": {
                    "appscript": "alignments",
                    "igvf_utils": "alignments"
                  }
                },
                {
                  "comment": "Content Type describes the content of the file.",
                  "enum": [
                    "seqspec"
                  ],
                  "submissionExample": {
                    "appscript": "seqspec",
                    "igvf_utils": "seqspec"
                  }
                },
                {
                  "comment": "Content Type describes the content of the file.",
                  "enum": [
                    "contact matrix",
                    "sparse gene count matrix",
                    "sparse peak count matrix",
                    "sparse transcript count matrix",
                    "transcriptome annotations"
                  ],
                  "submissionExample": {
                    "appscript": "contact matrix",
                    "igvf_utils": "contact matrix"
                  }
                },
                {
                  "comment": "Content Type describes the content of the file. Genome reference are composite nucleic acid sequences assembled from the sequence of several different individual organisms representing the species. Guide RNA sequences are sequences of RNA molecules used in assays involving CRISPR editing. Sequence barcodes are lists of barcodes found in the sequencing library. Spike-ins are nucleic acid fragments of known sequence and quantity used for calibration in high-throughput sequencing. Transcriptome references are transcriptomic sequences of an idealized representative individual in a species. Vector sequences are sequences tested in MPRAs.",
                  "oneOf": [
                    {
                      "enum": [
                        "biological_context",
                        "complexes",
                        "complexes_complexes",
                        "complexes_proteins",
                        "complexes_terms",
                        "diseases_genes",
                        "drugs",
                        "elements_genes",
                        "elements reference",
                        "exclusion list",
                        "genes",
                        "genes_genes",
                        "genes_pathways",
                        "genes_terms",
                        "genes_transcripts",
                        "genome reference",
                        "go_terms_proteins",
                        "inclusion list",
                        "motifs",
                        "motifs_proteins",
                        "ontology_terms",
                        "ontology_terms_ontology_terms",
                        "pathways",
                        "pathways_pathways",
                        "proteins",
                        "proteins_proteins",
                        "regulatory_regions",
                        "regulatory_regions_genes",
                        "regulatory_regions_genes_biosamples",
                        "regulatory_regions_genes_biosamples_donors",
                        "regulatory_regions_genes_biosamples_treatments_chebi",
                        "regulatory_regions_genes_biosamples_treatments_proteins",
                        "regulatory_regions_regulatory_regions",
                        "spike-ins",
                        "studies",
                        "studies_variants",
                        "studies_variants_phenotypes",
                        "transcriptome reference",
                        "transcripts",
                        "transcripts_proteins",
                        "variants",
                        "variants_drugs",
                        "variants_drugs_genes",
                        "variants_genes",
                        "variants_genes_terms",
                        "variants_proteins",
                        "variants_proteins_terms",
                        "variants_proteins_biosamples",
                        "variants_proteins_phenotypes",
                        "variants_regulatory_regions",
                        "variants_variants"
                      ]
                    },
                    {
                      "enum": [
                        "guide RNA sequences",
                        "sequence barcodes",
                        "vector sequences"
                      ],
                      "permission": "admin_only"
                    }
                  ],
                  "submissionExample": {
                    "appscript": "variants",
                    "igvf_utils": "variants"
                  }
                },
                {
                  "comment": "Content Type describes the content of the file. Reads are individual sequences of bases corresponding to DNA or RNA fragments in a FASTQ text file format. Subreads are sequences of bases produced using PacBio platforms.",
                  "enum": [
                    "Nanopore reads",
                    "PacBio subreads",
                    "reads"
                  ],
                  "submissionExample": {
                    "appscript": "reads",
                    "igvf_utils": "reads"
                  }
                },
                {
                  "comment": "Content Type describes the content of the file.",
                  "enum": [
                    "signal",
                    "signal of all reads",
                    "signal of unique reads",
                    "signal p-value",
                    "raw signal",
                    "read-depth signal",
                    "control signal",
                    "fold change over control"
                  ],
                  "submissionExample": {
                    "appscript": "signal",
                    "igvf_utils": "signal"
                  }
                }
              ]
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Full name of the analysis step."
          }
        }
      },
      "Award": {
        "title": "Grant",
        "description": "A grant providing financial support for a scientific project. For example, HG012076 supporting \"Single-cell Mapping Center for Human Regulatory Elements and Gene Activity.\"",
        "required": [
          "name",
          "project",
          "title"
        ],
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "current",
            "enum": [
              "current",
              "deleted",
              "disabled"
            ]
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string",
            "format": "uri"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "5"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "title": {
            "title": "Title",
            "description": "The grant name from the NIH database, if applicable.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "name": {
            "title": "Name",
            "description": "The official grant number from the NIH database, if applicable",
            "type": "string",
            "pattern": "^[A-Za-z0-9\\-]+$"
          },
          "start_date": {
            "title": "Start Date",
            "description": "The date when the award begins.",
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "title": "End Date",
            "description": "The date when the award concludes.",
            "type": "string",
            "format": "date"
          },
          "pis": {
            "title": "Principal Investigators",
            "description": "Principal Investigator(s) of the grant.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/User",
                    "title": "User"
                  }
                ]
              ]
            }
          },
          "contact_pi": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "project": {
            "title": "Project",
            "description": "The collection of biological data related to a single initiative, originating from a consortium.",
            "type": "string",
            "enum": [
              "community",
              "ENCODE",
              "IGVF"
            ]
          },
          "viewing_group": {
            "title": "View Access Group",
            "description": "The group that determines which set of data the user has permission to view.",
            "type": "string",
            "enum": [
              "community",
              "IGVF"
            ]
          },
          "component": {
            "title": "Project Component",
            "description": "The project component the award is associated with.",
            "type": "string",
            "enum": [
              "affiliate",
              "data analysis",
              "data coordination",
              "functional characterization",
              "mapping",
              "networks",
              "predictive modeling"
            ]
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          }
        }
      },
      "Biomarker": {
        "title": "Biomarker",
        "description": "A biomarker, such as a cell surface protein, that is measured, detected, or used for sample sorting based upon the biomarker's presence, absence, or quantification. For example, a CD19 positive biomarker that was detected in a sample.",
        "type": "object",
        "required": [
          "name",
          "quantification",
          "award",
          "lab"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "in progress",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "released"
            ]
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "4"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "name": {
            "title": "Name",
            "description": "The biomarker name.",
            "type": "string"
          },
          "classification": {
            "title": "Classification",
            "description": "Sample specific biomarker.",
            "type": "string",
            "enum": [
              "cell surface protein",
              "marker gene"
            ]
          },
          "quantification": {
            "title": "Quantification",
            "description": "The biomarker association to the biosample, disease or other condition.  This can be the absence of the biomarker or the presence of the biomarker in some low, intermediate or high quantity.",
            "type": "string",
            "enum": [
              "negative",
              "positive",
              "low",
              "intermediate",
              "high"
            ]
          },
          "synonyms": {
            "title": "Synonyms",
            "description": "Alternate names for this biomarker.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Synonym",
              "type": "string"
            }
          },
          "gene": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Gene",
                  "title": "Gene"
                }
              ]
            ]
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "name_quantification": {
            "title": "Name and Quantification",
            "type": "string",
            "description": "A concatenation of the name and quantification of the biomarker."
          }
        }
      },
      "Document": {
        "title": "Document",
        "description": "A document with additional information regarding another object submitted to the data portal. For example, a plasmid map document associated with a transduced cell line sample.",
        "type": "object",
        "required": [
          "document_type",
          "description",
          "attachment",
          "lab",
          "award"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "in progress",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "released"
            ]
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "attachment": {
            "title": "Attachment",
            "type": "object",
            "description": "The attached content.",
            "additionalProperties": false,
            "properties": {
              "download": {
                "title": "File Name",
                "type": "string"
              },
              "href": {
                "title": "Hypertext REFerence",
                "type": "string"
              },
              "type": {
                "title": "MIME type",
                "type": "string",
                "enum": [
                  "application/json",
                  "application/pdf",
                  "image/gif",
                  "image/jpeg",
                  "image/png",
                  "image/svs",
                  "image/tiff",
                  "text/autosql",
                  "text/html",
                  "text/plain",
                  "text/tab-separated-values"
                ]
              },
              "md5sum": {
                "title": "MD5sum",
                "type": "string",
                "format": "md5sum"
              },
              "size": {
                "title": "File Size",
                "type": "integer",
                "minimum": 0
              },
              "width": {
                "title": "Image Width",
                "type": "integer",
                "minimum": 0
              },
              "height": {
                "title": "Image Height",
                "type": "integer",
                "minimum": 0
              }
            }
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "4"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "document_type": {
            "title": "Document Type",
            "description": "The category that best describes the document.",
            "type": "string",
            "enum": [
              "cell fate change protocol",
              "characterization",
              "computational protocol",
              "experimental protocol",
              "file format specification",
              "image",
              "plate map",
              "plasmid map",
              "plasmid sequence",
              "standards"
            ]
          },
          "characterization_method": {
            "title": "Characterization Method",
            "description": "The method used for the characterization.",
            "type": "string",
            "enum": [
              "FACS",
              "immunoblot",
              "immunofluorescence",
              "immunoprecipitation",
              "mass spectrometry",
              "PCR",
              "restriction digest",
              "RT-qPCR",
              "sequencing"
            ]
          },
          "urls": {
            "title": "URL",
            "description": "External resources with additional information to the document.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "URL",
              "description": "An external resource with additional information to the document.",
              "type": "string",
              "format": "uri"
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          }
        }
      },
      "HumanDonor": {
        "title": "Human Donor",
        "description": "A human donor of any biosample, including cell lines. Submission of any sample originating from a human donor requires submission of information about the relevant donor. For example, submission of the donor of K562 is a prerequisite for submission of any K562 cell line samples.",
        "type": "object",
        "required": [
          "award",
          "lab",
          "taxa"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "taxa": {
            "title": "Taxa",
            "type": "string",
            "description": "The species of the organism.",
            "enum": [
              "Homo sapiens"
            ]
          },
          "publication_identifiers": {
            "title": "Publication Identifiers",
            "description": "The publication identifiers that provide more information about the object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Publication Identifier",
              "description": "A publication identifier that provides more information about the object.",
              "type": "string",
              "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$"
            }
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string",
            "format": "uri"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "13"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF donors.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "title": "External Identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF donors.",
              "type": "string",
              "pattern": "(^GEO:SAMN\\d+$)|(^ENCODE:ENCDO\\d{3}[A-Z]{3}$)"
            }
          },
          "sex": {
            "title": "Sex",
            "description": "Sex of the donor.",
            "type": "string",
            "default": "unspecified",
            "enum": [
              "male",
              "female",
              "unspecified"
            ]
          },
          "phenotypic_features": {
            "title": "Phenotypic Features",
            "description": "A list of associated phenotypic features of the donor.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/PhenotypicFeature",
                    "title": "PhenotypicFeature"
                  }
                ]
              ]
            }
          },
          "virtual": {
            "title": "Virtual",
            "description": "Virtual donors are not representing actual human or model organism donors, samples coming from which were used in experiments, but rather capturing metadata about hypothetical donors that the reported analysis results are relevant for.",
            "type": "boolean",
            "default": false
          },
          "related_donors": {
            "title": "Related Donors",
            "description": "Familial relations of this donor.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Related Donor",
              "description": "Familial relation of this donor.",
              "type": "object",
              "additionalProperties": false,
              "required": [
                "donor",
                "relationship_type"
              ],
              "properties": {
                "donor": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    [
                      {
                        "$ref": "#/components/schemas/HumanDonor",
                        "title": "HumanDonor"
                      }
                    ]
                  ]
                },
                "relationship_type": {
                  "title": "Relationship Type",
                  "description": "A descriptive term for the related donor\u2019s relationship to this donor.",
                  "type": "string",
                  "enum": [
                    "aunt",
                    "child",
                    "first cousin once removed",
                    "first cousin",
                    "fraternal twin",
                    "grandparent",
                    "half-sibling",
                    "niece",
                    "nephew",
                    "parent",
                    "paternal twin",
                    "sibling",
                    "second cousin",
                    "uncle"
                  ]
                }
              }
            }
          },
          "ethnicities": {
            "title": "Ethnicity",
            "description": "Ethnicity of the donor.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "string",
              "enum": [
                "African American",
                "African Caribbean",
                "Arab",
                "Asian",
                "Black",
                "Black African",
                "Chinese",
                "Colombian",
                "Dai Chinese",
                "Esan",
                "Eskimo",
                "European",
                "Gambian",
                "Han Chinese",
                "Hispanic",
                "Indian",
                "Japanese",
                "Kinh Vietnamese",
                "Luhya",
                "Maasai",
                "Mende",
                "Native Hawaiian",
                "Pacific Islander",
                "Puerto Rican",
                "Yoruba"
              ]
            }
          },
          "human_donor_identifiers": {
            "title": "Human Donor Identifiers",
            "type": "array",
            "description": "Identifiers of this human donor.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Human Donor Identifier",
              "description": "An identifier of this human donor.",
              "type": "string"
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          }
        }
      },
      "RodentDonor": {
        "title": "Rodent Donor",
        "description": "A rodent donor of a biosample. Submission of any sample originating from a rodent donor requires submission of information about the relevant donor. The rodent donor can be a generic representative of an inbred strain, or a unique, individual mouse. For example, submission of a B6 mouse donor is a prerequisite for submission of any B6 mouse samples.",
        "type": "object",
        "required": [
          "award",
          "lab",
          "taxa",
          "sex",
          "strain"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "taxa": {
            "title": "Taxa",
            "type": "string",
            "description": "The species of the organism.",
            "enum": [
              "Mus musculus"
            ]
          },
          "publication_identifiers": {
            "title": "Publication Identifiers",
            "description": "The publication identifiers that provide more information about the object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Publication Identifier",
              "description": "A publication identifier that provides more information about the object.",
              "type": "string",
              "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$"
            }
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string",
            "format": "uri"
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "minItems": 1,
            "maxItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Lab",
                    "title": "Lab"
                  },
                  {
                    "$ref": "#/components/schemas/Source",
                    "title": "Source"
                  }
                ]
              ]
            }
          },
          "lot_id": {
            "title": "Lot ID",
            "description": "The lot identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "product_id": {
            "title": "Product ID",
            "description": "The product identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "12"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF donors.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "title": "External identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF donors.",
              "type": "string",
              "pattern": "^(GEO:SAMN\\d+)|(IMSR_JAX:\\d{6})|(ENCODE:ENCDO\\d{3}[A-Z]{3})$"
            }
          },
          "sex": {
            "title": "Sex",
            "description": "Sex of the donor.",
            "type": "string",
            "default": "unspecified",
            "enum": [
              "male",
              "female",
              "unspecified"
            ]
          },
          "phenotypic_features": {
            "title": "Phenotypic Features",
            "description": "A list of associated phenotypic features of the donor.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/PhenotypicFeature",
                    "title": "PhenotypicFeature"
                  }
                ]
              ]
            }
          },
          "virtual": {
            "title": "Virtual",
            "description": "Virtual donors are not representing actual human or model organism donors, samples coming from which were used in experiments, but rather capturing metadata about hypothetical donors that the reported analysis results are relevant for.",
            "type": "boolean",
            "default": false
          },
          "strain_background": {
            "title": "Strain Background",
            "description": "The specific parent strain designation of a non-human donor.",
            "type": "string",
            "enum": [
              "A/J (AJ)",
              "C57BL/6J (B6)",
              "129S1/SvImJ (129)",
              "NOD/ShiLtJ (NOD)",
              "NZO/H1LtJ (NZO)",
              "CAST/EiJ (CAST)",
              "PWK/PhJ (PWK)",
              "WSB/EiJ (WSB)",
              "CAST (M. m. castaneus)",
              "WSB (M. m. domesticus)",
              "PWK (M. m. musculus)"
            ]
          },
          "strain": {
            "title": "Strain Name",
            "description": "The specific strain designation of a non-human donor.",
            "type": "string"
          },
          "genotype": {
            "title": "Strain Genotype",
            "description": "The genotype of the strain according to accepted nomenclature conventions.",
            "type": "string"
          },
          "individual_rodent": {
            "title": "Individual Rodent",
            "description": "This rodent donor represents an individual rodent.",
            "type": "boolean",
            "default": false
          },
          "rodent_identifier": {
            "title": "Rodent Identifier",
            "description": "The identifier for this individual rodent donor.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          }
        }
      },
      "AlignmentFile": {
        "title": "Alignment File",
        "description": "A file containing alignment data in bam format.",
        "required": [
          "award",
          "lab",
          "md5sum",
          "file_format",
          "file_set",
          "content_type",
          "reference_files",
          "redacted",
          "filtered",
          "controlled_access"
        ],
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "controlled_access": {
            "title": "Controlled Access",
            "description": "Boolean value, indicating the file being controlled access, if true.",
            "type": "boolean"
          },
          "anvil_url": {
            "title": "AnVIL URL",
            "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace.",
            "type": "string"
          },
          "transcriptome_annotation": {
            "title": "Transcriptome Annotation",
            "description": "The annotation and version of the reference resource.",
            "type": "string",
            "enum": [
              "GENCODE 40",
              "GENCODE 41",
              "GENCODE 42",
              "GENCODE 43",
              "GENCODE 44",
              "GENCODE 45",
              "GENCODE M30",
              "GENCODE M31",
              "GENCODE M32",
              "GENCODE M33",
              "GENCODE M34"
            ]
          },
          "assembly": {
            "title": "Genome Assembly",
            "description": "Genome assembly applicable for the annotation data.",
            "type": "string",
            "enum": [
              "GRCh38",
              "GRCm39"
            ]
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "reference_files": {
            "title": "Reference Files",
            "description": "Link to the reference files used to generate this file.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/ReferenceFile",
                    "title": "ReferenceFile"
                  }
                ]
              ]
            }
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "10"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "type": "string",
            "enum": [
              "alignments",
              "transcriptome alignments"
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "pattern": "(?!)"
            }
          },
          "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/AlignmentFile",
                    "title": "AlignmentFile"
                  },
                  {
                    "$ref": "#/components/schemas/ConfigurationFile",
                    "title": "ConfigurationFile"
                  },
                  {
                    "$ref": "#/components/schemas/GenomeBrowserAnnotationFile",
                    "title": "GenomeBrowserAnnotationFile"
                  },
                  {
                    "$ref": "#/components/schemas/ImageFile",
                    "title": "ImageFile"
                  },
                  {
                    "$ref": "#/components/schemas/MatrixFile",
                    "title": "MatrixFile"
                  },
                  {
                    "$ref": "#/components/schemas/ModelFile",
                    "title": "ModelFile"
                  },
                  {
                    "$ref": "#/components/schemas/ReferenceFile",
                    "title": "ReferenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SequenceFile",
                    "title": "SequenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SignalFile",
                    "title": "SignalFile"
                  },
                  {
                    "$ref": "#/components/schemas/TabularFile",
                    "title": "TabularFile"
                  }
                ]
              ]
            }
          },
          "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "type": "string",
            "enum": [
              "bam"
            ]
          },
          "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Document that further explains the file format.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "file_set": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/AnalysisSet",
                  "title": "AnalysisSet"
                },
                {
                  "$ref": "#/components/schemas/AuxiliarySet",
                  "title": "AuxiliarySet"
                },
                {
                  "$ref": "#/components/schemas/ConstructLibrarySet",
                  "title": "ConstructLibrarySet"
                },
                {
                  "$ref": "#/components/schemas/CuratedSet",
                  "title": "CuratedSet"
                },
                {
                  "$ref": "#/components/schemas/MeasurementSet",
                  "title": "MeasurementSet"
                },
                {
                  "$ref": "#/components/schemas/ModelSet",
                  "title": "ModelSet"
                },
                {
                  "$ref": "#/components/schemas/PredictionSet",
                  "title": "PredictionSet"
                }
              ]
            ]
          },
          "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "type": "integer",
            "minimum": 0
          },
          "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string"
          },
          "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "file not found",
              "invalidated",
              "validated"
            ]
          },
          "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string"
          },
          "redacted": {
            "title": "Redacted",
            "description": "Indicates whether the alignments data have been sanitized (redacted) to prevent leakage of private and potentially identifying genomic information.",
            "type": "boolean"
          },
          "filtered": {
            "title": "Filtered",
            "description": "Indicates whether reads that did not pass a filtering step, such as PCR duplicates, have been removed from the file.",
            "type": "boolean"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "integrated_in": {
            "title": "Integrated In",
            "description": "Construct library set(s) that this file was used for in insert design.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Integrated In"
            }
          },
          "gene_list_for": {
            "title": "Gene List For",
            "description": "File Set(s) that this file is a gene list for.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Gene List For"
            }
          },
          "loci_list_for": {
            "title": "Loci List For",
            "description": "File Set(s) that this file is a loci list for.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Loci List For"
            }
          },
          "href": {
            "title": "Download URL",
            "description": "The download path to obtain file.",
            "type": "string"
          },
          "s3_uri": {
            "title": "S3 URI",
            "description": "The S3 URI of public file object.",
            "type": "string"
          },
          "upload_credentials": {
            "title": "Upload Credentials",
            "description": "The upload credentials for S3 to submit the file content.",
            "type": "object"
          },
          "content_summary": {
            "title": "Content Summary",
            "type": "string",
            "description": "A summary of the data in the alignment file."
          }
        }
      },
      "ConfigurationFile": {
        "title": "Configuration File",
        "description": "A file containing configuration settings or information defining the structure of other data files' content.",
        "required": [
          "award",
          "lab",
          "md5sum",
          "file_format",
          "file_set",
          "content_type"
        ],
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "7"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "type": "string",
            "enum": [
              "seqspec"
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "pattern": "(?!)"
            }
          },
          "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/AlignmentFile",
                    "title": "AlignmentFile"
                  },
                  {
                    "$ref": "#/components/schemas/ConfigurationFile",
                    "title": "ConfigurationFile"
                  },
                  {
                    "$ref": "#/components/schemas/GenomeBrowserAnnotationFile",
                    "title": "GenomeBrowserAnnotationFile"
                  },
                  {
                    "$ref": "#/components/schemas/ImageFile",
                    "title": "ImageFile"
                  },
                  {
                    "$ref": "#/components/schemas/MatrixFile",
                    "title": "MatrixFile"
                  },
                  {
                    "$ref": "#/components/schemas/ModelFile",
                    "title": "ModelFile"
                  },
                  {
                    "$ref": "#/components/schemas/ReferenceFile",
                    "title": "ReferenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SequenceFile",
                    "title": "SequenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SignalFile",
                    "title": "SignalFile"
                  },
                  {
                    "$ref": "#/components/schemas/TabularFile",
                    "title": "TabularFile"
                  }
                ]
              ]
            }
          },
          "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "type": "string",
            "enum": [
              "yaml"
            ]
          },
          "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Document that further explains the file format.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "file_set": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/AnalysisSet",
                  "title": "AnalysisSet"
                },
                {
                  "$ref": "#/components/schemas/AuxiliarySet",
                  "title": "AuxiliarySet"
                },
                {
                  "$ref": "#/components/schemas/ConstructLibrarySet",
                  "title": "ConstructLibrarySet"
                },
                {
                  "$ref": "#/components/schemas/CuratedSet",
                  "title": "CuratedSet"
                },
                {
                  "$ref": "#/components/schemas/MeasurementSet",
                  "title": "MeasurementSet"
                },
                {
                  "$ref": "#/components/schemas/ModelSet",
                  "title": "ModelSet"
                },
                {
                  "$ref": "#/components/schemas/PredictionSet",
                  "title": "PredictionSet"
                }
              ]
            ]
          },
          "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "type": "integer",
            "minimum": 0
          },
          "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string"
          },
          "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "file not found",
              "invalidated",
              "validated"
            ]
          },
          "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string"
          },
          "seqspec_of": {
            "title": "Seqspec Of",
            "description": "Sequence files this file is a seqspec of.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/SequenceFile",
                    "title": "SequenceFile"
                  }
                ]
              ]
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "integrated_in": {
            "title": "Integrated In",
            "description": "Construct library set(s) that this file was used for in insert design.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Integrated In"
            }
          },
          "gene_list_for": {
            "title": "Gene List For",
            "description": "File Set(s) that this file is a gene list for.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Gene List For"
            }
          },
          "loci_list_for": {
            "title": "Loci List For",
            "description": "File Set(s) that this file is a loci list for.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Loci List For"
            }
          },
          "href": {
            "title": "Download URL",
            "description": "The download path to obtain file.",
            "type": "string"
          },
          "s3_uri": {
            "title": "S3 URI",
            "description": "The S3 URI of public file object.",
            "type": "string"
          },
          "upload_credentials": {
            "title": "Upload Credentials",
            "description": "The upload credentials for S3 to submit the file content.",
            "type": "object"
          }
        }
      },
      "GenomeBrowserAnnotationFile": {
        "title": "Genome Browser Annotation File",
        "description": "A binary file containing genome annotations which are indexed and can be visualized on a genome browser.",
        "required": [
          "award",
          "lab",
          "md5sum",
          "file_format",
          "file_set",
          "content_type",
          "derived_from"
        ],
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "assembly": {
            "title": "Genome Assembly",
            "description": "Genome assembly applicable for the annotation data.",
            "type": "string",
            "enum": [
              "GRCh38",
              "GRCm39"
            ]
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "file_format_type": {
            "title": "File Format Type",
            "description": "The subtype of bed files.",
            "type": "string",
            "enum": [
              "bed12",
              "bed3",
              "bed3+",
              "bed5",
              "bed6",
              "bed6+",
              "bed9",
              "bed9+",
              "mpra_starr"
            ]
          },
          "transcriptome_annotation": {
            "title": "Transcriptome Annotation",
            "description": "The annotation and version of the reference resource.",
            "type": "string",
            "enum": [
              "GENCODE 40",
              "GENCODE 41",
              "GENCODE 42",
              "GENCODE 43",
              "GENCODE 44",
              "GENCODE 45",
              "GENCODE M30",
              "GENCODE M31",
              "GENCODE M32",
              "GENCODE M33",
              "GENCODE M34"
            ]
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "8"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "type": "string",
            "enum": [
              "peaks"
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "pattern": "(?!)"
            }
          },
          "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/AlignmentFile",
                    "title": "AlignmentFile"
                  },
                  {
                    "$ref": "#/components/schemas/ConfigurationFile",
                    "title": "ConfigurationFile"
                  },
                  {
                    "$ref": "#/components/schemas/GenomeBrowserAnnotationFile",
                    "title": "GenomeBrowserAnnotationFile"
                  },
                  {
                    "$ref": "#/components/schemas/ImageFile",
                    "title": "ImageFile"
                  },
                  {
                    "$ref": "#/components/schemas/MatrixFile",
                    "title": "MatrixFile"
                  },
                  {
                    "$ref": "#/components/schemas/ModelFile",
                    "title": "ModelFile"
                  },
                  {
                    "$ref": "#/components/schemas/ReferenceFile",
                    "title": "ReferenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SequenceFile",
                    "title": "SequenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SignalFile",
                    "title": "SignalFile"
                  },
                  {
                    "$ref": "#/components/schemas/TabularFile",
                    "title": "TabularFile"
                  }
                ]
              ]
            }
          },
          "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "type": "string",
            "enum": [
              "bigBed",
              "tabix"
            ]
          },
          "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Document that further explains the file format.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "file_set": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/AnalysisSet",
                  "title": "AnalysisSet"
                },
                {
                  "$ref": "#/components/schemas/AuxiliarySet",
                  "title": "AuxiliarySet"
                },
                {
                  "$ref": "#/components/schemas/ConstructLibrarySet",
                  "title": "ConstructLibrarySet"
                },
                {
                  "$ref": "#/components/schemas/CuratedSet",
                  "title": "CuratedSet"
                },
                {
                  "$ref": "#/components/schemas/MeasurementSet",
                  "title": "MeasurementSet"
                },
                {
                  "$ref": "#/components/schemas/ModelSet",
                  "title": "ModelSet"
                },
                {
                  "$ref": "#/components/schemas/PredictionSet",
                  "title": "PredictionSet"
                }
              ]
            ]
          },
          "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "type": "integer",
            "minimum": 0
          },
          "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string"
          },
          "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "file not found",
              "invalidated",
              "validated"
            ]
          },
          "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "integrated_in": {
            "title": "Integrated In",
            "description": "Construct library set(s) that this file was used for in insert design.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Integrated In"
            }
          },
          "gene_list_for": {
            "title": "Gene List For",
            "description": "File Set(s) that this file is a gene list for.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Gene List For"
            }
          },
          "loci_list_for": {
            "title": "Loci List For",
            "description": "File Set(s) that this file is a loci list for.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Loci List For"
            }
          },
          "href": {
            "title": "Download URL",
            "description": "The download path to obtain file.",
            "type": "string"
          },
          "s3_uri": {
            "title": "S3 URI",
            "description": "The S3 URI of public file object.",
            "type": "string"
          },
          "upload_credentials": {
            "title": "Upload Credentials",
            "description": "The upload credentials for S3 to submit the file content.",
            "type": "object"
          }
        }
      },
      "ImageFile": {
        "title": "Image File",
        "description": "A file containing image data.",
        "required": [
          "award",
          "lab",
          "md5sum",
          "file_format",
          "file_set",
          "content_type"
        ],
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "4"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "type": "string",
            "oneOf": [
              {
                "enum": [
                  "detected tissue",
                  "low resolution tissue",
                  "high resolution tissue"
                ]
              },
              {
                "enum": [
                  "fiducial alignment"
                ],
                "permission": "admin_only"
              }
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "pattern": "(?!)"
            }
          },
          "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/AlignmentFile",
                    "title": "AlignmentFile"
                  },
                  {
                    "$ref": "#/components/schemas/ConfigurationFile",
                    "title": "ConfigurationFile"
                  },
                  {
                    "$ref": "#/components/schemas/GenomeBrowserAnnotationFile",
                    "title": "GenomeBrowserAnnotationFile"
                  },
                  {
                    "$ref": "#/components/schemas/ImageFile",
                    "title": "ImageFile"
                  },
                  {
                    "$ref": "#/components/schemas/MatrixFile",
                    "title": "MatrixFile"
                  },
                  {
                    "$ref": "#/components/schemas/ModelFile",
                    "title": "ModelFile"
                  },
                  {
                    "$ref": "#/components/schemas/ReferenceFile",
                    "title": "ReferenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SequenceFile",
                    "title": "SequenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SignalFile",
                    "title": "SignalFile"
                  },
                  {
                    "$ref": "#/components/schemas/TabularFile",
                    "title": "TabularFile"
                  }
                ]
              ]
            }
          },
          "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "type": "string",
            "enum": [
              "jpg",
              "png"
            ]
          },
          "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Document that further explains the file format.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "file_set": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/AnalysisSet",
                  "title": "AnalysisSet"
                },
                {
                  "$ref": "#/components/schemas/AuxiliarySet",
                  "title": "AuxiliarySet"
                },
                {
                  "$ref": "#/components/schemas/ConstructLibrarySet",
                  "title": "ConstructLibrarySet"
                },
                {
                  "$ref": "#/components/schemas/CuratedSet",
                  "title": "CuratedSet"
                },
                {
                  "$ref": "#/components/schemas/MeasurementSet",
                  "title": "MeasurementSet"
                },
                {
                  "$ref": "#/components/schemas/ModelSet",
                  "title": "ModelSet"
                },
                {
                  "$ref": "#/components/schemas/PredictionSet",
                  "title": "PredictionSet"
                }
              ]
            ]
          },
          "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "type": "integer",
            "minimum": 0
          },
          "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string"
          },
          "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "file not found",
              "invalidated",
              "validated"
            ]
          },
          "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "integrated_in": {
            "title": "Integrated In",
            "description": "Construct library set(s) that this file was used for in insert design.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Integrated In"
            }
          },
          "gene_list_for": {
            "title": "Gene List For",
            "description": "File Set(s) that this file is a gene list for.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Gene List For"
            }
          },
          "loci_list_for": {
            "title": "Loci List For",
            "description": "File Set(s) that this file is a loci list for.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Loci List For"
            }
          },
          "href": {
            "title": "Download URL",
            "description": "The download path to obtain file.",
            "type": "string"
          },
          "s3_uri": {
            "title": "S3 URI",
            "description": "The S3 URI of public file object.",
            "type": "string"
          },
          "upload_credentials": {
            "title": "Upload Credentials",
            "description": "The upload credentials for S3 to submit the file content.",
            "type": "object"
          }
        }
      },
      "MatrixFile": {
        "title": "Matrix File",
        "description": "A file containing quantification data in a multi-dimension format.",
        "required": [
          "award",
          "lab",
          "md5sum",
          "file_format",
          "file_set",
          "content_type",
          "reference_files",
          "dimension1",
          "dimension2"
        ],
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "reference_files": {
            "title": "Reference Files",
            "description": "Link to the reference files used to generate this file.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/ReferenceFile",
                    "title": "ReferenceFile"
                  }
                ]
              ]
            }
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "6"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "type": "string",
            "enum": [
              "contact matrix",
              "sparse gene count matrix",
              "sparse peak count matrix",
              "sparse transcript count matrix",
              "transcriptome annotations"
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "pattern": "(?!)"
            }
          },
          "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/AlignmentFile",
                    "title": "AlignmentFile"
                  },
                  {
                    "$ref": "#/components/schemas/ConfigurationFile",
                    "title": "ConfigurationFile"
                  },
                  {
                    "$ref": "#/components/schemas/GenomeBrowserAnnotationFile",
                    "title": "GenomeBrowserAnnotationFile"
                  },
                  {
                    "$ref": "#/components/schemas/ImageFile",
                    "title": "ImageFile"
                  },
                  {
                    "$ref": "#/components/schemas/MatrixFile",
                    "title": "MatrixFile"
                  },
                  {
                    "$ref": "#/components/schemas/ModelFile",
                    "title": "ModelFile"
                  },
                  {
                    "$ref": "#/components/schemas/ReferenceFile",
                    "title": "ReferenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SequenceFile",
                    "title": "SequenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SignalFile",
                    "title": "SignalFile"
                  },
                  {
                    "$ref": "#/components/schemas/TabularFile",
                    "title": "TabularFile"
                  }
                ]
              ]
            }
          },
          "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "type": "string",
            "enum": [
              "h5ad",
              "hdf5",
              "mtx",
              "tar",
              "hic"
            ]
          },
          "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Document that further explains the file format.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "file_set": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/AnalysisSet",
                  "title": "AnalysisSet"
                },
                {
                  "$ref": "#/components/schemas/AuxiliarySet",
                  "title": "AuxiliarySet"
                },
                {
                  "$ref": "#/components/schemas/ConstructLibrarySet",
                  "title": "ConstructLibrarySet"
                },
                {
                  "$ref": "#/components/schemas/CuratedSet",
                  "title": "CuratedSet"
                },
                {
                  "$ref": "#/components/schemas/MeasurementSet",
                  "title": "MeasurementSet"
                },
                {
                  "$ref": "#/components/schemas/ModelSet",
                  "title": "ModelSet"
                },
                {
                  "$ref": "#/components/schemas/PredictionSet",
                  "title": "PredictionSet"
                }
              ]
            ]
          },
          "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "type": "integer",
            "minimum": 0
          },
          "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string"
          },
          "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "file not found",
              "invalidated",
              "validated"
            ]
          },
          "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string"
          },
          "dimension1": {
            "title": "Dimension 1",
            "description": "First dimension of the matrix.",
            "type": "string",
            "enum": [
              "cell",
              "fragment",
              "gene",
              "time",
              "treatment",
              "variant",
              "genomic position"
            ]
          },
          "dimension2": {
            "title": "Dimension 2",
            "description": "Second dimension of the matrix.",
            "type": "string",
            "enum": [
              "cell",
              "fragment",
              "gene",
              "time",
              "treatment",
              "variant",
              "genomic position"
            ]
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "integrated_in": {
            "title": "Integrated In",
            "description": "Construct library set(s) that this file was used for in insert design.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Integrated In"
            }
          },
          "gene_list_for": {
            "title": "Gene List For",
            "description": "File Set(s) that this file is a gene list for.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Gene List For"
            }
          },
          "loci_list_for": {
            "title": "Loci List For",
            "description": "File Set(s) that this file is a loci list for.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Loci List For"
            }
          },
          "href": {
            "title": "Download URL",
            "description": "The download path to obtain file.",
            "type": "string"
          },
          "s3_uri": {
            "title": "S3 URI",
            "description": "The S3 URI of public file object.",
            "type": "string"
          },
          "upload_credentials": {
            "title": "Upload Credentials",
            "description": "The upload credentials for S3 to submit the file content.",
            "type": "object"
          },
          "content_summary": {
            "title": "Content Summary",
            "type": "string",
            "description": "A summary of the data in the matrix file."
          }
        }
      },
      "ModelFile": {
        "title": "Model File",
        "description": "A file containing a trained model.",
        "required": [
          "award",
          "lab",
          "md5sum",
          "file_format",
          "file_set",
          "content_type"
        ],
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "controlled_access": {
            "title": "Controlled Access",
            "description": "Boolean value, indicating the file being controlled access, if true.",
            "type": "boolean"
          },
          "anvil_url": {
            "title": "AnVIL URL",
            "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace.",
            "type": "string"
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "1"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "type": "string",
            "enum": [
              "edge weights",
              "graph structure",
              "position weight matrix"
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "pattern": "(?!)"
            }
          },
          "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/AlignmentFile",
                    "title": "AlignmentFile"
                  },
                  {
                    "$ref": "#/components/schemas/ConfigurationFile",
                    "title": "ConfigurationFile"
                  },
                  {
                    "$ref": "#/components/schemas/GenomeBrowserAnnotationFile",
                    "title": "GenomeBrowserAnnotationFile"
                  },
                  {
                    "$ref": "#/components/schemas/ImageFile",
                    "title": "ImageFile"
                  },
                  {
                    "$ref": "#/components/schemas/MatrixFile",
                    "title": "MatrixFile"
                  },
                  {
                    "$ref": "#/components/schemas/ModelFile",
                    "title": "ModelFile"
                  },
                  {
                    "$ref": "#/components/schemas/ReferenceFile",
                    "title": "ReferenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SequenceFile",
                    "title": "SequenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SignalFile",
                    "title": "SignalFile"
                  },
                  {
                    "$ref": "#/components/schemas/TabularFile",
                    "title": "TabularFile"
                  }
                ]
              ]
            }
          },
          "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "type": "string",
            "enum": [
              "hdf5",
              "json",
              "tar",
              "tsv"
            ]
          },
          "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Document that further explains the file format.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "file_set": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/AnalysisSet",
                  "title": "AnalysisSet"
                },
                {
                  "$ref": "#/components/schemas/AuxiliarySet",
                  "title": "AuxiliarySet"
                },
                {
                  "$ref": "#/components/schemas/ConstructLibrarySet",
                  "title": "ConstructLibrarySet"
                },
                {
                  "$ref": "#/components/schemas/CuratedSet",
                  "title": "CuratedSet"
                },
                {
                  "$ref": "#/components/schemas/MeasurementSet",
                  "title": "MeasurementSet"
                },
                {
                  "$ref": "#/components/schemas/ModelSet",
                  "title": "ModelSet"
                },
                {
                  "$ref": "#/components/schemas/PredictionSet",
                  "title": "PredictionSet"
                }
              ]
            ]
          },
          "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "type": "integer",
            "minimum": 0
          },
          "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string"
          },
          "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "file not found",
              "invalidated",
              "validated"
            ]
          },
          "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "integrated_in": {
            "title": "Integrated In",
            "description": "Construct library set(s) that this file was used for in insert design.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Integrated In"
            }
          },
          "gene_list_for": {
            "title": "Gene List For",
            "description": "File Set(s) that this file is a gene list for.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Gene List For"
            }
          },
          "loci_list_for": {
            "title": "Loci List For",
            "description": "File Set(s) that this file is a loci list for.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Loci List For"
            }
          },
          "href": {
            "title": "Download URL",
            "description": "The download path to obtain file.",
            "type": "string"
          },
          "s3_uri": {
            "title": "S3 URI",
            "description": "The S3 URI of public file object.",
            "type": "string"
          },
          "upload_credentials": {
            "title": "Upload Credentials",
            "description": "The upload credentials for S3 to submit the file content.",
            "type": "object"
          }
        }
      },
      "ReferenceFile": {
        "title": "Reference File",
        "description": "A file containing diverse reference related information.",
        "required": [
          "award",
          "lab",
          "md5sum",
          "file_format",
          "file_set",
          "content_type",
          "controlled_access"
        ],
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "controlled_access": {
            "title": "Controlled Access",
            "description": "Boolean value, indicating the file being controlled access, if true.",
            "type": "boolean"
          },
          "anvil_url": {
            "title": "AnVIL URL",
            "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace.",
            "type": "string"
          },
          "assembly": {
            "title": "Genome Assembly",
            "description": "Genome assembly applicable for the reference data.",
            "type": "string",
            "enum": [
              "GRCh38",
              "hg19",
              "GRCm39",
              "mm10"
            ]
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "file_format_type": {
            "title": "File Format Type",
            "description": "The subtype of bed files.",
            "type": "string",
            "enum": [
              "bed12",
              "bed3",
              "bed3+",
              "bed5",
              "bed6",
              "bed6+",
              "bed9",
              "bed9+",
              "mpra_starr"
            ]
          },
          "transcriptome_annotation": {
            "title": "Transcriptome Annotation",
            "description": "The annotation and version of the reference resource.",
            "type": "string",
            "enum": [
              "GENCODE 40",
              "GENCODE 41",
              "GENCODE 42",
              "GENCODE 43",
              "GENCODE 44",
              "GENCODE 45",
              "GENCODE M30",
              "GENCODE M31",
              "GENCODE M32",
              "GENCODE M33",
              "GENCODE M34"
            ]
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "14"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "type": "string",
            "oneOf": [
              {
                "enum": [
                  "biological_context",
                  "complexes",
                  "complexes_complexes",
                  "complexes_proteins",
                  "complexes_terms",
                  "diseases_genes",
                  "drugs",
                  "elements_genes",
                  "elements reference",
                  "exclusion list",
                  "genes",
                  "genes_genes",
                  "genes_pathways",
                  "genes_terms",
                  "genes_transcripts",
                  "genome reference",
                  "go_terms_proteins",
                  "inclusion list",
                  "motifs",
                  "motifs_proteins",
                  "ontology_terms",
                  "ontology_terms_ontology_terms",
                  "pathways",
                  "pathways_pathways",
                  "proteins",
                  "proteins_proteins",
                  "regulatory_regions",
                  "regulatory_regions_genes",
                  "regulatory_regions_genes_biosamples",
                  "regulatory_regions_genes_biosamples_donors",
                  "regulatory_regions_genes_biosamples_treatments_chebi",
                  "regulatory_regions_genes_biosamples_treatments_proteins",
                  "regulatory_regions_regulatory_regions",
                  "spike-ins",
                  "studies",
                  "studies_variants",
                  "studies_variants_phenotypes",
                  "transcriptome reference",
                  "transcripts",
                  "transcripts_proteins",
                  "variants",
                  "variants_drugs",
                  "variants_drugs_genes",
                  "variants_genes",
                  "variants_genes_terms",
                  "variants_proteins",
                  "variants_proteins_terms",
                  "variants_proteins_biosamples",
                  "variants_proteins_phenotypes",
                  "variants_regulatory_regions",
                  "variants_variants"
                ]
              },
              {
                "enum": [
                  "guide RNA sequences",
                  "sequence barcodes",
                  "vector sequences"
                ],
                "permission": "admin_only"
              }
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "External identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "minItems": 1,
              "pattern": "^(GENCODE|GRC|ENSEMBL):.+$"
            }
          },
          "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/AlignmentFile",
                    "title": "AlignmentFile"
                  },
                  {
                    "$ref": "#/components/schemas/ConfigurationFile",
                    "title": "ConfigurationFile"
                  },
                  {
                    "$ref": "#/components/schemas/GenomeBrowserAnnotationFile",
                    "title": "GenomeBrowserAnnotationFile"
                  },
                  {
                    "$ref": "#/components/schemas/ImageFile",
                    "title": "ImageFile"
                  },
                  {
                    "$ref": "#/components/schemas/MatrixFile",
                    "title": "MatrixFile"
                  },
                  {
                    "$ref": "#/components/schemas/ModelFile",
                    "title": "ModelFile"
                  },
                  {
                    "$ref": "#/components/schemas/ReferenceFile",
                    "title": "ReferenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SequenceFile",
                    "title": "SequenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SignalFile",
                    "title": "SignalFile"
                  },
                  {
                    "$ref": "#/components/schemas/TabularFile",
                    "title": "TabularFile"
                  }
                ]
              ]
            }
          },
          "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "type": "string",
            "enum": [
              "bed",
              "csv",
              "dat",
              "fasta",
              "gaf",
              "gds",
              "gtf",
              "obo",
              "owl",
              "PWM",
              "tar",
              "tsv",
              "txt",
              "vcf",
              "xml"
            ]
          },
          "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Document that further explains the file format.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "file_set": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/AnalysisSet",
                  "title": "AnalysisSet"
                },
                {
                  "$ref": "#/components/schemas/AuxiliarySet",
                  "title": "AuxiliarySet"
                },
                {
                  "$ref": "#/components/schemas/ConstructLibrarySet",
                  "title": "ConstructLibrarySet"
                },
                {
                  "$ref": "#/components/schemas/CuratedSet",
                  "title": "CuratedSet"
                },
                {
                  "$ref": "#/components/schemas/MeasurementSet",
                  "title": "MeasurementSet"
                },
                {
                  "$ref": "#/components/schemas/ModelSet",
                  "title": "ModelSet"
                },
                {
                  "$ref": "#/components/schemas/PredictionSet",
                  "title": "PredictionSet"
                }
              ]
            ]
          },
          "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "type": "integer",
            "minimum": 0
          },
          "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string"
          },
          "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "file not found",
              "invalidated",
              "validated"
            ]
          },
          "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string"
          },
          "source_url": {
            "title": "Source Url",
            "description": "Link to external resource, such as NCBI or GENCODE, where the reference data was obtained.",
            "type": "string",
            "format": "uri"
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "minItems": 1,
            "maxItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Lab",
                    "title": "Lab"
                  },
                  {
                    "$ref": "#/components/schemas/Source",
                    "title": "Source"
                  }
                ]
              ]
            }
          },
          "external": {
            "title": "External",
            "description": "Indicates whether the file was obtained from an external, non-IGVF source.",
            "type": "boolean",
            "default": false
          },
          "external_id": {
            "title": "External Identifier",
            "description": "A unique identifier for the file at its original source.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "integrated_in": {
            "title": "Integrated In",
            "description": "Construct library set(s) that this file was used for in insert design.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Integrated In"
            }
          },
          "gene_list_for": {
            "title": "Gene List For",
            "description": "File Set(s) that this file is a gene list for.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Gene List For"
            }
          },
          "loci_list_for": {
            "title": "Loci List For",
            "description": "File Set(s) that this file is a loci list for.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Loci List For"
            }
          },
          "href": {
            "title": "Download URL",
            "description": "The download path to obtain file.",
            "type": "string"
          },
          "s3_uri": {
            "title": "S3 URI",
            "description": "The S3 URI of public file object.",
            "type": "string"
          },
          "upload_credentials": {
            "title": "Upload Credentials",
            "description": "The upload credentials for S3 to submit the file content.",
            "type": "object"
          }
        }
      },
      "SequenceFile": {
        "title": "Sequence File",
        "description": "A file containing sequencing results in bam, fastq, or pod5 formats.",
        "required": [
          "award",
          "lab",
          "md5sum",
          "file_format",
          "file_set",
          "content_type",
          "sequencing_platform",
          "sequencing_run",
          "controlled_access"
        ],
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "controlled_access": {
            "title": "Controlled Access",
            "description": "Boolean value, indicating the file being controlled access, if true.",
            "type": "boolean"
          },
          "anvil_url": {
            "title": "AnVIL URL",
            "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace.",
            "type": "string"
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "14"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "type": "string",
            "enum": [
              "Nanopore reads",
              "PacBio subreads",
              "reads"
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "External identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "minItems": 1,
              "pattern": "^(SRA:(SRR|SRX)\\d+)$"
            }
          },
          "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/AlignmentFile",
                    "title": "AlignmentFile"
                  },
                  {
                    "$ref": "#/components/schemas/ConfigurationFile",
                    "title": "ConfigurationFile"
                  },
                  {
                    "$ref": "#/components/schemas/GenomeBrowserAnnotationFile",
                    "title": "GenomeBrowserAnnotationFile"
                  },
                  {
                    "$ref": "#/components/schemas/ImageFile",
                    "title": "ImageFile"
                  },
                  {
                    "$ref": "#/components/schemas/MatrixFile",
                    "title": "MatrixFile"
                  },
                  {
                    "$ref": "#/components/schemas/ModelFile",
                    "title": "ModelFile"
                  },
                  {
                    "$ref": "#/components/schemas/ReferenceFile",
                    "title": "ReferenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SequenceFile",
                    "title": "SequenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SignalFile",
                    "title": "SignalFile"
                  },
                  {
                    "$ref": "#/components/schemas/TabularFile",
                    "title": "TabularFile"
                  }
                ]
              ]
            }
          },
          "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "type": "string",
            "enum": [
              "bam",
              "fastq",
              "pod5"
            ]
          },
          "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Document that further explains the file format.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "file_set": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/AnalysisSet",
                  "title": "AnalysisSet"
                },
                {
                  "$ref": "#/components/schemas/AuxiliarySet",
                  "title": "AuxiliarySet"
                },
                {
                  "$ref": "#/components/schemas/ConstructLibrarySet",
                  "title": "ConstructLibrarySet"
                },
                {
                  "$ref": "#/components/schemas/CuratedSet",
                  "title": "CuratedSet"
                },
                {
                  "$ref": "#/components/schemas/MeasurementSet",
                  "title": "MeasurementSet"
                },
                {
                  "$ref": "#/components/schemas/ModelSet",
                  "title": "ModelSet"
                },
                {
                  "$ref": "#/components/schemas/PredictionSet",
                  "title": "PredictionSet"
                }
              ]
            ]
          },
          "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "type": "integer",
            "minimum": 0
          },
          "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string"
          },
          "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "file not found",
              "invalidated",
              "validated"
            ]
          },
          "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string"
          },
          "flowcell_id": {
            "title": "Flowcell ID",
            "description": "The alphanumeric identifier for the flowcell of a sequencing machine.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]+$"
          },
          "lane": {
            "title": "Lane",
            "description": "An integer identifying the lane of a sequencing machine.",
            "type": "integer",
            "minimum": 1
          },
          "read_count": {
            "title": "Read Count",
            "description": "Number of reads in a fastq file.",
            "type": "integer",
            "minimum": 0
          },
          "minimum_read_length": {
            "title": "Minimum Read Length",
            "description": "For high-throughput sequencing, the minimum number of contiguous nucleotides determined by sequencing.",
            "type": "integer",
            "minimum": 0,
            "maximum": 300000000
          },
          "maximum_read_length": {
            "title": "Maximum Read Length",
            "description": "For high-throughput sequencing, the maximum number of contiguous nucleotides determined by sequencing.",
            "type": "integer",
            "minimum": 0,
            "maximum": 300000000
          },
          "mean_read_length": {
            "title": "Mean Read Length",
            "description": "For high-throughput sequencing, the mean number of contiguous nucleotides determined by sequencing.",
            "type": "number",
            "minimum": 0,
            "maximum": 300000000
          },
          "sequencing_platform": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/PlatformTerm",
                  "title": "PlatformTerm"
                }
              ]
            ]
          },
          "sequencing_kit": {
            "title": "Sequencing Kit",
            "description": "A reagent kit used with a library to prepare it for sequencing.",
            "type": "string",
            "enum": [
              "HiSeq SBS Kit v4",
              "HiSeq SR Cluster Kit v4-cBot-HS",
              "HiSeq PE Cluster Kit v4-cBot-HS",
              "HiSeq SR Rapid Cluster Kit v2",
              "HiSeq PE Rapid Cluster Kit v2",
              "HiSeq Rapid SBS Kit v2",
              "HiSeq 3000/4000 SBS Kit",
              "HiSeq 3000/4000 SR Cluster Kit",
              "HiSeq 3000/4000 PE Cluster Kit",
              "MiSeq Reagent Kit v2",
              "NextSeq 500 Mid Output Kit",
              "NextSeq 500 High Output Kit",
              "NextSeq 500 Mid Output v2 Kit",
              "NextSeq 500 High Output v2 Kit",
              "NextSeq 500/550 Mid-Output v2.5 Kit",
              "NextSeq 500/550 High-Output v2.5 Kit",
              "TG NextSeq 500/550 Mid-Output Kit v2.5",
              "TG NextSeq 500/550 High-Output Kit v2.5",
              "NextSeq 1000/2000 P1 Reagent Kit",
              "NextSeq 1000/2000 P2 Reagent Kit",
              "NextSeq 1000/2000 P3 Reagent Kit",
              "NextSeq 1000/2000 P1 XLEAP-SBS Reagent Kit",
              "NextSeq 1000/2000 P2 XLEAP-SBS Reagent Kit",
              "NextSeq 2000 P3 XLEAP-SBS Reagent Kit",
              "NextSeq 2000 P4 XLEAP-SBS Reagent Kit",
              "NovaSeq 6000 SP Reagent Kit v1.5",
              "NovaSeq 6000 S1 Reagent Kit v1.5",
              "NovaSeq 6000 S2 Reagent Kit v1.5",
              "NovaSeq 6000 S4 Reagent Kit v1.5",
              "NovaSeq X Series 10B Reagent Kit",
              "ONT Ligation Sequencing Kit V14",
              "Sequel sequencing kit 3.0",
              "Sequel II sequencing kit 2.0"
            ]
          },
          "sequencing_run": {
            "title": "Sequencing Run",
            "description": "An ordinal number indicating which sequencing run of the associated library that the file belongs to.",
            "type": "integer",
            "minimum": 1
          },
          "illumina_read_type": {
            "title": "Illumina Read Type",
            "description": "The read type of the file. Relevant only for files produced using an Illumina sequencing platform.",
            "type": "string",
            "enum": [
              "R1",
              "R2",
              "R3",
              "I1",
              "I2"
            ]
          },
          "index": {
            "title": "Index",
            "description": "An Illumina index associated with the file.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "integrated_in": {
            "title": "Integrated In",
            "description": "Construct library set(s) that this file was used for in insert design.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Integrated In"
            }
          },
          "gene_list_for": {
            "title": "Gene List For",
            "description": "File Set(s) that this file is a gene list for.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Gene List For"
            }
          },
          "loci_list_for": {
            "title": "Loci List For",
            "description": "File Set(s) that this file is a loci list for.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Loci List For"
            }
          },
          "href": {
            "title": "Download URL",
            "description": "The download path to obtain file.",
            "type": "string"
          },
          "s3_uri": {
            "title": "S3 URI",
            "description": "The S3 URI of public file object.",
            "type": "string"
          },
          "upload_credentials": {
            "title": "Upload Credentials",
            "description": "The upload credentials for S3 to submit the file content.",
            "type": "object"
          },
          "seqspecs": {
            "title": "Seqspecs",
            "description": "Link(s) to the associated seqspec YAML configuration file(s).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Seqspecs"
            }
          }
        }
      },
      "SignalFile": {
        "title": "Signal File",
        "description": "A file containing analyzed sequencing data in signal form using a bigwig format.",
        "required": [
          "award",
          "lab",
          "md5sum",
          "file_format",
          "file_set",
          "content_type",
          "reference_files",
          "strand_specificity"
        ],
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "transcriptome_annotation": {
            "title": "Transcriptome Annotation",
            "description": "The annotation and version of the reference resource.",
            "type": "string",
            "enum": [
              "GENCODE 40",
              "GENCODE 41",
              "GENCODE 42",
              "GENCODE 43",
              "GENCODE 44",
              "GENCODE 45",
              "GENCODE M30",
              "GENCODE M31",
              "GENCODE M32",
              "GENCODE M33",
              "GENCODE M34"
            ]
          },
          "assembly": {
            "title": "Genome Assembly",
            "description": "Genome assembly applicable for the annotation data.",
            "type": "string",
            "enum": [
              "GRCh38",
              "GRCm39"
            ]
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "reference_files": {
            "title": "Reference Files",
            "description": "Link to the reference files used to generate this file.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/ReferenceFile",
                    "title": "ReferenceFile"
                  }
                ]
              ]
            }
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "9"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "type": "string",
            "enum": [
              "signal",
              "signal of all reads",
              "signal of unique reads",
              "signal p-value",
              "raw signal",
              "read-depth signal",
              "control signal",
              "fold change over control"
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "pattern": "(?!)"
            }
          },
          "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/AlignmentFile",
                    "title": "AlignmentFile"
                  },
                  {
                    "$ref": "#/components/schemas/ConfigurationFile",
                    "title": "ConfigurationFile"
                  },
                  {
                    "$ref": "#/components/schemas/GenomeBrowserAnnotationFile",
                    "title": "GenomeBrowserAnnotationFile"
                  },
                  {
                    "$ref": "#/components/schemas/ImageFile",
                    "title": "ImageFile"
                  },
                  {
                    "$ref": "#/components/schemas/MatrixFile",
                    "title": "MatrixFile"
                  },
                  {
                    "$ref": "#/components/schemas/ModelFile",
                    "title": "ModelFile"
                  },
                  {
                    "$ref": "#/components/schemas/ReferenceFile",
                    "title": "ReferenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SequenceFile",
                    "title": "SequenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SignalFile",
                    "title": "SignalFile"
                  },
                  {
                    "$ref": "#/components/schemas/TabularFile",
                    "title": "TabularFile"
                  }
                ]
              ]
            }
          },
          "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "type": "string",
            "enum": [
              "bigWig"
            ]
          },
          "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Document that further explains the file format.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "file_set": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/AnalysisSet",
                  "title": "AnalysisSet"
                },
                {
                  "$ref": "#/components/schemas/AuxiliarySet",
                  "title": "AuxiliarySet"
                },
                {
                  "$ref": "#/components/schemas/ConstructLibrarySet",
                  "title": "ConstructLibrarySet"
                },
                {
                  "$ref": "#/components/schemas/CuratedSet",
                  "title": "CuratedSet"
                },
                {
                  "$ref": "#/components/schemas/MeasurementSet",
                  "title": "MeasurementSet"
                },
                {
                  "$ref": "#/components/schemas/ModelSet",
                  "title": "ModelSet"
                },
                {
                  "$ref": "#/components/schemas/PredictionSet",
                  "title": "PredictionSet"
                }
              ]
            ]
          },
          "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "type": "integer",
            "minimum": 0
          },
          "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string"
          },
          "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "file not found",
              "invalidated",
              "validated"
            ]
          },
          "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string"
          },
          "strand_specificity": {
            "title": "Strand Specificity",
            "description": "The strandedness of the signal file: plus, minus, or unstranded.",
            "type": "string",
            "enum": [
              "plus",
              "minus",
              "unstranded"
            ]
          },
          "filtered": {
            "title": "Filtered",
            "description": "Indicates if the signal file is filtered.",
            "type": "boolean"
          },
          "normalized": {
            "title": "Normalized",
            "description": "Indicates if the signal file is normalized.",
            "type": "boolean"
          },
          "start_view_position": {
            "title": "Start View Position",
            "description": "The 0-based coordinate for the default starting position when viewing the signal in a genome browser.",
            "type": "string",
            "pattern": "^(chr(X|Y|M|[1-9]|1[0-9]|2[0-2]):[0-9]+)$"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "integrated_in": {
            "title": "Integrated In",
            "description": "Construct library set(s) that this file was used for in insert design.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Integrated In"
            }
          },
          "gene_list_for": {
            "title": "Gene List For",
            "description": "File Set(s) that this file is a gene list for.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Gene List For"
            }
          },
          "loci_list_for": {
            "title": "Loci List For",
            "description": "File Set(s) that this file is a loci list for.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Loci List For"
            }
          },
          "href": {
            "title": "Download URL",
            "description": "The download path to obtain file.",
            "type": "string"
          },
          "s3_uri": {
            "title": "S3 URI",
            "description": "The S3 URI of public file object.",
            "type": "string"
          },
          "upload_credentials": {
            "title": "Upload Credentials",
            "description": "The upload credentials for S3 to submit the file content.",
            "type": "object"
          },
          "content_summary": {
            "title": "Content Summary",
            "type": "string",
            "description": "A summary of the data in the signal file."
          }
        }
      },
      "TabularFile": {
        "title": "Tabular File",
        "description": "A file containing textual data with a tabular structure.",
        "required": [
          "award",
          "lab",
          "md5sum",
          "file_format",
          "file_set",
          "content_type",
          "controlled_access"
        ],
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "controlled_access": {
            "title": "Controlled Access",
            "description": "Boolean value, indicating the file being controlled access, if true.",
            "type": "boolean"
          },
          "anvil_url": {
            "title": "AnVIL URL",
            "description": "URL linking to the controlled access file that has been deposited at AnVIL workspace.",
            "type": "string"
          },
          "assembly": {
            "title": "Genome Assembly",
            "description": "Genome assembly applicable for the tabular data.",
            "type": "string",
            "enum": [
              "GRCh38",
              "GRCm39"
            ]
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "file_format_type": {
            "title": "File Format Type",
            "description": "The subtype of bed files.",
            "type": "string",
            "enum": [
              "bed12",
              "bed3",
              "bed3+",
              "bed5",
              "bed6",
              "bed6+",
              "bed9",
              "bed9+",
              "mpra_starr"
            ]
          },
          "transcriptome_annotation": {
            "title": "Transcriptome Annotation",
            "description": "The annotation and version of the reference resource.",
            "type": "string",
            "enum": [
              "GENCODE 40",
              "GENCODE 41",
              "GENCODE 42",
              "GENCODE 43",
              "GENCODE 44",
              "GENCODE 45",
              "GENCODE M30",
              "GENCODE M31",
              "GENCODE M32",
              "GENCODE M33",
              "GENCODE M34"
            ]
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "11"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "type": "string",
            "enum": [
              "barcode to element mapping",
              "barcode to sample mapping",
              "differential gene expression quantifications",
              "differential transcript expression quantifications",
              "element quantifications",
              "elements reference",
              "fold change over control",
              "guide quantifications",
              "guide RNA sequences",
              "MPRA sequence designs",
              "peaks",
              "protein to protein interaction score",
              "sample sort parameters",
              "sequence barcodes",
              "variant effects",
              "variant to element mapping"
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
              "type": "string",
              "pattern": "(?!)"
            }
          },
          "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/AlignmentFile",
                    "title": "AlignmentFile"
                  },
                  {
                    "$ref": "#/components/schemas/ConfigurationFile",
                    "title": "ConfigurationFile"
                  },
                  {
                    "$ref": "#/components/schemas/GenomeBrowserAnnotationFile",
                    "title": "GenomeBrowserAnnotationFile"
                  },
                  {
                    "$ref": "#/components/schemas/ImageFile",
                    "title": "ImageFile"
                  },
                  {
                    "$ref": "#/components/schemas/MatrixFile",
                    "title": "MatrixFile"
                  },
                  {
                    "$ref": "#/components/schemas/ModelFile",
                    "title": "ModelFile"
                  },
                  {
                    "$ref": "#/components/schemas/ReferenceFile",
                    "title": "ReferenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SequenceFile",
                    "title": "SequenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SignalFile",
                    "title": "SignalFile"
                  },
                  {
                    "$ref": "#/components/schemas/TabularFile",
                    "title": "TabularFile"
                  }
                ]
              ]
            }
          },
          "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "type": "string",
            "enum": [
              "bed",
              "csv",
              "gtf",
              "tsv",
              "txt",
              "vcf"
            ]
          },
          "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Document that further explains the file format.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "file_set": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/AnalysisSet",
                  "title": "AnalysisSet"
                },
                {
                  "$ref": "#/components/schemas/AuxiliarySet",
                  "title": "AuxiliarySet"
                },
                {
                  "$ref": "#/components/schemas/ConstructLibrarySet",
                  "title": "ConstructLibrarySet"
                },
                {
                  "$ref": "#/components/schemas/CuratedSet",
                  "title": "CuratedSet"
                },
                {
                  "$ref": "#/components/schemas/MeasurementSet",
                  "title": "MeasurementSet"
                },
                {
                  "$ref": "#/components/schemas/ModelSet",
                  "title": "ModelSet"
                },
                {
                  "$ref": "#/components/schemas/PredictionSet",
                  "title": "PredictionSet"
                }
              ]
            ]
          },
          "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "type": "integer",
            "minimum": 0
          },
          "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
          },
          "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string"
          },
          "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "file not found",
              "invalidated",
              "validated"
            ]
          },
          "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "integrated_in": {
            "title": "Integrated In",
            "description": "Construct library set(s) that this file was used for in insert design.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Integrated In"
            }
          },
          "gene_list_for": {
            "title": "Gene List For",
            "description": "File Set(s) that this file is a gene list for.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Gene List For"
            }
          },
          "loci_list_for": {
            "title": "Loci List For",
            "description": "File Set(s) that this file is a loci list for.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Loci List For"
            }
          },
          "href": {
            "title": "Download URL",
            "description": "The download path to obtain file.",
            "type": "string"
          },
          "s3_uri": {
            "title": "S3 URI",
            "description": "The S3 URI of public file object.",
            "type": "string"
          },
          "upload_credentials": {
            "title": "Upload Credentials",
            "description": "The upload credentials for S3 to submit the file content.",
            "type": "object"
          }
        }
      },
      "AnalysisSet": {
        "title": "Analysis Set",
        "description": "A file set for analyses. Analysis sets represent the results of a computational analysis of raw genomic data or other analyses.",
        "type": "object",
        "required": [
          "award",
          "lab",
          "file_set_type"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "publication_identifiers": {
            "title": "Publication Identifiers",
            "description": "The publication identifiers that provide more information about the object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Publication Identifier",
              "description": "A publication identifier that provides more information about the object.",
              "type": "string",
              "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$"
            }
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "7"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "title": "External identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
              "type": "string",
              "pattern": "^GEO:GSE\\d+$"
            }
          },
          "samples": {
            "title": "Samples",
            "description": "The sample(s) associated with this file set.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/InVitroSystem",
                    "title": "InVitroSystem"
                  },
                  {
                    "$ref": "#/components/schemas/MultiplexedSample",
                    "title": "MultiplexedSample"
                  },
                  {
                    "$ref": "#/components/schemas/PrimaryCell",
                    "title": "PrimaryCell"
                  },
                  {
                    "$ref": "#/components/schemas/TechnicalSample",
                    "title": "TechnicalSample"
                  },
                  {
                    "$ref": "#/components/schemas/Tissue",
                    "title": "Tissue"
                  },
                  {
                    "$ref": "#/components/schemas/WholeOrganism",
                    "title": "WholeOrganism"
                  }
                ]
              ]
            }
          },
          "donors": {
            "title": "Donors",
            "description": "The donors of the samples associated with this analysis set.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/HumanDonor",
                    "title": "HumanDonor"
                  },
                  {
                    "$ref": "#/components/schemas/RodentDonor",
                    "title": "RodentDonor"
                  }
                ]
              ]
            }
          },
          "file_set_type": {
            "title": "File Set Type",
            "description": "The level of this analysis set. An intermediate analysis cannot be interpreted on its own and is part of a principal analysis. A principal analysis is the core analysis for an experimental design, the results of which can be interpretable on their own.",
            "type": "string",
            "enum": [
              "intermediate analysis",
              "principal analysis"
            ]
          },
          "input_file_sets": {
            "title": "Input File Sets",
            "description": "The file set(s) required for this analysis.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/AnalysisSet",
                    "title": "AnalysisSet"
                  },
                  {
                    "$ref": "#/components/schemas/AuxiliarySet",
                    "title": "AuxiliarySet"
                  },
                  {
                    "$ref": "#/components/schemas/ConstructLibrarySet",
                    "title": "ConstructLibrarySet"
                  },
                  {
                    "$ref": "#/components/schemas/CuratedSet",
                    "title": "CuratedSet"
                  },
                  {
                    "$ref": "#/components/schemas/MeasurementSet",
                    "title": "MeasurementSet"
                  },
                  {
                    "$ref": "#/components/schemas/ModelSet",
                    "title": "ModelSet"
                  },
                  {
                    "$ref": "#/components/schemas/PredictionSet",
                    "title": "PredictionSet"
                  }
                ]
              ]
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "files": {
            "title": "Files",
            "type": "array",
            "description": "The files associated with this file set.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "File"
            }
          },
          "control_for": {
            "title": "File Sets Controlled By This File Set",
            "type": "array",
            "description": "The file sets for which this file set is a control.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "File Set Controlled By This File Set"
            }
          },
          "submitted_files_timestamp": {
            "title": "Submitted Files Timestamp",
            "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
            "type": "string",
            "format": "date-time"
          },
          "input_file_set_for": {
            "title": "Input File Set For",
            "description": "The Analysis Sets that use this File Set as an input.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Input File Set For"
            }
          },
          "assay_titles": {
            "title": "Assay Titles",
            "description": "Title(s) of assays that produced data analyzed in the analysis set.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Assay Title",
              "description": "Title of assay that produced data analyzed in the analysis set.",
              "type": "string"
            }
          }
        }
      },
      "AuxiliarySet": {
        "title": "Auxiliary Set",
        "description": "A file set for auxiliary raw data files that were produced alongside raw data files from a measurement set. For example, in a CRISPR screen experiment the measurement set would capture the result of single-cell transcript sequencing and the auxiliary set the result of gRNA sequencing with the associated cellular barcodes.",
        "type": "object",
        "required": [
          "lab",
          "award",
          "file_set_type"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "publication_identifiers": {
            "title": "Publication Identifiers",
            "description": "The publication identifiers that provide more information about the object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Publication Identifier",
              "description": "A publication identifier that provides more information about the object.",
              "type": "string",
              "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$"
            }
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string",
            "format": "uri"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "7"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "title": "External identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
              "type": "string",
              "pattern": "^GEO:GSE\\d+$"
            }
          },
          "samples": {
            "title": "Samples",
            "description": "The sample(s) associated with this file set.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/InVitroSystem",
                    "title": "InVitroSystem"
                  },
                  {
                    "$ref": "#/components/schemas/MultiplexedSample",
                    "title": "MultiplexedSample"
                  },
                  {
                    "$ref": "#/components/schemas/PrimaryCell",
                    "title": "PrimaryCell"
                  },
                  {
                    "$ref": "#/components/schemas/TechnicalSample",
                    "title": "TechnicalSample"
                  },
                  {
                    "$ref": "#/components/schemas/Tissue",
                    "title": "Tissue"
                  },
                  {
                    "$ref": "#/components/schemas/WholeOrganism",
                    "title": "WholeOrganism"
                  }
                ]
              ]
            }
          },
          "donors": {
            "title": "Donors",
            "description": "The donors of the samples associated with this auxiliary set.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/HumanDonor",
                    "title": "HumanDonor"
                  },
                  {
                    "$ref": "#/components/schemas/RodentDonor",
                    "title": "RodentDonor"
                  }
                ]
              ]
            }
          },
          "file_set_type": {
            "title": "File Set Type",
            "description": "The category that best describes this auxiliary file set.",
            "type": "string",
            "enum": [
              "cell hashing",
              "cell sorting",
              "circularized barcode detection",
              "gRNA sequencing",
              "oligo-conjugated lipids",
              "quantification barcode sequencing",
              "variant sequencing"
            ]
          },
          "library_construction_platform": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/PlatformTerm",
                  "title": "PlatformTerm"
                }
              ]
            ]
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "files": {
            "title": "Files",
            "type": "array",
            "description": "The files associated with this file set.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "File"
            }
          },
          "control_for": {
            "title": "File Sets Controlled By This File Set",
            "type": "array",
            "description": "The file sets for which this file set is a control.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "File Set Controlled By This File Set"
            }
          },
          "submitted_files_timestamp": {
            "title": "Submitted Files Timestamp",
            "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
            "type": "string",
            "format": "date-time"
          },
          "input_file_set_for": {
            "title": "Input File Set For",
            "description": "The Analysis Sets that use this File Set as an input.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Input File Set For"
            }
          },
          "measurement_sets": {
            "title": "Measurement Sets",
            "description": "The measurement sets that link to this auxiliary set.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Measurement Set"
            }
          }
        }
      },
      "ConstructLibrarySet": {
        "title": "Construct Library Set",
        "description": "A file set containing raw data files resulting from sequencing of the library delivered to the sample. For example, a guide RNA library.",
        "type": "object",
        "required": [
          "award",
          "lab",
          "file_set_type",
          "selection_criteria",
          "scope"
        ],
        "additionalProperties": false,
        "properties": {
          "small_scale_loci_list": {
            "title": "Small Scale Loci List",
            "description": "A small scale (<=100) list of specific chromosomal region(s).",
            "type": "array",
            "minItems": 1,
            "maxItems": 100,
            "uniqueItems": true,
            "items": {
              "title": "Locus",
              "type": "object",
              "required": [
                "assembly",
                "chromosome",
                "start",
                "end"
              ],
              "additionalProperties": false,
              "properties": {
                "assembly": {
                  "title": "Mapping assembly",
                  "description": "The genome assembly to which coordinates relate (e.g., GRCh38).",
                  "type": "string",
                  "enum": [
                    "GRCh38",
                    "GRCm39"
                  ]
                },
                "chromosome": {
                  "title": "Chromosome",
                  "description": "The number (or letter) designation for the chromosome, e.g. chr1 or chrX",
                  "type": "string",
                  "pattern": "^(chr[0-9A-Za-z_]+)$"
                },
                "start": {
                  "title": "Start",
                  "description": "The 1-based, closed (inclusive) starting coordinate.",
                  "type": "integer",
                  "minimum": 1
                },
                "end": {
                  "title": "End",
                  "description": "The 1-based, closed (inclusive) ending coordinate.",
                  "type": "integer",
                  "minimum": 1
                }
              }
            }
          },
          "large_scale_loci_list": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/ReferenceFile",
                  "title": "ReferenceFile"
                },
                {
                  "$ref": "#/components/schemas/TabularFile",
                  "title": "TabularFile"
                }
              ]
            ]
          },
          "small_scale_gene_list": {
            "title": "Small Scale Gene List",
            "description": "The specific, small scale list of (<=100) gene(s) this construct library was designed to target.",
            "type": "array",
            "minItems": 1,
            "maxItems": 100,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Gene",
                    "title": "Gene"
                  }
                ]
              ]
            }
          },
          "large_scale_gene_list": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/ReferenceFile",
                  "title": "ReferenceFile"
                },
                {
                  "$ref": "#/components/schemas/TabularFile",
                  "title": "TabularFile"
                }
              ]
            ]
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "publication_identifiers": {
            "title": "Publication Identifiers",
            "description": "The publication identifiers that provide more information about the object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Publication Identifier",
              "description": "A publication identifier that provides more information about the object.",
              "type": "string",
              "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$"
            }
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "minItems": 1,
            "maxItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Lab",
                    "title": "Lab"
                  },
                  {
                    "$ref": "#/components/schemas/Source",
                    "title": "Source"
                  }
                ]
              ]
            }
          },
          "lot_id": {
            "title": "Lot ID",
            "description": "The lot identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "product_id": {
            "title": "Product ID",
            "description": "The product or catalog identifier provided following deposition to addgene.org.",
            "type": "string",
            "pattern": "^addgene:\\d{5,6}$"
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "8"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "file_set_type": {
            "title": "File Set Type",
            "description": "The type or category of this construct library set.",
            "type": "string",
            "enum": [
              "guide library",
              "reporter library",
              "expression vector library"
            ]
          },
          "scope": {
            "title": "Library Construct Scope",
            "description": "The scope or scale that this construct library is designed to target. If the scope is across gene(s) or loci, these will need to be specified in the genes or loci property. If exon is specified, an exon identifier and the associated gene will need to be listed in exon and genes properties. If tile is specified, a tile identifier, start and stop coordinates, and the associated gene will need to be listed in tile and small_scale_gene_list or large_scale_gene_list properties.",
            "type": "string",
            "enum": [
              "tile",
              "exon",
              "genes",
              "loci",
              "genome-wide",
              "interactors"
            ]
          },
          "selection_criteria": {
            "title": "Selection Criteria",
            "description": "The criteria used to select the sequence material cloned into the library.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Selection Criterion",
              "description": "The criterion used to select or design the sequence material cloned into the library.",
              "type": "string",
              "enum": [
                "accessible genome regions",
                "candidate cis-regulatory elements",
                "chromatin states",
                "phenotype-associated variants",
                "DNase hypersensitive sites",
                "genes",
                "histone modifications",
                "protein interactors",
                "sequence variants",
                "synthetic elements",
                "transcription start sites",
                "TF binding sites"
              ]
            }
          },
          "integrated_content_files": {
            "title": "Integrated Content Files",
            "description": "The files containing sequence material of interest either used for insert design or directly cloned into vectors in this library.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/AlignmentFile",
                    "title": "AlignmentFile"
                  },
                  {
                    "$ref": "#/components/schemas/ConfigurationFile",
                    "title": "ConfigurationFile"
                  },
                  {
                    "$ref": "#/components/schemas/GenomeBrowserAnnotationFile",
                    "title": "GenomeBrowserAnnotationFile"
                  },
                  {
                    "$ref": "#/components/schemas/ImageFile",
                    "title": "ImageFile"
                  },
                  {
                    "$ref": "#/components/schemas/MatrixFile",
                    "title": "MatrixFile"
                  },
                  {
                    "$ref": "#/components/schemas/ModelFile",
                    "title": "ModelFile"
                  },
                  {
                    "$ref": "#/components/schemas/ReferenceFile",
                    "title": "ReferenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SequenceFile",
                    "title": "SequenceFile"
                  },
                  {
                    "$ref": "#/components/schemas/SignalFile",
                    "title": "SignalFile"
                  },
                  {
                    "$ref": "#/components/schemas/TabularFile",
                    "title": "TabularFile"
                  }
                ]
              ]
            }
          },
          "associated_phenotypes": {
            "title": "Associated Phenotypes",
            "description": "Ontological terms for diseases or phenotypes associated with the sequence material cloned in this construct library.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/PhenotypeTerm",
                    "title": "PhenotypeTerm"
                  }
                ]
              ]
            }
          },
          "orf_list": {
            "title": "List of Open Reading Frames (ORF)",
            "description": "List of Open Reading Frame this construct library was designed to target.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/OpenReadingFrame",
                    "title": "OpenReadingFrame"
                  }
                ]
              ]
            }
          },
          "exon": {
            "title": "Exon",
            "description": "An identifier in plain text for the specific exon in an expression vector library. The associated gene must be listed in the small_scale_gene_list property.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "tile": {
            "title": "Tile",
            "description": "The coordinates and an identifier in plain text for the specific tile of a protein region cloned in an expression vector library. The associated gene for this protein must be listed in the small_scale_gene_list or large_scale_gene_list property.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "tile_id": {
                "title": "Tile ID",
                "description": "An identifier in plain text for the specific tile of a protein region cloned in an expression vector library.",
                "type": "string",
                "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
              },
              "tile_start": {
                "title": "Tile Start",
                "description": "The 1-based, closed (inclusive) starting coordinate.",
                "type": "integer",
                "minimum": 1
              },
              "tile_end": {
                "title": "Tile End",
                "description": "The 1-based, closed (inclusive) ending coordinate.",
                "type": "integer",
                "minimum": 1
              }
            }
          },
          "guide_type": {
            "title": "Guide Type",
            "description": "The design of guides used in a CRISPR library, paired-guide (pgRNA) or single-guide (sgRNA).",
            "type": "string",
            "enum": [
              "sgRNA",
              "pgRNA"
            ]
          },
          "tiling_modality": {
            "title": "Tiling Modality",
            "description": "The tiling modality of guides across elements or loci in a CRISPR library.",
            "type": "string",
            "enum": [
              "peak tiling",
              "full tiling",
              "sparse peaks"
            ]
          },
          "average_guide_coverage": {
            "title": "Average Guide Coverage",
            "description": "The average number of guides targeting each element of interest in the library.",
            "type": "number",
            "minimum": 0
          },
          "lower_bound_guide_coverage": {
            "title": "Lower Bound Guide Coverage",
            "description": "Lower bound of the number of guides targeting each element of interest in the library.",
            "type": "integer"
          },
          "upper_bound_guide_coverage": {
            "title": "Upper Bound Guide Coverage",
            "description": "Upper bound of the number of guides targeting each element of interest in the library.",
            "type": "integer"
          },
          "average_insert_size": {
            "title": "Average Insert Size",
            "description": "The average size of the inserts cloned into vectors in the library.",
            "type": "number",
            "minimum": 0
          },
          "lower_bound_insert_size": {
            "title": "Lower Bound Insert Size",
            "description": "Lower bound of the size of the inserts cloned in vectors in the library.",
            "type": "integer"
          },
          "upper_bound_insert_size": {
            "title": "Upper Bound Insert Size",
            "description": "Upper bound of the size of the inserts cloned in vectors in the library.",
            "type": "integer"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "files": {
            "title": "Files",
            "type": "array",
            "description": "The files associated with this file set.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "File"
            }
          },
          "control_for": {
            "title": "File Sets Controlled By This File Set",
            "type": "array",
            "description": "The file sets for which this file set is a control.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "File Set Controlled By This File Set"
            }
          },
          "submitted_files_timestamp": {
            "title": "Submitted Files Timestamp",
            "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
            "type": "string",
            "format": "date-time"
          },
          "input_file_set_for": {
            "title": "Input File Set For",
            "description": "The Analysis Sets that use this File Set as an input.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Input File Set For"
            }
          },
          "applied_to_samples": {
            "title": "Applied to Samples",
            "description": "The samples that link to this construct library set.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Applied to Sample"
            }
          }
        }
      },
      "CuratedSet": {
        "title": "Curated Set",
        "description": "A file set for reference files which are utilized in the analysis of IGVF experiments. For example, genomic references from GENCODE.",
        "type": "object",
        "required": [
          "lab",
          "award",
          "file_set_type"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "taxa": {
            "title": "Taxa",
            "type": "string",
            "description": "The species of the organism.",
            "enum": [
              "Homo sapiens",
              "Mus musculus"
            ]
          },
          "publication_identifiers": {
            "title": "Publication Identifiers",
            "description": "The publication identifiers that provide more information about the object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Publication Identifier",
              "description": "A publication identifier that provides more information about the object.",
              "type": "string",
              "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$"
            }
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string",
            "format": "uri"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "7"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "title": "External identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
              "type": "string",
              "pattern": "^GEO:GSE\\d+$"
            }
          },
          "samples": {
            "title": "Samples",
            "description": "The sample(s) associated with this file set.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/InVitroSystem",
                    "title": "InVitroSystem"
                  },
                  {
                    "$ref": "#/components/schemas/MultiplexedSample",
                    "title": "MultiplexedSample"
                  },
                  {
                    "$ref": "#/components/schemas/PrimaryCell",
                    "title": "PrimaryCell"
                  },
                  {
                    "$ref": "#/components/schemas/TechnicalSample",
                    "title": "TechnicalSample"
                  },
                  {
                    "$ref": "#/components/schemas/Tissue",
                    "title": "Tissue"
                  },
                  {
                    "$ref": "#/components/schemas/WholeOrganism",
                    "title": "WholeOrganism"
                  }
                ]
              ]
            }
          },
          "donors": {
            "title": "Donors",
            "description": "The donor(s) associated with this file set.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/HumanDonor",
                    "title": "HumanDonor"
                  },
                  {
                    "$ref": "#/components/schemas/RodentDonor",
                    "title": "RodentDonor"
                  }
                ]
              ]
            }
          },
          "file_set_type": {
            "title": "File Set Type",
            "description": "The category that best describes this curated file set.",
            "type": "string",
            "enum": [
              "barcodes",
              "elements",
              "external data for catalog",
              "genome",
              "genes",
              "guide RNAs",
              "transcriptome",
              "variants"
            ]
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "files": {
            "title": "Files",
            "type": "array",
            "description": "The files associated with this file set.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "File"
            }
          },
          "control_for": {
            "title": "File Sets Controlled By This File Set",
            "type": "array",
            "description": "The file sets for which this file set is a control.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "File Set Controlled By This File Set"
            }
          },
          "submitted_files_timestamp": {
            "title": "Submitted Files Timestamp",
            "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
            "type": "string",
            "format": "date-time"
          },
          "input_file_set_for": {
            "title": "Input File Set For",
            "description": "The Analysis Sets that use this File Set as an input.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Input File Set For"
            }
          },
          "assemblies": {
            "title": "Assemblies",
            "description": "The genome assemblies to which the referencing files in the file set are utilizing (e.g., GRCh38).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Assembly",
              "type": "string"
            }
          },
          "transcriptome_annotations": {
            "title": "Transcriptome Annotations",
            "description": "The annotation versions of the reference resource.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Transcriptome Annotation",
              "type": "string"
            }
          }
        }
      },
      "MeasurementSet": {
        "title": "Measurement Set",
        "description": "A file set for a distinct measurement, such as the sequencing of a genomic library generated by an experiment performed on a cell line. A measurement set contains the raw data files generated by the measurement.",
        "type": "object",
        "required": [
          "award",
          "lab",
          "assay_term",
          "samples",
          "file_set_type"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "publication_identifiers": {
            "title": "Publication Identifiers",
            "description": "The publication identifiers that provide more information about the object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Publication Identifier",
              "description": "A publication identifier that provides more information about the object.",
              "type": "string",
              "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$"
            }
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "17"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "title": "External identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
              "type": "string",
              "pattern": "^GEO:GSE\\d+$"
            }
          },
          "samples": {
            "title": "Samples",
            "description": "The sample(s) associated with this file set.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/InVitroSystem",
                    "title": "InVitroSystem"
                  },
                  {
                    "$ref": "#/components/schemas/MultiplexedSample",
                    "title": "MultiplexedSample"
                  },
                  {
                    "$ref": "#/components/schemas/PrimaryCell",
                    "title": "PrimaryCell"
                  },
                  {
                    "$ref": "#/components/schemas/TechnicalSample",
                    "title": "TechnicalSample"
                  },
                  {
                    "$ref": "#/components/schemas/Tissue",
                    "title": "Tissue"
                  },
                  {
                    "$ref": "#/components/schemas/WholeOrganism",
                    "title": "WholeOrganism"
                  }
                ]
              ]
            },
            "maxItems": 1
          },
          "donors": {
            "title": "Donors",
            "description": "The donors of the samples associated with this measurement set.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/HumanDonor",
                    "title": "HumanDonor"
                  },
                  {
                    "$ref": "#/components/schemas/RodentDonor",
                    "title": "RodentDonor"
                  }
                ]
              ]
            }
          },
          "file_set_type": {
            "title": "File Set Type",
            "description": "The category that best describes this measurement set.",
            "type": "string",
            "enum": [
              "experimental data"
            ],
            "default": "experimental data"
          },
          "assay_term": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/AssayTerm",
                  "title": "AssayTerm"
                }
              ]
            ]
          },
          "library_construction_platform": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/PlatformTerm",
                  "title": "PlatformTerm"
                }
              ]
            ]
          },
          "protocols": {
            "title": "Protocols",
            "description": "Links to the protocol(s) for conducting the assay on Protocols.io.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Protocol",
              "type": "string",
              "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
            }
          },
          "preferred_assay_title": {
            "title": "Preferred Assay Title",
            "description": "The custom lab preferred label for the experiment performed in this measurement set.",
            "type": "string",
            "enum": [
              "10x multiome",
              "10x multiome with MULTI-seq",
              "AAV-MPRA",
              "ATAC-seq",
              "CERES-seq",
              "Cell painting",
              "CRISPR FlowFISH",
              "DOGMA-seq",
              "Histone ChIP-seq",
              "lentiMPRA",
              "MERFISH",
              "MIAA",
              "mN2H",
              "MPRA",
              "MPRA (scQer)",
              "MULTI-seq",
              "Parse SPLiT-seq",
              "Perturb-seq",
              "RNA-seq",
              "SGE",
              "scATAC-seq",
              "scNT-seq",
              "scNT-seq2",
              "scRNA-seq",
              "semi-qY2H",
              "SHARE-seq",
              "smFISH",
              "snATAC-seq",
              "snmC-Seq2",
              "snMCT-seq",
              "snM3C-seq",
              "snRNA-seq",
              "SUPERSTARR",
              "TAP-seq",
              "TF ChIP-seq",
              "VAMP-seq",
              "Variant FlowFISH",
              "Variant painting",
              "Y2H",
              "yN2H"
            ]
          },
          "multiome_size": {
            "title": "Multiome Size",
            "description": "The number of datasets included in the multiome experiment this measurement set is a part of.",
            "type": "integer",
            "minimum": 2
          },
          "control_file_sets": {
            "title": "Controls",
            "description": "File sets that can serve as scientific controls for this measurement_set.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/AnalysisSet",
                    "title": "AnalysisSet"
                  },
                  {
                    "$ref": "#/components/schemas/AuxiliarySet",
                    "title": "AuxiliarySet"
                  },
                  {
                    "$ref": "#/components/schemas/ConstructLibrarySet",
                    "title": "ConstructLibrarySet"
                  },
                  {
                    "$ref": "#/components/schemas/CuratedSet",
                    "title": "CuratedSet"
                  },
                  {
                    "$ref": "#/components/schemas/MeasurementSet",
                    "title": "MeasurementSet"
                  },
                  {
                    "$ref": "#/components/schemas/ModelSet",
                    "title": "ModelSet"
                  },
                  {
                    "$ref": "#/components/schemas/PredictionSet",
                    "title": "PredictionSet"
                  }
                ]
              ]
            }
          },
          "sequencing_library_types": {
            "title": "Sequencing Library Types",
            "description": "Description of the libraries sequenced in this measurement set.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Sequencing Library Type",
              "type": "string",
              "enum": [
                "direct RNA",
                "exome capture",
                "mRNA enriched",
                "rRNA depleted",
                "polyA depleted",
                "polyA enriched"
              ]
            }
          },
          "auxiliary_sets": {
            "title": "Auxiliary Sets",
            "description": "The auxiliary sets of files produced alongside raw data from this measurement set.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/AuxiliarySet",
                    "title": "AuxiliarySet"
                  }
                ]
              ]
            }
          },
          "external_image_url": {
            "title": "External Image URL",
            "description": "Links to the external site where images produced by this measurement are stored.",
            "type": "string",
            "format": "uri",
            "pattern": "^https://cellpainting-gallery\\.s3\\.amazonaws\\.com(\\S+)$"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "files": {
            "title": "Files",
            "type": "array",
            "description": "The files associated with this file set.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "File"
            }
          },
          "control_for": {
            "title": "File Sets Controlled By This File Set",
            "type": "array",
            "description": "The file sets for which this file set is a control.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "File Set Controlled By This File Set"
            }
          },
          "submitted_files_timestamp": {
            "title": "Submitted Files Timestamp",
            "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
            "type": "string",
            "format": "date-time"
          },
          "input_file_set_for": {
            "title": "Input File Set For",
            "description": "The Analysis Sets that use this File Set as an input.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Input File Set For"
            }
          },
          "related_multiome_datasets": {
            "title": "Related Multiome Datasets",
            "description": "Related datasets included in the multiome experiment this measurement set is a part of.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/MeasurementSet",
                    "title": "MeasurementSet"
                  }
                ]
              ]
            }
          }
        }
      },
      "ModelSet": {
        "title": "Model Set",
        "description": "A file set grouping files that represent trained predictive models. Model file sets contain data files that could be used by predictive modeling software to generate predictions or annotations of genomic features such as genomic variants.",
        "type": "object",
        "required": [
          "lab",
          "award",
          "model_name",
          "file_set_type",
          "model_version",
          "prediction_objects",
          "software_version"
        ],
        "not": {
          "anyOf": [
            {
              "required": [
                "samples"
              ]
            },
            {
              "required": [
                "donors"
              ]
            }
          ]
        },
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "publication_identifiers": {
            "title": "Publication Identifiers",
            "description": "The publication identifiers that provide more information about the object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Publication Identifier",
              "description": "A publication identifier that provides more information about the object.",
              "type": "string",
              "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$"
            }
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string",
            "format": "uri"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "3"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "title": "External identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
              "type": "string",
              "pattern": "^GEO:GSE\\d+$"
            }
          },
          "samples": {
            "title": "Samples",
            "description": "The sample(s) associated with this file set.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/InVitroSystem",
                    "title": "InVitroSystem"
                  },
                  {
                    "$ref": "#/components/schemas/MultiplexedSample",
                    "title": "MultiplexedSample"
                  },
                  {
                    "$ref": "#/components/schemas/PrimaryCell",
                    "title": "PrimaryCell"
                  },
                  {
                    "$ref": "#/components/schemas/TechnicalSample",
                    "title": "TechnicalSample"
                  },
                  {
                    "$ref": "#/components/schemas/Tissue",
                    "title": "Tissue"
                  },
                  {
                    "$ref": "#/components/schemas/WholeOrganism",
                    "title": "WholeOrganism"
                  }
                ]
              ]
            }
          },
          "donors": {
            "title": "Donors",
            "description": "The donor(s) associated with this file set.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/HumanDonor",
                    "title": "HumanDonor"
                  },
                  {
                    "$ref": "#/components/schemas/RodentDonor",
                    "title": "RodentDonor"
                  }
                ]
              ]
            }
          },
          "file_set_type": {
            "title": "File Set Type",
            "description": "The category that best describes this predictive model set.",
            "type": "string",
            "enum": [
              "neural network",
              "random forest",
              "decision tree",
              "support vector machine"
            ]
          },
          "model_name": {
            "title": "Model Name",
            "description": "The custom lab name given to this predictive model set.",
            "type": "string"
          },
          "model_version": {
            "title": "Model Version",
            "description": "The semantic version number for this predictive model set.",
            "type": "string",
            "pattern": "^v(?!0\\.0\\.0$)[0-9]+\\.[0-9]+\\.[0-9]+$"
          },
          "prediction_objects": {
            "title": "Prediction Objects",
            "description": "The objects this predictive model set is targeting.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "title": "Prediction Object",
              "description": "An object this predictive model set is targeting.",
              "type": "string",
              "enum": [
                "coding variants",
                "non-coding variants",
                "all variants",
                "regulatory elements",
                "genes"
              ]
            }
          },
          "input_file_sets": {
            "title": "Input File Sets",
            "description": "The file set(s) that served as inputs for the derivation of this model set.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/AnalysisSet",
                    "title": "AnalysisSet"
                  },
                  {
                    "$ref": "#/components/schemas/AuxiliarySet",
                    "title": "AuxiliarySet"
                  },
                  {
                    "$ref": "#/components/schemas/ConstructLibrarySet",
                    "title": "ConstructLibrarySet"
                  },
                  {
                    "$ref": "#/components/schemas/CuratedSet",
                    "title": "CuratedSet"
                  },
                  {
                    "$ref": "#/components/schemas/MeasurementSet",
                    "title": "MeasurementSet"
                  },
                  {
                    "$ref": "#/components/schemas/ModelSet",
                    "title": "ModelSet"
                  },
                  {
                    "$ref": "#/components/schemas/PredictionSet",
                    "title": "PredictionSet"
                  }
                ]
              ]
            }
          },
          "model_zoo_location": {
            "title": "Model Zoo Location",
            "description": "The link to the model on the Kipoi repository.",
            "type": "string",
            "pattern": "^https?://kipoi\\.org/models/(\\S+)$"
          },
          "software_version": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/SoftwareVersion",
                  "title": "SoftwareVersion"
                }
              ]
            ]
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "files": {
            "title": "Files",
            "type": "array",
            "description": "The files associated with this file set.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "File"
            }
          },
          "control_for": {
            "title": "File Sets Controlled By This File Set",
            "type": "array",
            "description": "The file sets for which this file set is a control.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "File Set Controlled By This File Set"
            }
          },
          "submitted_files_timestamp": {
            "title": "Submitted Files Timestamp",
            "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
            "type": "string",
            "format": "date-time"
          },
          "input_file_set_for": {
            "title": "Input File Set For",
            "description": "The Analysis Sets that use this File Set as an input.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Input File Set For"
            }
          }
        }
      },
      "PredictionSet": {
        "title": "Prediction Set",
        "description": "A file set of computational predictions. Prediction sets contain results of analyses to predict functions or traits of genomic features.",
        "type": "object",
        "oneOf": [
          {
            "required": [
              "lab",
              "award",
              "file_set_type",
              "samples"
            ]
          },
          {
            "required": [
              "lab",
              "award",
              "file_set_type",
              "donors"
            ]
          }
        ],
        "additionalProperties": false,
        "properties": {
          "small_scale_loci_list": {
            "title": "Small Scale Loci List",
            "description": "A small scale (<=100) list of specific chromosomal region(s).",
            "type": "array",
            "minItems": 1,
            "maxItems": 100,
            "uniqueItems": true,
            "items": {
              "title": "Locus",
              "type": "object",
              "required": [
                "assembly",
                "chromosome",
                "start",
                "end"
              ],
              "additionalProperties": false,
              "properties": {
                "assembly": {
                  "title": "Mapping assembly",
                  "description": "The genome assembly to which coordinates relate (e.g., GRCh38).",
                  "type": "string",
                  "enum": [
                    "GRCh38",
                    "GRCm39"
                  ]
                },
                "chromosome": {
                  "title": "Chromosome",
                  "description": "The number (or letter) designation for the chromosome, e.g. chr1 or chrX",
                  "type": "string",
                  "pattern": "^(chr[0-9A-Za-z_]+)$"
                },
                "start": {
                  "title": "Start",
                  "description": "The 1-based, closed (inclusive) starting coordinate.",
                  "type": "integer",
                  "minimum": 1
                },
                "end": {
                  "title": "End",
                  "description": "The 1-based, closed (inclusive) ending coordinate.",
                  "type": "integer",
                  "minimum": 1
                }
              }
            }
          },
          "large_scale_loci_list": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/ReferenceFile",
                  "title": "ReferenceFile"
                },
                {
                  "$ref": "#/components/schemas/TabularFile",
                  "title": "TabularFile"
                }
              ]
            ]
          },
          "small_scale_gene_list": {
            "title": "Small Scale Gene List",
            "description": "The specific, small scale list of (<=100) gene(s) this prediction set targets.",
            "type": "array",
            "minItems": 1,
            "maxItems": 100,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Gene",
                    "title": "Gene"
                  }
                ]
              ]
            }
          },
          "large_scale_gene_list": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/ReferenceFile",
                  "title": "ReferenceFile"
                },
                {
                  "$ref": "#/components/schemas/TabularFile",
                  "title": "TabularFile"
                }
              ]
            ]
          },
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "publication_identifiers": {
            "title": "Publication Identifiers",
            "description": "The publication identifiers that provide more information about the object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Publication Identifier",
              "description": "A publication identifier that provides more information about the object.",
              "type": "string",
              "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$"
            }
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string",
            "format": "uri"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "7"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "title": "External identifier",
              "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file sets.",
              "type": "string",
              "pattern": "^GEO:GSE\\d+$"
            }
          },
          "samples": {
            "title": "Samples",
            "description": "The sample(s) associated with this file set.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/InVitroSystem",
                    "title": "InVitroSystem"
                  },
                  {
                    "$ref": "#/components/schemas/MultiplexedSample",
                    "title": "MultiplexedSample"
                  },
                  {
                    "$ref": "#/components/schemas/PrimaryCell",
                    "title": "PrimaryCell"
                  },
                  {
                    "$ref": "#/components/schemas/TechnicalSample",
                    "title": "TechnicalSample"
                  },
                  {
                    "$ref": "#/components/schemas/Tissue",
                    "title": "Tissue"
                  },
                  {
                    "$ref": "#/components/schemas/WholeOrganism",
                    "title": "WholeOrganism"
                  }
                ]
              ]
            }
          },
          "donors": {
            "title": "Donors",
            "description": "The donor(s) associated with this file set.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/HumanDonor",
                    "title": "HumanDonor"
                  },
                  {
                    "$ref": "#/components/schemas/RodentDonor",
                    "title": "RodentDonor"
                  }
                ]
              ]
            }
          },
          "file_set_type": {
            "title": "File Set Type",
            "description": "The category that best describes this prediction set.",
            "type": "string",
            "enum": [
              "pathogenicity",
              "functional effect",
              "protein stability",
              "activity level"
            ]
          },
          "scope": {
            "title": "Prediction Scope",
            "description": "The scope or scale that this prediction set is designed to target. If the scope is across gene(s) or loci, these will need to be specified in the genes or loci property.",
            "type": "string",
            "enum": [
              "genes",
              "loci",
              "genome-wide"
            ]
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "files": {
            "title": "Files",
            "type": "array",
            "description": "The files associated with this file set.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "File"
            }
          },
          "control_for": {
            "title": "File Sets Controlled By This File Set",
            "type": "array",
            "description": "The file sets for which this file set is a control.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "File Set Controlled By This File Set"
            }
          },
          "submitted_files_timestamp": {
            "title": "Submitted Files Timestamp",
            "description": "The timestamp the first file object in the file_set or associated auxiliary sets was created.",
            "type": "string",
            "format": "date-time"
          },
          "input_file_set_for": {
            "title": "Input File Set For",
            "description": "The Analysis Sets that use this File Set as an input.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Input File Set For"
            }
          }
        }
      },
      "Gene": {
        "title": "Gene",
        "description": "A gene in the human or mouse genomes. The genes objects in IGVF are imported from GENCODE.",
        "type": "object",
        "required": [
          "geneid",
          "version_number",
          "transcriptome_annotation",
          "symbol",
          "dbxrefs",
          "taxa"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "transcriptome_annotation": {
            "title": "Transcriptome Annotation",
            "description": "The annotation and version of the reference resource.",
            "type": "string",
            "enum": [
              "GENCODE 40",
              "GENCODE 41",
              "GENCODE 42",
              "GENCODE 43",
              "GENCODE 44",
              "GENCODE 45",
              "GENCODE M30",
              "GENCODE M31",
              "GENCODE M32",
              "GENCODE M33",
              "GENCODE M34"
            ]
          },
          "taxa": {
            "title": "Taxa",
            "type": "string",
            "description": "The species of the organism.",
            "enum": [
              "Homo sapiens",
              "Mus musculus"
            ]
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "in progress",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "released"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "9"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "geneid": {
            "title": "ENSEMBL GeneID",
            "description": "ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix.",
            "type": "string",
            "pattern": "^ENS[A-Z]*G\\d{11}(_PAR_Y)?$"
          },
          "symbol": {
            "title": "Gene Symbol",
            "description": "Gene symbol approved by the official nomenclature.",
            "type": "string",
            "format": "gene_name"
          },
          "name": {
            "title": "Name",
            "description": "The full gene name preferably approved by the official nomenclature.",
            "type": "string",
            "format": "gene_name"
          },
          "synonyms": {
            "title": "Synonyms",
            "description": "Alternative symbols that have been used to refer to the gene.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Synonym",
              "description": "An alternative symbol/name referring to the gene.",
              "type": "string",
              "format": "gene_name"
            }
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Unique identifiers from external resources.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "External identifier",
              "description": "A unique identifier from external resource (e.g. ENTREZ, HGNC, MGI, FlyBase, WormBase, ENSEMBL, MIM, UniProtKB, Vega, miRBase).",
              "type": "string",
              "pattern": "^((ENTREZ:[1-9][0-9]*)|(HGNC:\\d+)|(MGI:\\d+)|(MIM:\\d+)|(UniProtKB:[0-9A-Z]+)|(Vega:OTT[A-Z]+G\\d+)|(miRBase:MI\\d+)|(IMGT/GENE-DB:[0-9A-Za-z/\\(\\)\\-]+)|(RefSeq:[A-Z]{2}_[\\d.]+)|(GeneCards:[0-9a-zA-Z-]+))$"
            }
          },
          "locations": {
            "title": "Gene Locations",
            "description": "Gene locations specified using 1-based, closed coordinates for different versions of reference genome assemblies.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Gene Location",
              "description": "Gene location specified using 1-based, closed coordinates for a specific version of the reference genome assembly.",
              "type": "object",
              "additionalProperties": false,
              "required": [
                "assembly",
                "chromosome",
                "start",
                "end"
              ],
              "properties": {
                "assembly": {
                  "title": "Mapping Assembly",
                  "description": "The genome assembly to which coordinates relate. e.g. GRCh38.",
                  "type": "string",
                  "enum": [
                    "GRCh38",
                    "GRCm39"
                  ]
                },
                "chromosome": {
                  "title": "Chromosome",
                  "description": "The number (or letter) designation for the chromosome, e.g. chr1 or chrX",
                  "type": "string",
                  "pattern": "^(chr[0-9A-Za-z]+)$"
                },
                "start": {
                  "title": "Start",
                  "description": "The starting coordinate.",
                  "type": "integer",
                  "minimum": 0
                },
                "end": {
                  "title": "End",
                  "description": "The ending coordinate.",
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "version_number": {
            "title": "ENSEMBL GeneID Version Number",
            "description": "Current ENSEMBL GeneID version number of the gene.",
            "type": "string",
            "pattern": "^\\d+?"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "geneid_with_version": {
            "title": "ENSEMBL GeneID With Version",
            "type": "string",
            "description": "The ENSEMBL GeneID concatenated with its version number."
          }
        }
      },
      "Image": {
        "title": "Image",
        "description": "An image to be displayed on an IGVF portal page. This is not a data object.",
        "type": "object",
        "required": [
          "attachment"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "released",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "released"
            ]
          },
          "attachment": {
            "title": "Attachment",
            "type": "object",
            "description": "The attached content.",
            "additionalProperties": false,
            "properties": {
              "download": {
                "title": "File Name",
                "type": "string"
              },
              "href": {
                "title": "Hypertext REFerence",
                "type": "string"
              },
              "type": {
                "title": "MIME type",
                "type": "string",
                "enum": [
                  "image/png",
                  "image/jpeg",
                  "image/gif"
                ]
              },
              "md5sum": {
                "title": "MD5sum",
                "type": "string",
                "format": "md5sum"
              },
              "size": {
                "title": "File Size",
                "type": "integer",
                "minimum": 0
              },
              "width": {
                "title": "Image Width",
                "type": "integer",
                "minimum": 0
              },
              "height": {
                "title": "Image Height",
                "type": "integer",
                "minimum": 0
              }
            }
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "4"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "caption": {
            "title": "Caption",
            "type": "string",
            "description": "The caption of the image."
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "thumb_nail": {
            "title": "Thumb Nail",
            "description": "Image url",
            "type": "string"
          },
          "download_url": {
            "title": "Download Url",
            "description": "Download Url",
            "type": "string"
          }
        }
      },
      "InstitutionalCertificate": {
        "title": "Institutional Certificate",
        "description": "An institutional certificate defining the data sharing limitations for data authorized for submission to the IGVF portal.",
        "type": "object",
        "required": [
          "award",
          "lab",
          "certificate_identifier",
          "controlled_access",
          "urls"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "in progress",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "released"
            ]
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "2"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "certificate_identifier": {
            "title": "Certificate Identifier",
            "description": "A unique identifier for the certificate.",
            "type": "string",
            "pattern": "^IP\\d{3}-\\d{2}$"
          },
          "controlled_access": {
            "title": "Controlled Access",
            "description": "Indicator of whether the samples are under controlled access.",
            "type": "boolean"
          },
          "data_use_limitation": {
            "title": "Data Use Limitation",
            "description": "Code indicating the limitations on data use for data generated from the applicable samples. GRU (General research use): Use of the data is limited only by the terms of the Data Use Certification: these data will be added to the dbGaP Collection. HMB (Health/medical/biomedical): Use of the data is limited to health/medical/biomedical purposes, does not include the study of population origins or ancestry. DS (Disease specific): Use of the data must be related to the specified disease. Other: any other customized limitation.",
            "type": "string",
            "enum": [
              "DS",
              "GRU",
              "HMB",
              "other"
            ]
          },
          "data_use_limitation_modifiers": {
            "title": "Data Use Limitation Modifiers",
            "description": "Code indicating a modifier on the limitations on data use for data generated from the applicable samples. COL: Requestor must provide a letter of collaboration with the primary study investigator(s). GSO: Use of the data is limited to genetic studies only. IRB: Approval Required IRB Requestor must provide documentation of local IRB approval. MDS: Use of the data includes methods development research (e.g., development and testing of software or algorithms). NPU: Use of the data is limited to not-for-profit organizations. PUB: Requestor agrees to make results of studies using the data available to the larger scientific community.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Data Use Limitation Modifier",
              "type": "string",
              "enum": [
                "COL",
                "GSO",
                "IRB",
                "MDS",
                "NPU",
                "PUB"
              ]
            }
          },
          "samples": {
            "title": "Samples",
            "description": "Samples covered by this institutional certificate.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/InVitroSystem",
                    "title": "InVitroSystem"
                  },
                  {
                    "$ref": "#/components/schemas/MultiplexedSample",
                    "title": "MultiplexedSample"
                  },
                  {
                    "$ref": "#/components/schemas/PrimaryCell",
                    "title": "PrimaryCell"
                  },
                  {
                    "$ref": "#/components/schemas/TechnicalSample",
                    "title": "TechnicalSample"
                  },
                  {
                    "$ref": "#/components/schemas/Tissue",
                    "title": "Tissue"
                  },
                  {
                    "$ref": "#/components/schemas/WholeOrganism",
                    "title": "WholeOrganism"
                  }
                ]
              ]
            }
          },
          "urls": {
            "title": "URL",
            "description": "Link to the institutional certification form.",
            "type": "array",
            "minItems": 1,
            "maxItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "URL",
              "description": "An institutional certification form.",
              "type": "string",
              "format": "uri"
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          }
        }
      },
      "Lab": {
        "title": "Lab",
        "description": "A lab that is part of or affiliated with the IGVF consortium.",
        "type": "object",
        "required": [
          "name",
          "institute_label",
          "pi"
        ],
        "additionalProperties": false,
        "properties": {
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "current",
            "enum": [
              "current",
              "deleted",
              "disabled"
            ]
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string",
            "format": "uri"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "3"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "name": {
            "title": "Name",
            "description": "A short unique name for the lab, current convention is lower cased and hyphen delimited of PI's first and last name (e.g. john-doe).",
            "type": "string",
            "pattern": "^[a-z0-9\\-]+$"
          },
          "pi": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "awards": {
            "title": "Award",
            "description": "Grants associated with the lab.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Award",
                    "title": "Award"
                  }
                ]
              ]
            }
          },
          "institute_label": {
            "title": "Institute Label",
            "description": "An abbreviation for the institute the lab is associated with.",
            "type": "string",
            "default": "",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$|^$"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "title": {
            "title": "Title",
            "type": "string"
          }
        }
      },
      "CrisprModification": {
        "title": "CRISPR Modification",
        "description": "A CRISPR modification altering sample genomic material. For example, CRISPRi dCas9-KRAB modification.",
        "type": "object",
        "required": [
          "award",
          "lab",
          "cas",
          "cas_species",
          "modality"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "minItems": 1,
            "maxItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Lab",
                    "title": "Lab"
                  },
                  {
                    "$ref": "#/components/schemas/Source",
                    "title": "Source"
                  }
                ]
              ]
            }
          },
          "lot_id": {
            "title": "Lot ID",
            "description": "The lot identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "product_id": {
            "title": "Product ID",
            "description": "The product or catalog identifier provided following deposition to addgene.org.",
            "type": "string",
            "pattern": "^addgene:\\d{5,6}$"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "in progress",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "released"
            ]
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "2"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "cas": {
            "title": "Cas",
            "description": "The name of the CRISPR associated protein used in the modification.",
            "type": "string",
            "enum": [
              "Cas9",
              "Cas12a",
              "Cas13",
              "dCas9",
              "nCas9",
              "SpG",
              "SpRY"
            ]
          },
          "fused_domain": {
            "title": "Fused Domain",
            "description": "The name of the molecule fused to a Cas protein.",
            "type": "string",
            "enum": [
              "ABE8e",
              "ABE8.20",
              "BE4",
              "BE4max",
              "eA3A",
              "eA3A-T31A",
              "eA3A-T44D-S45A",
              "ANTI-FLAG",
              "M-MLV RT (PE2)",
              "p300",
              "TdCBE",
              "TdCGBE",
              "TdDE",
              "VPH",
              "VP64",
              "VP64-p65-Rta (VPR)",
              "2xVP64",
              "3xVP64",
              "ZIM3-KRAB"
            ]
          },
          "modality": {
            "title": "Modality",
            "description": "The purpose or intended effect of a CRISPR modification.",
            "type": "string",
            "enum": [
              "activation",
              "base editing",
              "cutting",
              "interference",
              "knockout",
              "localizing",
              "prime editing"
            ]
          },
          "tagged_protein": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Gene",
                  "title": "Gene"
                }
              ]
            ]
          },
          "cas_species": {
            "title": "Cas species",
            "description": "The originating species of the Cas nuclease.",
            "type": "string",
            "enum": [
              "Streptococcus pyogenes (Sp)",
              "Staphylococcus aureus (Sa)",
              "Campylobacter jejuni (Cj)",
              "Neisseria meningitidis (Nm)"
            ]
          },
          "activated": {
            "title": "Activated",
            "description": "A boolean indicating whether the modification has been activated by a chemical agent.",
            "type": "boolean"
          },
          "activating_agent_term_id": {
            "title": "Activating Agent Term ID",
            "description": "The CHEBI identifier for the activating agent of the modification.",
            "type": "string",
            "pattern": "^CHEBI:[0-9]{1,7}$"
          },
          "activating_agent_term_name": {
            "title": "Activating Agent Term Name",
            "description": "The CHEBI name for the activating agent of the modification.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          }
        }
      },
      "Modification": {
        "title": "Modification",
        "description": "A genetic modification altering sample genomic material. For example, CRISPRi dCas9-KRAB modification.",
        "type": "object",
        "required": [
          "award",
          "lab",
          "cas",
          "cas_species",
          "modality"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "minItems": 1,
            "maxItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Lab",
                    "title": "Lab"
                  },
                  {
                    "$ref": "#/components/schemas/Source",
                    "title": "Source"
                  }
                ]
              ]
            }
          },
          "lot_id": {
            "title": "Lot ID",
            "description": "The lot identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "product_id": {
            "title": "Product ID",
            "description": "The product or catalog identifier provided following deposition to addgene.org.",
            "type": "string",
            "pattern": "^addgene:\\d{5,6}$"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "in progress",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "released"
            ]
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "6"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "cas": {
            "title": "Cas",
            "description": "The name of the CRISPR associated protein used in the modification.",
            "type": "string",
            "enum": [
              "Cas9",
              "Cas12a",
              "Cas13",
              "dCas9",
              "nCas9",
              "SpG",
              "SpRY"
            ]
          },
          "fused_domain": {
            "title": "Fused Domain",
            "description": "The name of the molecule fused to a Cas protein.",
            "type": "string",
            "enum": [
              "ABE8e",
              "ABE8.20",
              "BE4",
              "BE4max",
              "eA3A",
              "eA3A-T31A",
              "eA3A-T44D-S45A",
              "ANTI-FLAG",
              "M-MLV RT (PE2)",
              "p300",
              "TdCBE",
              "TdCGBE",
              "TdDE",
              "VPH",
              "VP64",
              "VP64-p65-Rta (VPR)",
              "2xVP64",
              "3xVP64",
              "ZIM3-KRAB"
            ]
          },
          "modality": {
            "title": "Modality",
            "description": "The purpose or intended effect of a CRISPR modification.",
            "type": "string",
            "enum": [
              "activation",
              "base editing",
              "cutting",
              "interference",
              "knockout",
              "localizing",
              "prime editing"
            ]
          },
          "tagged_protein": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Gene",
                  "title": "Gene"
                }
              ]
            ]
          },
          "cas_species": {
            "title": "Cas species",
            "description": "The originating species of the Cas nuclease.",
            "type": "string",
            "enum": [
              "Streptococcus pyogenes (Sp)",
              "Staphylococcus aureus (Sa)",
              "Campylobacter jejuni (Cj)",
              "Neisseria meningitidis (Nm)"
            ]
          },
          "activated": {
            "title": "Activated",
            "description": "A boolean indicating whether the modification has been activated by a chemical agent.",
            "type": "boolean"
          },
          "activating_agent_term_id": {
            "title": "Activating Agent Term ID",
            "description": "The CHEBI identifier for the activating agent of the modification.",
            "type": "string",
            "pattern": "^CHEBI:[0-9]{1,7}$"
          },
          "activating_agent_term_name": {
            "title": "Activating Agent Term Name",
            "description": "The CHEBI name for the activating agent of the modification.",
            "type": "string"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          }
        }
      },
      "AssayTerm": {
        "title": "Assay Term",
        "description": "An ontology term from Ontology of Biomedical Investigations (OBI) for assays.",
        "type": "object",
        "required": [
          "term_id",
          "term_name"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "in progress",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "released"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "6"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "term_id": {
            "title": "Term ID",
            "description": "An ontology term identifier describing an assay.",
            "type": "string",
            "pattern": "^(OBI|NTR):[0-9]{2,8}$"
          },
          "term_name": {
            "title": "Term Name",
            "description": "Ontology term describing a biological sample, assay, trait, or disease.",
            "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
            "type": "string"
          },
          "deprecated_ntr_terms": {
            "title": "Deprecated NTR terms",
            "description": "A list of deprecated NTR terms previously associated with this ontology term.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "title": "Term ID",
              "description": "NTR term ID",
              "type": "string",
              "pattern": "^NTR:[0-9]{2,8}$"
            }
          },
          "is_a": {
            "title": "Is A",
            "description": "A list of ontology terms which are the nearest ancestor to this ontology term.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/AssayTerm",
                    "title": "AssayTerm"
                  },
                  {
                    "$ref": "#/components/schemas/PhenotypeTerm",
                    "title": "PhenotypeTerm"
                  },
                  {
                    "$ref": "#/components/schemas/PlatformTerm",
                    "title": "PlatformTerm"
                  },
                  {
                    "$ref": "#/components/schemas/SampleTerm",
                    "title": "SampleTerm"
                  }
                ]
              ]
            }
          },
          "preferred_assay_titles": {
            "title": "Preferred Assay Titles",
            "description": "The custom lab preferred labels that this assay term may be associated with.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Preferred Assay Title",
              "description": "The custom lab preferred label for the experiment performed in this measurement set.",
              "type": "string",
              "enum": [
                "10x multiome",
                "10x multiome with MULTI-seq",
                "AAV-MPRA",
                "ATAC-seq",
                "CERES-seq",
                "Cell painting",
                "CRISPR FlowFISH",
                "DOGMA-seq",
                "Histone ChIP-seq",
                "lentiMPRA",
                "MERFISH",
                "MIAA",
                "mN2H",
                "MPRA",
                "MPRA (scQer)",
                "MULTI-seq",
                "Parse SPLiT-seq",
                "Perturb-seq",
                "RNA-seq",
                "SGE",
                "scATAC-seq",
                "scNT-seq",
                "scNT-seq2",
                "scRNA-seq",
                "semi-qY2H",
                "SHARE-seq",
                "smFISH",
                "snATAC-seq",
                "snmC-Seq2",
                "snMCT-seq",
                "snM3C-seq",
                "snRNA-seq",
                "SUPERSTARR",
                "TAP-seq",
                "TF ChIP-seq",
                "VAMP-seq",
                "Variant FlowFISH",
                "Variant painting",
                "Y2H",
                "yN2H"
              ]
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the ontology term."
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "A unique identifier for the ontology term, reformatted from the original term ID."
          },
          "synonyms": {
            "title": "Synonyms",
            "type": "array",
            "description": "Synonyms for the term that have been recorded in an ontology.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "ancestors": {
            "title": "Ancestors",
            "description": "List of term names of ontological terms that precede the given term in the ontological tree. These ancestor terms are typically more general ontological terms under which the term is classified.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "ontology": {
            "title": "Ontology",
            "type": "string",
            "description": "The ontology in which the term is recorded."
          },
          "assay_slims": {
            "title": "Assay Type",
            "type": "array",
            "description": "A broad categorization of the assay term.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "category_slims": {
            "title": "Assay Category",
            "type": "array",
            "description": "The type of feature or interaction measured by the assay.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "objective_slims": {
            "title": "Assay Objective",
            "type": "array",
            "description": "The purpose of the assay.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PhenotypeTerm": {
        "title": "Phenotype Term",
        "description": "An ontology term from Experimental Factor Ontology (EFO), Human Disease Ontology (DOID), Human Phenotype Ontology (HP), Mondo Disease Ontology (MONDO), National Cancer Institute Thesaurus (NCIT), or Ontology of Biological Attributes (OBA) for phenotypes, diseases, and traits.",
        "type": "object",
        "required": [
          "term_id",
          "term_name"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "in progress",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "released"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "4"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "term_id": {
            "title": "Phenotype Term ID",
            "description": "An ontology term identifier describing a phenotype.",
            "type": "string",
            "pattern": "^(DOID|EFO|HP|MONDO|OBA|NTR):[0-9]{2,8}|OBA:VT[0-9]{2,8}|NCIT:C[0-9]{2,8}$"
          },
          "term_name": {
            "title": "Term Name",
            "description": "Ontology term describing a biological sample, assay, trait, or disease.",
            "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
            "type": "string"
          },
          "deprecated_ntr_terms": {
            "title": "Deprecated NTR terms",
            "description": "A list of deprecated NTR terms previously associated with this ontology term.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "title": "Term ID",
              "description": "NTR term ID",
              "type": "string",
              "pattern": "^NTR:[0-9]{2,8}$"
            }
          },
          "is_a": {
            "title": "Is A",
            "description": "A list of ontology terms which are the nearest ancestor to this ontology term.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/AssayTerm",
                    "title": "AssayTerm"
                  },
                  {
                    "$ref": "#/components/schemas/PhenotypeTerm",
                    "title": "PhenotypeTerm"
                  },
                  {
                    "$ref": "#/components/schemas/PlatformTerm",
                    "title": "PlatformTerm"
                  },
                  {
                    "$ref": "#/components/schemas/SampleTerm",
                    "title": "SampleTerm"
                  }
                ]
              ]
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the ontology term."
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "A unique identifier for the ontology term, reformatted from the original term ID."
          },
          "synonyms": {
            "title": "Synonyms",
            "type": "array",
            "description": "Synonyms for the term that have been recorded in an ontology.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "ancestors": {
            "title": "Ancestors",
            "description": "List of term names of ontological terms that precede the given term in the ontological tree. These ancestor terms are typically more general ontological terms under which the term is classified.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "ontology": {
            "title": "Ontology",
            "type": "string",
            "description": "The ontology in which the term is recorded."
          }
        }
      },
      "PlatformTerm": {
        "title": "Platform Term",
        "description": "An ontology term from Experimental Factor Ontology (EFO) for platforms and instruments used in assays.",
        "type": "object",
        "required": [
          "term_id",
          "term_name"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "in progress",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "released"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "4"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "term_id": {
            "title": "Term ID",
            "description": "An ontology term identifier describing a platform.",
            "type": "string",
            "pattern": "^(EFO|NTR):[0-9]{2,8}$"
          },
          "term_name": {
            "title": "Term Name",
            "description": "Ontology term describing a biological sample, assay, trait, or disease.",
            "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
            "type": "string"
          },
          "deprecated_ntr_terms": {
            "title": "Deprecated NTR terms",
            "description": "A list of deprecated NTR terms previously associated with this ontology term.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "title": "Term ID",
              "description": "NTR term ID",
              "type": "string",
              "pattern": "^NTR:[0-9]{2,8}$"
            }
          },
          "is_a": {
            "title": "Is A",
            "description": "A list of ontology terms which are the nearest ancestor to this ontology term.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/AssayTerm",
                    "title": "AssayTerm"
                  },
                  {
                    "$ref": "#/components/schemas/PhenotypeTerm",
                    "title": "PhenotypeTerm"
                  },
                  {
                    "$ref": "#/components/schemas/PlatformTerm",
                    "title": "PlatformTerm"
                  },
                  {
                    "$ref": "#/components/schemas/SampleTerm",
                    "title": "SampleTerm"
                  }
                ]
              ]
            }
          },
          "company": {
            "title": "Company",
            "type": "string",
            "enum": [
              "10X Genomics",
              "Illumina",
              "Life Technologies",
              "Oxford Nanopore Technologies",
              "Pacific Biosciences",
              "Parse Biosciences",
              "Roche"
            ],
            "description": "The company that developed and sells the instrument."
          },
          "sequencing_kits": {
            "title": "Sequencing Kits",
            "description": "The available sequencing kits for this platform.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Sequencing Kit",
              "description": "A reagent kit used with a library to prepare it for sequencing.",
              "type": "string",
              "enum": [
                "HiSeq SBS Kit v4",
                "HiSeq SR Cluster Kit v4-cBot-HS",
                "HiSeq PE Cluster Kit v4-cBot-HS",
                "HiSeq SR Rapid Cluster Kit v2",
                "HiSeq PE Rapid Cluster Kit v2",
                "HiSeq Rapid SBS Kit v2",
                "HiSeq 3000/4000 SBS Kit",
                "HiSeq 3000/4000 SR Cluster Kit",
                "HiSeq 3000/4000 PE Cluster Kit",
                "MiSeq Reagent Kit v2",
                "NextSeq 500 Mid Output Kit",
                "NextSeq 500 High Output Kit",
                "NextSeq 500 Mid Output v2 Kit",
                "NextSeq 500 High Output v2 Kit",
                "NextSeq 500/550 Mid-Output v2.5 Kit",
                "NextSeq 500/550 High-Output v2.5 Kit",
                "TG NextSeq 500/550 Mid-Output Kit v2.5",
                "TG NextSeq 500/550 High-Output Kit v2.5",
                "NextSeq 1000/2000 P1 Reagent Kit",
                "NextSeq 1000/2000 P2 Reagent Kit",
                "NextSeq 1000/2000 P3 Reagent Kit",
                "NextSeq 1000/2000 P1 XLEAP-SBS Reagent Kit",
                "NextSeq 1000/2000 P2 XLEAP-SBS Reagent Kit",
                "NextSeq 2000 P3 XLEAP-SBS Reagent Kit",
                "NextSeq 2000 P4 XLEAP-SBS Reagent Kit",
                "NovaSeq 6000 SP Reagent Kit v1.5",
                "NovaSeq 6000 S1 Reagent Kit v1.5",
                "NovaSeq 6000 S2 Reagent Kit v1.5",
                "NovaSeq 6000 S4 Reagent Kit v1.5",
                "NovaSeq X Series 10B Reagent Kit",
                "ONT Ligation Sequencing Kit V14",
                "Sequel sequencing kit 3.0",
                "Sequel II sequencing kit 2.0"
              ]
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the ontology term."
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "A unique identifier for the ontology term, reformatted from the original term ID."
          },
          "synonyms": {
            "title": "Synonyms",
            "type": "array",
            "description": "Synonyms for the term that have been recorded in an ontology.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "ancestors": {
            "title": "Ancestors",
            "description": "List of term names of ontological terms that precede the given term in the ontological tree. These ancestor terms are typically more general ontological terms under which the term is classified.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "ontology": {
            "title": "Ontology",
            "type": "string",
            "description": "The ontology in which the term is recorded."
          }
        }
      },
      "SampleTerm": {
        "title": "Sample Term",
        "description": "An ontology term from Cell Ontology (CL), Cell Line Ontology (CLO), Experimental Factor Ontology (EFO), or Uber-anatomy ontology (UBERON) for biological or technical samples.",
        "type": "object",
        "required": [
          "term_id",
          "term_name"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "in progress",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "released"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "5"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "term_id": {
            "title": "Term ID",
            "description": "An ontology identifier describing a biological sample",
            "type": "string",
            "pattern": "^(UBERON|EFO|CL|CLO|NTR):[0-9]{2,8}$"
          },
          "term_name": {
            "title": "Term Name",
            "description": "Ontology term describing a biological sample, assay, trait, or disease.",
            "pattern": "^(?![\\s\"'])[\\S|\\s]*[^\\s\"']$",
            "type": "string"
          },
          "deprecated_ntr_terms": {
            "title": "Deprecated NTR terms",
            "description": "A list of deprecated NTR terms previously associated with this ontology term.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "title": "Term ID",
              "description": "NTR term ID",
              "type": "string",
              "pattern": "^NTR:[0-9]{2,8}$"
            }
          },
          "is_a": {
            "title": "Is A",
            "description": "A list of ontology terms which are the nearest ancestor to this ontology term.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/AssayTerm",
                    "title": "AssayTerm"
                  },
                  {
                    "$ref": "#/components/schemas/PhenotypeTerm",
                    "title": "PhenotypeTerm"
                  },
                  {
                    "$ref": "#/components/schemas/PlatformTerm",
                    "title": "PlatformTerm"
                  },
                  {
                    "$ref": "#/components/schemas/SampleTerm",
                    "title": "SampleTerm"
                  }
                ]
              ]
            }
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Sample identifiers from external resources, such as Cellosaurus.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "An identifier from external resource.",
              "type": "string",
              "pattern": "^((Cellosaurus:CVCL_\\w{4})|(DepMap:ACH-[0-9]{6}))$"
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the ontology term."
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "A unique identifier for the ontology term, reformatted from the original term ID."
          },
          "synonyms": {
            "title": "Synonyms",
            "type": "array",
            "description": "Synonyms for the term that have been recorded in an ontology.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "ancestors": {
            "title": "Ancestors",
            "description": "List of term names of ontological terms that precede the given term in the ontological tree. These ancestor terms are typically more general ontological terms under which the term is classified.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "ontology": {
            "title": "Ontology",
            "type": "string",
            "description": "The ontology in which the term is recorded."
          },
          "organ_slims": {
            "title": "Organ",
            "type": "array",
            "description": "Organs associated with the sample term.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "cell_slims": {
            "title": "Cell",
            "type": "array",
            "description": "Cells associated with the sample term.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "developmental_slims": {
            "title": "Developmental Slims",
            "type": "array",
            "description": "Developmental stages associated with the sample term.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "system_slims": {
            "title": "System Slims",
            "type": "array",
            "description": "Organ systems associated with the sample term.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OpenReadingFrame": {
        "title": "Open Reading Frame",
        "description": "Protein-encoding open reading frames (ORF)",
        "type": "object",
        "required": [
          "orf_id",
          "gene",
          "lab",
          "award"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "in progress",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "released"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "2"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "orf_id": {
            "title": "ORF ID",
            "description": "Open reading frame ID.",
            "type": "string",
            "pattern": "^CCSBORF[1-9][0-9]*$"
          },
          "gene": {
            "title": "ENSEMBL GeneID",
            "description": "ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Gene",
                    "title": "Gene"
                  }
                ]
              ]
            }
          },
          "protein_id": {
            "title": "ENSEMBL ProteinID",
            "description": "ENSEMBL ProteinID of official nomenclature approved protein. The ProteinID does not include the current version number suffix.",
            "type": "string",
            "pattern": "^ENSP\\d{11}.?\\d*?$"
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Unique identifiers from the hORFeome database",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "A unique identifier from hORFeome database.",
              "type": "string",
              "pattern": "^(hORFeome:[1-9][0-9]*)$"
            }
          },
          "pct_identical_protein": {
            "title": "Percentage of Identical Matches to Ensembl Protein",
            "description": "The percentage of identical matches to Ensembl protein.",
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "pct_coverage_protein": {
            "title": "Percentage of ORF Covered by Ensembl Protein",
            "description": "The percentage of ORF covered by Ensembl protein.",
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "pct_coverage_orf": {
            "title": "Percentage of Ensembl Protein Covered by ORF",
            "description": "The percentage of Ensembl protein covered by ORF.",
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          }
        }
      },
      "Page": {
        "title": "Page",
        "description": "A page on the IGVF portal.",
        "type": "object",
        "required": [
          "name",
          "title"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "in progress",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "released"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "4"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "parent": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Page",
                  "title": "Page"
                }
              ]
            ]
          },
          "name": {
            "title": "Name",
            "description": "The name shown in this page's URL.",
            "type": "string",
            "pattern": "^[a-z0-9_-]+$"
          },
          "title": {
            "title": "Title",
            "description": "The name shown in the browser's title bar and tabs.",
            "type": "string"
          },
          "layout": {
            "title": "Page Layout",
            "description": "Hierarchical description of the page layout.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "blocks": {
                "type": "array",
                "items": {
                  "title": "Page Layout Components",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "@id": {
                      "title": "Block ID",
                      "description": "Unique identifier for this blocUnique identifier for this block.",
                      "type": "string"
                    },
                    "@type": {
                      "title": "Block Type",
                      "description": "Indicates whether this block contains markdown or a component specification.",
                      "type": "string"
                    },
                    "body": {
                      "title": "Block Body",
                      "description": "The text content of this block.",
                      "type": "string"
                    },
                    "direction": {
                      "title": "Direction",
                      "description": "The text language direction -- ltr or rtl.",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "default": {}
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "canonical_uri": {
            "title": "Canonical URI",
            "type": "string",
            "description": "The path of the page."
          }
        }
      },
      "PhenotypicFeature": {
        "title": "Phenotypic Feature",
        "description": "A phenotypic feature of a donor the sample is coming from. For example, the donor\u2019s height measured at the time of sample collection.",
        "type": "object",
        "required": [
          "award",
          "lab",
          "feature"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "in progress",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "released"
            ]
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "3"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "feature": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/PhenotypeTerm",
                  "title": "PhenotypeTerm"
                }
              ]
            ]
          },
          "quantity": {
            "title": "Quantity",
            "description": "A quantity associated with the phenotypic feature, if applicable.",
            "type": "number"
          },
          "quantity_units": {
            "title": "Quantity Units",
            "description": "The unit of measurement for a quantity associated with the phenotypic feature.",
            "type": "string",
            "enum": [
              "meter",
              "micromole",
              "nanogram",
              "microgram",
              "milligram",
              "gram",
              "kilogram",
              "milli-International Unit per milliliter",
              "picogram per milliliter",
              "nanogram per milliliter",
              "milligram per deciliter"
            ]
          },
          "observation_date": {
            "title": "Observation Date",
            "description": "The date the feature was observed or measured.",
            "type": "string",
            "format": "date"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          }
        }
      },
      "Publication": {
        "title": "Publication",
        "description": "A publication related to IGVF.",
        "type": "object",
        "required": [
          "title",
          "award",
          "lab",
          "publication_identifiers"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "publication_identifiers": {
            "title": "Publication Identifiers",
            "description": "The publication identifiers that provide more information about the object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Publication Identifier",
              "description": "An identifier that references data found in the object.",
              "type": "string",
              "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$"
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "in progress",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "released"
            ]
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "attachment": {
            "title": "Attachment",
            "type": "object",
            "description": "The attached content.",
            "additionalProperties": false,
            "properties": {
              "download": {
                "title": "File Name",
                "type": "string"
              },
              "href": {
                "title": "Hypertext REFerence",
                "type": "string"
              },
              "type": {
                "title": "MIME type",
                "type": "string",
                "enum": [
                  "application/json",
                  "application/pdf",
                  "image/gif",
                  "image/jpeg",
                  "image/png",
                  "image/svs",
                  "image/tiff",
                  "text/autosql",
                  "text/html",
                  "text/plain",
                  "text/tab-separated-values"
                ]
              },
              "md5sum": {
                "title": "MD5sum",
                "type": "string",
                "format": "md5sum"
              },
              "size": {
                "title": "File Size",
                "type": "integer",
                "minimum": 0
              },
              "width": {
                "title": "Image Width",
                "type": "integer",
                "minimum": 0
              },
              "height": {
                "title": "Image Height",
                "type": "integer",
                "minimum": 0
              }
            }
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "6"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "title": {
            "title": "Title",
            "description": "Title of the publication or communication.",
            "type": "string"
          },
          "abstract": {
            "title": "Abstract",
            "description": "Abstract of the publication or communication.",
            "type": "string"
          },
          "authors": {
            "title": "Authors",
            "type": "string",
            "description": "The authors of the publication."
          },
          "date_published": {
            "title": "Publication Date",
            "description": "The date the publication or communication was published; must be in YYYY-MM-DD format.",
            "type": "string",
            "format": "date"
          },
          "date_revised": {
            "title": "Date Revised",
            "type": "string",
            "description": "The date the publication was revised.",
            "format": "date"
          },
          "issue": {
            "title": "Issue",
            "description": "The issue of the publication.",
            "type": "string"
          },
          "page": {
            "title": "Page",
            "description": "Pagination of the reference",
            "type": "string"
          },
          "volume": {
            "title": "Volume",
            "description": "The volume of the publication.",
            "type": "string"
          },
          "journal": {
            "title": "Journal",
            "description": "The journal of the publication.",
            "type": "string"
          },
          "published_by": {
            "title": "Published By",
            "type": "array",
            "description": "The affiliation of the lab with a larger organization, such as IGVF.",
            "minItems": 1,
            "uniqueItems": true,
            "default": [
              "IGVF"
            ],
            "items": {
              "title": "Published By",
              "type": "string",
              "enum": [
                "community",
                "IGVF",
                "ENCODE"
              ]
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "publication_year": {
            "title": "Publication Year",
            "type": "integer",
            "description": "The year the publication was published."
          }
        }
      },
      "InVitroSystem": {
        "title": "In Vitro System",
        "description": "A biosample that is cultured, such as immortalized cell lines, organoids, or samples that have been differentiated or reprogrammed.",
        "type": "object",
        "required": [
          "award",
          "lab",
          "sources",
          "donors",
          "sample_terms",
          "classifications"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "publication_identifiers": {
            "title": "Publication Identifiers",
            "description": "The publication identifiers that provide more information about the object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Publication Identifier",
              "description": "A publication identifier that provides more information about the object.",
              "type": "string",
              "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$"
            }
          },
          "taxa": {
            "title": "Taxa",
            "type": "string",
            "description": "The species of the organism.",
            "enum": [
              "Homo sapiens",
              "Mus musculus"
            ]
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string",
            "format": "uri"
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "minItems": 1,
            "maxItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Lab",
                    "title": "Lab"
                  },
                  {
                    "$ref": "#/components/schemas/Source",
                    "title": "Source"
                  }
                ]
              ]
            }
          },
          "lot_id": {
            "title": "Lot ID",
            "description": "The lot identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "product_id": {
            "title": "Product ID",
            "description": "The product identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "21"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "lower_bound_age": {
            "title": "Lower Bound Age",
            "description": "Lower bound of age of the organism at the time of collection of the sample.",
            "type": "number"
          },
          "upper_bound_age": {
            "title": "Upper Bound Age",
            "description": "Upper bound of age of the organism at the time of collection of the sample.",
            "type": "number"
          },
          "age_units": {
            "title": "Age Units",
            "description": "The units of time associated with age of the biosample.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month",
              "year"
            ]
          },
          "sample_terms": {
            "title": "Sample Terms",
            "description": "Ontology terms identifying a biosample.",
            "type": "array",
            "minItems": 1,
            "maxItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/SampleTerm",
                    "title": "SampleTerm"
                  }
                ]
              ]
            }
          },
          "disease_terms": {
            "title": "Disease Terms",
            "description": "Ontology term of the disease associated with the biosample.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/PhenotypeTerm",
                    "title": "PhenotypeTerm"
                  }
                ]
              ]
            }
          },
          "pooled_from": {
            "title": "Biosamples Pooled From",
            "description": "The biosamples this biosample is pooled from.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 2,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/InVitroSystem",
                    "title": "InVitroSystem"
                  },
                  {
                    "$ref": "#/components/schemas/PrimaryCell",
                    "title": "PrimaryCell"
                  },
                  {
                    "$ref": "#/components/schemas/Tissue",
                    "title": "Tissue"
                  },
                  {
                    "$ref": "#/components/schemas/WholeOrganism",
                    "title": "WholeOrganism"
                  }
                ]
              ]
            }
          },
          "part_of": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/InVitroSystem",
                  "title": "InVitroSystem"
                },
                {
                  "$ref": "#/components/schemas/PrimaryCell",
                  "title": "PrimaryCell"
                },
                {
                  "$ref": "#/components/schemas/Tissue",
                  "title": "Tissue"
                },
                {
                  "$ref": "#/components/schemas/WholeOrganism",
                  "title": "WholeOrganism"
                }
              ]
            ]
          },
          "originated_from": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/InVitroSystem",
                  "title": "InVitroSystem"
                },
                {
                  "$ref": "#/components/schemas/PrimaryCell",
                  "title": "PrimaryCell"
                },
                {
                  "$ref": "#/components/schemas/Tissue",
                  "title": "Tissue"
                },
                {
                  "$ref": "#/components/schemas/WholeOrganism",
                  "title": "WholeOrganism"
                }
              ]
            ]
          },
          "treatments": {
            "title": "Treatments",
            "description": "A list of treatments applied to the biosample with the purpose of perturbation.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Treatment",
                    "title": "Treatment"
                  }
                ]
              ]
            }
          },
          "donors": {
            "title": "Donors",
            "description": "Donor(s) the sample was derived from.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/HumanDonor",
                    "title": "HumanDonor"
                  },
                  {
                    "$ref": "#/components/schemas/RodentDonor",
                    "title": "RodentDonor"
                  }
                ]
              ]
            }
          },
          "biomarkers": {
            "title": "Biomarkers",
            "description": "Biological markers that are associated with this sample.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Biomarker",
                    "title": "Biomarker"
                  }
                ]
              ]
            }
          },
          "embryonic": {
            "title": "Embryonic",
            "description": "Biosample is embryonic.",
            "type": "boolean"
          },
          "modifications": {
            "title": "Modifications",
            "description": "Links to modifications applied to this biosample.",
            "type": "array",
            "minItems": 1,
            "maxItems": 2,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/CrisprModification",
                    "title": "CrisprModification"
                  },
                  {
                    "$ref": "#/components/schemas/Modification",
                    "title": "Modification"
                  }
                ]
              ]
            }
          },
          "cellular_sub_pool": {
            "title": "Cellular Sub Pool",
            "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library.",
            "type": "string",
            "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$"
          },
          "starting_amount": {
            "title": "Starting Amount",
            "description": "The initial quantity of samples obtained.",
            "type": "number"
          },
          "starting_amount_units": {
            "title": "Starting Amount Units",
            "description": "The units used to quantify the amount of samples obtained.",
            "type": "string",
            "enum": [
              "cells",
              "cells/ml",
              "g",
              "items",
              "mg",
              "whole animals",
              "whole embryos",
              "\u03bcg",
              "ng"
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "An identifier from external resource.",
              "type": "string",
              "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$"
            }
          },
          "date_obtained": {
            "title": "Date Collected",
            "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
            "type": "string",
            "format": "date"
          },
          "sorted_from": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/InVitroSystem",
                  "title": "InVitroSystem"
                },
                {
                  "$ref": "#/components/schemas/MultiplexedSample",
                  "title": "MultiplexedSample"
                },
                {
                  "$ref": "#/components/schemas/PrimaryCell",
                  "title": "PrimaryCell"
                },
                {
                  "$ref": "#/components/schemas/TechnicalSample",
                  "title": "TechnicalSample"
                },
                {
                  "$ref": "#/components/schemas/Tissue",
                  "title": "Tissue"
                },
                {
                  "$ref": "#/components/schemas/WholeOrganism",
                  "title": "WholeOrganism"
                }
              ]
            ]
          },
          "sorted_from_detail": {
            "title": "Sorted From Detail",
            "description": "Detail for sample sorted into fractions capturing information about sorting.",
            "type": "string"
          },
          "virtual": {
            "title": "Virtual",
            "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
            "type": "boolean",
            "default": false
          },
          "construct_library_sets": {
            "title": "Construct Library Sets",
            "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/ConstructLibrarySet",
                    "title": "ConstructLibrarySet"
                  }
                ]
              ]
            }
          },
          "moi": {
            "title": "Multiplicity Of Infection",
            "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
            "type": "number",
            "minimum": 0
          },
          "nucleic_acid_delivery": {
            "title": "Nucleic Acid Delivery",
            "description": "Method of introduction of nucleic acid into the cell.",
            "type": "string",
            "enum": [
              "transfection",
              "adenoviral transduction",
              "lentiviral transduction"
            ]
          },
          "time_post_library_delivery": {
            "title": "Time Post Library Delivery",
            "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
            "type": "number"
          },
          "time_post_library_delivery_units": {
            "title": "Time Post Library Delivery Units",
            "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ]
          },
          "protocols": {
            "title": "Protocols",
            "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Protocol",
              "type": "string",
              "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
            }
          },
          "classifications": {
            "title": "Classifications",
            "description": "The general category of this type of in vitro system.",
            "type": "array",
            "minItems": 1,
            "maxItems": 2,
            "uniqueItems": true,
            "items": {
              "title": "Classification",
              "description": "The type of the in vitro system.",
              "type": "string",
              "enum": [
                "organoid",
                "gastruloid",
                "embryoid",
                "cell line",
                "differentiated cell specimen",
                "reprogrammed cell specimen",
                "pooled cell specimen"
              ]
            }
          },
          "time_post_change": {
            "title": "Time Post Change",
            "description": "The time that elapsed past the time-point when the cell fate change treatments were introduced.",
            "type": "number"
          },
          "time_post_change_units": {
            "title": "Time Post Change Units",
            "description": "The units of time that elapsed past the point when the cell fate change treatments were introduced.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ]
          },
          "cell_fate_change_treatments": {
            "title": "Cell Fate Change Treatments",
            "description": "A list of treatments applied to the biosample with the purpose of differentiation, dedifferentiation, or reprogramming.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Treatment",
                    "title": "Treatment"
                  }
                ]
              ]
            }
          },
          "cell_fate_change_protocol": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Document",
                  "title": "Document"
                }
              ]
            ]
          },
          "demultiplexed_from": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/InVitroSystem",
                  "title": "InVitroSystem"
                }
              ]
            ]
          },
          "passage_number": {
            "title": "Passage Number",
            "description": "Number of passages including the passages from the source.",
            "type": "integer",
            "minimum": 0
          },
          "targeted_sample_term": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/SampleTerm",
                  "title": "SampleTerm"
                }
              ]
            ]
          },
          "growth_medium": {
            "title": "Growth Medium",
            "description": "A growth medium of the in vitro system.",
            "type": "string",
            "enum": [
              "DMEM with serum",
              "DMEM without serum",
              "SMBM with serum",
              "SMBM without serum"
            ]
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the sample."
          },
          "file_sets": {
            "title": "File Sets",
            "type": "array",
            "description": "The file sets linked to this sample.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "File Set"
            }
          },
          "multiplexed_in": {
            "title": "Multiplexed In",
            "type": "array",
            "description": "The multiplexed samples in which this sample is included.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Multiplexed In"
            }
          },
          "sorted_fractions": {
            "title": "Sorted Fraction Samples",
            "type": "array",
            "description": "The fractions into which this sample has been sorted.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Sorted Fraction Sample"
            }
          },
          "origin_of": {
            "title": "Origin Sample Of",
            "type": "array",
            "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Originated Sample"
            }
          },
          "institutional_certificates": {
            "title": "Institutional Certificates",
            "type": "array",
            "description": "The institutional certificates under which use of this sample is approved.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Institutional Certificate"
            }
          },
          "sex": {
            "title": "Sex",
            "type": "string",
            "enum": [
              "female",
              "male",
              "mixed",
              "unspecified"
            ]
          },
          "age": {
            "title": "Age",
            "description": "Age of organism at the time of collection of the sample.",
            "type": "string",
            "pattern": "^((\\d+(\\.[1-9])?(\\-\\d+(\\.[1-9])?)?)|(unknown)|([1-8]?\\d)|(90 or above))$"
          },
          "upper_bound_age_in_hours": {
            "title": "Upper Bound Age In Hours",
            "description": "Upper bound of age of organism in hours at the time of collection of the sample.",
            "type": "number"
          },
          "lower_bound_age_in_hours": {
            "title": "Lower Bound Age In Hours",
            "description": "Lower bound of age of organism in hours at the time of collection of the sample .",
            "type": "number"
          },
          "parts": {
            "title": "Biosample Parts",
            "type": "array",
            "description": "The parts into which this sample has been divided.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Biosample Part"
            }
          },
          "pooled_in": {
            "title": "Pooled In",
            "type": "array",
            "description": "The pooled samples in which this sample is included.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Biosample Pooled In"
            }
          },
          "demultiplexed_to": {
            "title": "Demultiplexed To",
            "type": "array",
            "description": "The parts into which this sample has been demultiplexed.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Demultiplexed To"
            }
          }
        }
      },
      "MultiplexedSample": {
        "title": "Multiplexed Sample",
        "description": "A sample that is made by multiplexing multiple distinct samples.",
        "type": "object",
        "required": [
          "award",
          "lab",
          "multiplexed_samples"
        ],
        "not": {
          "anyOf": [
            {
              "required": [
                "construct_library_sets"
              ]
            },
            {
              "required": [
                "moi"
              ]
            },
            {
              "required": [
                "nucleic_acid_delivery"
              ]
            },
            {
              "required": [
                "time_post_library_delivery"
              ]
            },
            {
              "required": [
                "time_post_library_delivery_units"
              ]
            }
          ]
        },
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "publication_identifiers": {
            "title": "Publication Identifiers",
            "description": "The publication identifiers that provide more information about the object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Publication Identifier",
              "description": "A publication identifier that provides more information about the object.",
              "type": "string",
              "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$"
            }
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string",
            "format": "uri"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "7"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "starting_amount": {
            "title": "Starting Amount",
            "description": "The initial quantity of samples obtained.",
            "type": "number"
          },
          "starting_amount_units": {
            "title": "Starting Amount Units",
            "description": "The units used to quantify the amount of samples obtained.",
            "type": "string",
            "enum": [
              "cells",
              "cells/ml",
              "g",
              "items",
              "mg",
              "whole animals",
              "whole embryos",
              "\u03bcg",
              "ng"
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "An identifier from external resource.",
              "type": "string",
              "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$"
            }
          },
          "date_obtained": {
            "title": "Date Obtained",
            "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
            "type": "string",
            "format": "date"
          },
          "sorted_from": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/InVitroSystem",
                  "title": "InVitroSystem"
                },
                {
                  "$ref": "#/components/schemas/MultiplexedSample",
                  "title": "MultiplexedSample"
                },
                {
                  "$ref": "#/components/schemas/PrimaryCell",
                  "title": "PrimaryCell"
                },
                {
                  "$ref": "#/components/schemas/TechnicalSample",
                  "title": "TechnicalSample"
                },
                {
                  "$ref": "#/components/schemas/Tissue",
                  "title": "Tissue"
                },
                {
                  "$ref": "#/components/schemas/WholeOrganism",
                  "title": "WholeOrganism"
                }
              ]
            ]
          },
          "sorted_from_detail": {
            "title": "Sorted From Detail",
            "description": "Detail for sample sorted into fractions capturing information about sorting.",
            "type": "string"
          },
          "virtual": {
            "title": "Virtual",
            "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
            "type": "boolean",
            "default": false
          },
          "construct_library_sets": {
            "title": "Construct Library Sets",
            "type": "array",
            "description": "The construct library sets of the samples included in this multiplexed sample.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/ConstructLibrarySet",
                    "title": "ConstructLibrarySet"
                  }
                ]
              ]
            }
          },
          "moi": {
            "title": "Multiplicity Of Infection",
            "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
            "type": "number",
            "minimum": 0
          },
          "nucleic_acid_delivery": {
            "title": "Nucleic Acid Delivery",
            "description": "Method of introduction of nucleic acid into the cell.",
            "type": "string",
            "enum": [
              "transfection",
              "adenoviral transduction",
              "lentiviral transduction"
            ]
          },
          "time_post_library_delivery": {
            "title": "Time Post Library Delivery",
            "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
            "type": "number"
          },
          "time_post_library_delivery_units": {
            "title": "Time Post Library Delivery Units",
            "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ]
          },
          "protocols": {
            "title": "Protocols",
            "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Protocol",
              "type": "string",
              "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
            }
          },
          "multiplexed_samples": {
            "title": "Multiplexed Samples",
            "description": "The samples multiplexed together to produce this sample.",
            "type": "array",
            "minItems": 2,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/InVitroSystem",
                    "title": "InVitroSystem"
                  },
                  {
                    "$ref": "#/components/schemas/MultiplexedSample",
                    "title": "MultiplexedSample"
                  },
                  {
                    "$ref": "#/components/schemas/PrimaryCell",
                    "title": "PrimaryCell"
                  },
                  {
                    "$ref": "#/components/schemas/TechnicalSample",
                    "title": "TechnicalSample"
                  },
                  {
                    "$ref": "#/components/schemas/Tissue",
                    "title": "Tissue"
                  },
                  {
                    "$ref": "#/components/schemas/WholeOrganism",
                    "title": "WholeOrganism"
                  }
                ]
              ]
            }
          },
          "cellular_sub_pool": {
            "title": "Cellular Sub Pool",
            "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library.",
            "type": "string",
            "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$"
          },
          "barcode_sample_map": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/TabularFile",
                  "title": "TabularFile"
                }
              ]
            ]
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of this sample."
          },
          "file_sets": {
            "title": "File Sets",
            "type": "array",
            "description": "The file sets linked to this sample.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "File Set"
            }
          },
          "multiplexed_in": {
            "title": "Multiplexed In",
            "type": "array",
            "description": "The multiplexed samples in which this sample is included.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Multiplexed In"
            }
          },
          "sorted_fractions": {
            "title": "Sorted Fraction Samples",
            "type": "array",
            "description": "The fractions into which this sample has been sorted.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Sorted Fraction Sample"
            }
          },
          "origin_of": {
            "title": "Origin Sample Of",
            "type": "array",
            "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Originated Sample"
            }
          },
          "institutional_certificates": {
            "title": "Institutional Certificates",
            "type": "array",
            "description": "The institutional certificates under which use of this sample is approved.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Institutional Certificate"
            }
          },
          "sample_terms": {
            "title": "Sample Terms",
            "type": "array",
            "description": "The sample terms of the samples included in this multiplexed sample.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/SampleTerm",
                    "title": "SampleTerm"
                  }
                ]
              ]
            }
          },
          "disease_terms": {
            "title": "Disease Terms",
            "type": "array",
            "description": "The disease terms of the samples included in this multiplexed sample.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/PhenotypeTerm",
                    "title": "PhenotypeTerm"
                  }
                ]
              ]
            }
          },
          "treatments": {
            "title": "Treatments",
            "type": "array",
            "description": "The treatments of the samples included in this multiplexed sample.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Treatment",
                    "title": "Treatment"
                  }
                ]
              ]
            }
          },
          "modifications": {
            "title": "Modifications",
            "type": "array",
            "description": "The modifications of the samples included in this multiplexed sample.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/CrisprModification",
                    "title": "CrisprModification"
                  },
                  {
                    "$ref": "#/components/schemas/Modification",
                    "title": "Modification"
                  }
                ]
              ]
            }
          },
          "donors": {
            "title": "Donors",
            "type": "array",
            "description": "The donors of the samples included in this multiplexed sample.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/HumanDonor",
                    "title": "HumanDonor"
                  },
                  {
                    "$ref": "#/components/schemas/RodentDonor",
                    "title": "RodentDonor"
                  }
                ]
              ]
            }
          },
          "biomarkers": {
            "title": "Biomarkers",
            "type": "array",
            "description": "The biomarkers of the samples included in this multiplexed sample.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Biomarker",
                    "title": "Biomarker"
                  }
                ]
              ]
            }
          },
          "sources": {
            "title": "Sources",
            "type": "array",
            "description": "The sources of the samples included in this multiplexed sample.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Lab",
                    "title": "Lab"
                  },
                  {
                    "$ref": "#/components/schemas/Source",
                    "title": "Source"
                  }
                ]
              ]
            }
          },
          "classifications": {
            "title": "Classifications",
            "description": "The general category of this type of sample.",
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "title": "Classification",
              "type": "string"
            }
          }
        }
      },
      "PrimaryCell": {
        "title": "Primary Cell",
        "description": "A biosample that is directly harvested from a donor as cells, such as fibroblasts or immune cells.",
        "type": "object",
        "required": [
          "award",
          "lab",
          "sources",
          "donors",
          "sample_terms"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "publication_identifiers": {
            "title": "Publication Identifiers",
            "description": "The publication identifiers that provide more information about the object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Publication Identifier",
              "description": "A publication identifier that provides more information about the object.",
              "type": "string",
              "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$"
            }
          },
          "taxa": {
            "title": "Taxa",
            "type": "string",
            "description": "The species of the organism.",
            "enum": [
              "Homo sapiens",
              "Mus musculus"
            ]
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string",
            "format": "uri"
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "minItems": 1,
            "maxItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Lab",
                    "title": "Lab"
                  },
                  {
                    "$ref": "#/components/schemas/Source",
                    "title": "Source"
                  }
                ]
              ]
            }
          },
          "lot_id": {
            "title": "Lot ID",
            "description": "The lot identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "product_id": {
            "title": "Product ID",
            "description": "The product identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "19"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "lower_bound_age": {
            "title": "Lower Bound Age",
            "description": "Lower bound of age of the organism at the time of collection of the sample.",
            "type": "number"
          },
          "upper_bound_age": {
            "title": "Upper Bound Age",
            "description": "Upper bound of age of the organism at the time of collection of the sample.",
            "type": "number"
          },
          "age_units": {
            "title": "Age Units",
            "description": "The units of time associated with age of the biosample.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month",
              "year"
            ]
          },
          "sample_terms": {
            "title": "Sample Terms",
            "description": "Ontology terms identifying a biosample.",
            "type": "array",
            "minItems": 1,
            "maxItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/SampleTerm",
                    "title": "SampleTerm"
                  }
                ]
              ]
            }
          },
          "disease_terms": {
            "title": "Disease Terms",
            "description": "Ontology term of the disease associated with the biosample.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/PhenotypeTerm",
                    "title": "PhenotypeTerm"
                  }
                ]
              ]
            }
          },
          "pooled_from": {
            "title": "Biosamples Pooled From",
            "description": "The biosamples this biosample is pooled from.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 2,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/PrimaryCell",
                    "title": "PrimaryCell"
                  }
                ]
              ]
            }
          },
          "part_of": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/PrimaryCell",
                  "title": "PrimaryCell"
                },
                {
                  "$ref": "#/components/schemas/Tissue",
                  "title": "Tissue"
                },
                {
                  "$ref": "#/components/schemas/WholeOrganism",
                  "title": "WholeOrganism"
                }
              ]
            ]
          },
          "originated_from": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/InVitroSystem",
                  "title": "InVitroSystem"
                },
                {
                  "$ref": "#/components/schemas/PrimaryCell",
                  "title": "PrimaryCell"
                },
                {
                  "$ref": "#/components/schemas/Tissue",
                  "title": "Tissue"
                },
                {
                  "$ref": "#/components/schemas/WholeOrganism",
                  "title": "WholeOrganism"
                }
              ]
            ]
          },
          "treatments": {
            "title": "Treatments",
            "description": "A list of treatments applied to the biosample with the purpose of perturbation.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Treatment",
                    "title": "Treatment"
                  }
                ]
              ]
            }
          },
          "donors": {
            "title": "Donors",
            "description": "Donor(s) the sample was derived from.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/HumanDonor",
                    "title": "HumanDonor"
                  },
                  {
                    "$ref": "#/components/schemas/RodentDonor",
                    "title": "RodentDonor"
                  }
                ]
              ]
            }
          },
          "biomarkers": {
            "title": "Biomarkers",
            "description": "Biological markers that are associated with this sample.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Biomarker",
                    "title": "Biomarker"
                  }
                ]
              ]
            }
          },
          "embryonic": {
            "title": "Embryonic",
            "description": "Biosample is embryonic.",
            "type": "boolean"
          },
          "modifications": {
            "title": "Modifications",
            "description": "Links to modifications applied to this biosample.",
            "type": "array",
            "minItems": 1,
            "maxItems": 2,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/CrisprModification",
                    "title": "CrisprModification"
                  },
                  {
                    "$ref": "#/components/schemas/Modification",
                    "title": "Modification"
                  }
                ]
              ]
            }
          },
          "cellular_sub_pool": {
            "title": "Cellular Sub Pool",
            "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library.",
            "type": "string",
            "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$"
          },
          "starting_amount": {
            "title": "Starting Amount",
            "description": "The initial quantity of samples obtained.",
            "type": "number"
          },
          "starting_amount_units": {
            "title": "Starting Amount Units",
            "description": "The units used to quantify the amount of samples obtained.",
            "type": "string",
            "enum": [
              "cells",
              "cells/ml",
              "g",
              "items",
              "mg",
              "whole animals",
              "whole embryos",
              "\u03bcg",
              "ng"
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "An identifier from external resource.",
              "type": "string",
              "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$"
            }
          },
          "date_obtained": {
            "title": "Date Harvested",
            "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
            "type": "string",
            "format": "date"
          },
          "sorted_from": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/InVitroSystem",
                  "title": "InVitroSystem"
                },
                {
                  "$ref": "#/components/schemas/MultiplexedSample",
                  "title": "MultiplexedSample"
                },
                {
                  "$ref": "#/components/schemas/PrimaryCell",
                  "title": "PrimaryCell"
                },
                {
                  "$ref": "#/components/schemas/TechnicalSample",
                  "title": "TechnicalSample"
                },
                {
                  "$ref": "#/components/schemas/Tissue",
                  "title": "Tissue"
                },
                {
                  "$ref": "#/components/schemas/WholeOrganism",
                  "title": "WholeOrganism"
                }
              ]
            ]
          },
          "sorted_from_detail": {
            "title": "Sorted From Detail",
            "description": "Detail for sample sorted into fractions capturing information about sorting.",
            "type": "string"
          },
          "virtual": {
            "title": "Virtual",
            "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
            "type": "boolean",
            "default": false
          },
          "construct_library_sets": {
            "title": "Construct Library Sets",
            "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/ConstructLibrarySet",
                    "title": "ConstructLibrarySet"
                  }
                ]
              ]
            }
          },
          "moi": {
            "title": "Multiplicity Of Infection",
            "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
            "type": "number",
            "minimum": 0
          },
          "nucleic_acid_delivery": {
            "title": "Nucleic Acid Delivery",
            "description": "Method of introduction of nucleic acid into the cell.",
            "type": "string",
            "enum": [
              "transfection",
              "adenoviral transduction",
              "lentiviral transduction"
            ]
          },
          "time_post_library_delivery": {
            "title": "Time Post Library Delivery",
            "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
            "type": "number"
          },
          "time_post_library_delivery_units": {
            "title": "Time Post Library Delivery Units",
            "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ]
          },
          "protocols": {
            "title": "Protocols",
            "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Protocol",
              "type": "string",
              "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
            }
          },
          "passage_number": {
            "title": "Passage Number",
            "description": "Number of passages including the passages from the source.",
            "type": "integer",
            "minimum": 0
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the sample."
          },
          "file_sets": {
            "title": "File Sets",
            "type": "array",
            "description": "The file sets linked to this sample.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "File Set"
            }
          },
          "multiplexed_in": {
            "title": "Multiplexed In",
            "type": "array",
            "description": "The multiplexed samples in which this sample is included.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Multiplexed In"
            }
          },
          "sorted_fractions": {
            "title": "Sorted Fraction Samples",
            "type": "array",
            "description": "The fractions into which this sample has been sorted.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Sorted Fraction Sample"
            }
          },
          "origin_of": {
            "title": "Origin Sample Of",
            "type": "array",
            "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Originated Sample"
            }
          },
          "institutional_certificates": {
            "title": "Institutional Certificates",
            "type": "array",
            "description": "The institutional certificates under which use of this sample is approved.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Institutional Certificate"
            }
          },
          "sex": {
            "title": "Sex",
            "type": "string",
            "enum": [
              "female",
              "male",
              "mixed",
              "unspecified"
            ]
          },
          "age": {
            "title": "Age",
            "description": "Age of organism at the time of collection of the sample.",
            "type": "string",
            "pattern": "^((\\d+(\\.[1-9])?(\\-\\d+(\\.[1-9])?)?)|(unknown)|([1-8]?\\d)|(90 or above))$"
          },
          "upper_bound_age_in_hours": {
            "title": "Upper Bound Age In Hours",
            "description": "Upper bound of age of organism in hours at the time of collection of the sample.",
            "type": "number"
          },
          "lower_bound_age_in_hours": {
            "title": "Lower Bound Age In Hours",
            "description": "Lower bound of age of organism in hours at the time of collection of the sample .",
            "type": "number"
          },
          "parts": {
            "title": "Biosample Parts",
            "type": "array",
            "description": "The parts into which this sample has been divided.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Biosample Part"
            }
          },
          "pooled_in": {
            "title": "Pooled In",
            "type": "array",
            "description": "The pooled samples in which this sample is included.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Biosample Pooled In"
            }
          },
          "classifications": {
            "title": "Classifications",
            "description": "The general category of this type of sample.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Classification",
              "type": "string"
            }
          }
        }
      },
      "TechnicalSample": {
        "title": "Technical Sample",
        "description": "A sample that is used as a medium to perform biological measurement without the intent to characterize the technical sample itself. For example, the solution in which RNA oligos binding experiments are performed.",
        "type": "object",
        "required": [
          "award",
          "lab",
          "sources",
          "sample_material",
          "sample_terms"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "publication_identifiers": {
            "title": "Publication Identifiers",
            "description": "The publication identifiers that provide more information about the object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Publication Identifier",
              "description": "A publication identifier that provides more information about the object.",
              "type": "string",
              "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$"
            }
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string",
            "format": "uri"
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "minItems": 1,
            "maxItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Lab",
                    "title": "Lab"
                  },
                  {
                    "$ref": "#/components/schemas/Source",
                    "title": "Source"
                  }
                ]
              ]
            }
          },
          "lot_id": {
            "title": "Lot ID",
            "description": "The lot identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "product_id": {
            "title": "Product ID",
            "description": "The product identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "12"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "starting_amount": {
            "title": "Starting Amount",
            "description": "The initial quantity of samples obtained.",
            "type": "number"
          },
          "starting_amount_units": {
            "title": "Starting Amount Units",
            "description": "The units used to quantify the amount of samples obtained.",
            "type": "string",
            "enum": [
              "cells",
              "cells/ml",
              "g",
              "items",
              "mg",
              "whole animals",
              "whole embryos",
              "\u03bcg",
              "ng"
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "An identifier from external resource.",
              "type": "string",
              "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$"
            }
          },
          "date_obtained": {
            "title": "Date Obtained",
            "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
            "type": "string",
            "format": "date"
          },
          "sorted_from": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/InVitroSystem",
                  "title": "InVitroSystem"
                },
                {
                  "$ref": "#/components/schemas/MultiplexedSample",
                  "title": "MultiplexedSample"
                },
                {
                  "$ref": "#/components/schemas/PrimaryCell",
                  "title": "PrimaryCell"
                },
                {
                  "$ref": "#/components/schemas/TechnicalSample",
                  "title": "TechnicalSample"
                },
                {
                  "$ref": "#/components/schemas/Tissue",
                  "title": "Tissue"
                },
                {
                  "$ref": "#/components/schemas/WholeOrganism",
                  "title": "WholeOrganism"
                }
              ]
            ]
          },
          "sorted_from_detail": {
            "title": "Sorted From Detail",
            "description": "Detail for sample sorted into fractions capturing information about sorting.",
            "type": "string"
          },
          "virtual": {
            "title": "Virtual",
            "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
            "type": "boolean",
            "default": false
          },
          "construct_library_sets": {
            "title": "Construct Library Sets",
            "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/ConstructLibrarySet",
                    "title": "ConstructLibrarySet"
                  }
                ]
              ]
            }
          },
          "moi": {
            "title": "Multiplicity Of Infection",
            "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
            "type": "number",
            "minimum": 0
          },
          "nucleic_acid_delivery": {
            "title": "Nucleic Acid Delivery",
            "description": "Method of introduction of nucleic acid into the cell.",
            "type": "string",
            "enum": [
              "transfection",
              "adenoviral transduction",
              "lentiviral transduction"
            ]
          },
          "time_post_library_delivery": {
            "title": "Time Post Library Delivery",
            "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
            "type": "number"
          },
          "time_post_library_delivery_units": {
            "title": "Time Post Library Delivery Units",
            "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ]
          },
          "protocols": {
            "title": "Protocols",
            "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Protocol",
              "type": "string",
              "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
            }
          },
          "sample_material": {
            "title": "Sample Material",
            "type": "string",
            "default": "undefined",
            "enum": [
              "undefined",
              "inorganic",
              "synthetic",
              "organic"
            ]
          },
          "taxa": {
            "title": "Taxa",
            "type": "string",
            "enum": [
              "Saccharomyces cerevisiae",
              "Homo sapiens"
            ]
          },
          "sample_terms": {
            "title": "Sample Terms",
            "description": "Ontology terms identifying a technical sample.",
            "type": "array",
            "minItems": 1,
            "maxItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/SampleTerm",
                    "title": "SampleTerm"
                  }
                ]
              ]
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of this sample."
          },
          "file_sets": {
            "title": "File Sets",
            "type": "array",
            "description": "The file sets linked to this sample.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "File Set"
            }
          },
          "multiplexed_in": {
            "title": "Multiplexed In",
            "type": "array",
            "description": "The multiplexed samples in which this sample is included.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Multiplexed In"
            }
          },
          "sorted_fractions": {
            "title": "Sorted Fraction Samples",
            "type": "array",
            "description": "The fractions into which this sample has been sorted.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Sorted Fraction Sample"
            }
          },
          "origin_of": {
            "title": "Origin Sample Of",
            "type": "array",
            "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Originated Sample"
            }
          },
          "institutional_certificates": {
            "title": "Institutional Certificates",
            "type": "array",
            "description": "The institutional certificates under which use of this sample is approved.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Institutional Certificate"
            }
          },
          "classifications": {
            "title": "Classifications",
            "description": "The general category of this type of sample.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Classification",
              "type": "string"
            }
          }
        }
      },
      "Tissue": {
        "title": "Tissue",
        "description": "A biosample that is directly harvested from a donor, typically a dissection from an organ.",
        "type": "object",
        "required": [
          "award",
          "lab",
          "sources",
          "donors",
          "sample_terms"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "publication_identifiers": {
            "title": "Publication Identifiers",
            "description": "The publication identifiers that provide more information about the object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Publication Identifier",
              "description": "A publication identifier that provides more information about the object.",
              "type": "string",
              "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$"
            }
          },
          "taxa": {
            "title": "Taxa",
            "type": "string",
            "description": "The species of the organism.",
            "enum": [
              "Homo sapiens",
              "Mus musculus"
            ]
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string",
            "format": "uri"
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "minItems": 1,
            "maxItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Lab",
                    "title": "Lab"
                  },
                  {
                    "$ref": "#/components/schemas/Source",
                    "title": "Source"
                  }
                ]
              ]
            }
          },
          "lot_id": {
            "title": "Lot ID",
            "description": "The lot identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "product_id": {
            "title": "Product ID",
            "description": "The product identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "19"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "lower_bound_age": {
            "title": "Lower Bound Age",
            "description": "Lower bound of age of the organism at the time of collection of the sample.",
            "type": "number"
          },
          "upper_bound_age": {
            "title": "Upper Bound Age",
            "description": "Upper bound of age of the organism at the time of collection of the sample.",
            "type": "number"
          },
          "age_units": {
            "title": "Age Units",
            "description": "The units of time associated with age of the biosample.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month",
              "year"
            ]
          },
          "sample_terms": {
            "title": "Sample Terms",
            "description": "Ontology terms identifying a biosample.",
            "type": "array",
            "minItems": 1,
            "maxItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/SampleTerm",
                    "title": "SampleTerm"
                  }
                ]
              ]
            }
          },
          "disease_terms": {
            "title": "Disease Terms",
            "description": "Ontology term of the disease associated with the biosample.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/PhenotypeTerm",
                    "title": "PhenotypeTerm"
                  }
                ]
              ]
            }
          },
          "pooled_from": {
            "title": "Biosamples Pooled From",
            "description": "The biosamples this biosample is pooled from.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 2,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Tissue",
                    "title": "Tissue"
                  }
                ]
              ]
            }
          },
          "part_of": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Tissue",
                  "title": "Tissue"
                },
                {
                  "$ref": "#/components/schemas/WholeOrganism",
                  "title": "WholeOrganism"
                }
              ]
            ]
          },
          "originated_from": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/InVitroSystem",
                  "title": "InVitroSystem"
                },
                {
                  "$ref": "#/components/schemas/PrimaryCell",
                  "title": "PrimaryCell"
                },
                {
                  "$ref": "#/components/schemas/Tissue",
                  "title": "Tissue"
                },
                {
                  "$ref": "#/components/schemas/WholeOrganism",
                  "title": "WholeOrganism"
                }
              ]
            ]
          },
          "treatments": {
            "title": "Treatments",
            "description": "A list of treatments applied to the biosample with the purpose of perturbation.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Treatment",
                    "title": "Treatment"
                  }
                ]
              ]
            }
          },
          "donors": {
            "title": "Donors",
            "description": "Donor(s) the sample was derived from.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/HumanDonor",
                    "title": "HumanDonor"
                  },
                  {
                    "$ref": "#/components/schemas/RodentDonor",
                    "title": "RodentDonor"
                  }
                ]
              ]
            }
          },
          "biomarkers": {
            "title": "Biomarkers",
            "description": "Biological markers that are associated with this sample.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Biomarker",
                    "title": "Biomarker"
                  }
                ]
              ]
            }
          },
          "embryonic": {
            "title": "Embryonic",
            "description": "Biosample is embryonic.",
            "type": "boolean"
          },
          "modifications": {
            "title": "Modifications",
            "description": "Links to modifications applied to this biosample.",
            "type": "array",
            "minItems": 1,
            "maxItems": 2,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/CrisprModification",
                    "title": "CrisprModification"
                  },
                  {
                    "$ref": "#/components/schemas/Modification",
                    "title": "Modification"
                  }
                ]
              ]
            }
          },
          "cellular_sub_pool": {
            "title": "Cellular Sub Pool",
            "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library.",
            "type": "string",
            "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$"
          },
          "starting_amount": {
            "title": "Starting Amount",
            "description": "The initial quantity of samples obtained.",
            "type": "number"
          },
          "starting_amount_units": {
            "title": "Starting Amount Units",
            "description": "The units used to quantify the amount of samples obtained.",
            "type": "string",
            "enum": [
              "cells",
              "cells/ml",
              "g",
              "items",
              "mg",
              "whole animals",
              "whole embryos",
              "\u03bcg",
              "ng"
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "An identifier from external resource.",
              "type": "string",
              "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$"
            }
          },
          "date_obtained": {
            "title": "Date Harvested",
            "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
            "type": "string",
            "format": "date"
          },
          "sorted_from": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/InVitroSystem",
                  "title": "InVitroSystem"
                },
                {
                  "$ref": "#/components/schemas/MultiplexedSample",
                  "title": "MultiplexedSample"
                },
                {
                  "$ref": "#/components/schemas/PrimaryCell",
                  "title": "PrimaryCell"
                },
                {
                  "$ref": "#/components/schemas/TechnicalSample",
                  "title": "TechnicalSample"
                },
                {
                  "$ref": "#/components/schemas/Tissue",
                  "title": "Tissue"
                },
                {
                  "$ref": "#/components/schemas/WholeOrganism",
                  "title": "WholeOrganism"
                }
              ]
            ]
          },
          "sorted_from_detail": {
            "title": "Sorted From Detail",
            "description": "Detail for sample sorted into fractions capturing information about sorting.",
            "type": "string"
          },
          "virtual": {
            "title": "Virtual",
            "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
            "type": "boolean",
            "default": false
          },
          "construct_library_sets": {
            "title": "Construct Library Sets",
            "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/ConstructLibrarySet",
                    "title": "ConstructLibrarySet"
                  }
                ]
              ]
            }
          },
          "moi": {
            "title": "Multiplicity Of Infection",
            "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
            "type": "number",
            "minimum": 0
          },
          "nucleic_acid_delivery": {
            "title": "Nucleic Acid Delivery",
            "description": "Method of introduction of nucleic acid into the cell.",
            "type": "string",
            "enum": [
              "transfection",
              "adenoviral transduction",
              "lentiviral transduction"
            ]
          },
          "time_post_library_delivery": {
            "title": "Time Post Library Delivery",
            "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
            "type": "number"
          },
          "time_post_library_delivery_units": {
            "title": "Time Post Library Delivery Units",
            "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ]
          },
          "protocols": {
            "title": "Protocols",
            "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Protocol",
              "type": "string",
              "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
            }
          },
          "pmi": {
            "title": "Post-mortem Interval",
            "description": "The amount of time elapsed since death.",
            "type": "integer",
            "minimum": 1
          },
          "pmi_units": {
            "title": "Post-mortem Interval Units",
            "description": "The unit in which the PMI time was reported.",
            "type": "string",
            "enum": [
              "second",
              "minute",
              "hour",
              "day",
              "week"
            ]
          },
          "ccf_id": {
            "title": "Common Coordinate Framework Identifier",
            "description": "HubMap Common Coordinate Framework unique identifier corresponding to the organ, biological structure, and spatial location of the tissue specimen.",
            "type": "string",
            "format": "uuid"
          },
          "preservation_method": {
            "title": "Preservation Method",
            "description": "The method by which the tissue was preserved: cryopreservation (slow-freeze) or flash-freezing.",
            "type": "string",
            "enum": [
              "cryopreservation",
              "flash-freezing"
            ]
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the sample."
          },
          "file_sets": {
            "title": "File Sets",
            "type": "array",
            "description": "The file sets linked to this sample.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "File Set"
            }
          },
          "multiplexed_in": {
            "title": "Multiplexed In",
            "type": "array",
            "description": "The multiplexed samples in which this sample is included.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Multiplexed In"
            }
          },
          "sorted_fractions": {
            "title": "Sorted Fraction Samples",
            "type": "array",
            "description": "The fractions into which this sample has been sorted.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Sorted Fraction Sample"
            }
          },
          "origin_of": {
            "title": "Origin Sample Of",
            "type": "array",
            "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Originated Sample"
            }
          },
          "institutional_certificates": {
            "title": "Institutional Certificates",
            "type": "array",
            "description": "The institutional certificates under which use of this sample is approved.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Institutional Certificate"
            }
          },
          "sex": {
            "title": "Sex",
            "type": "string",
            "enum": [
              "female",
              "male",
              "mixed",
              "unspecified"
            ]
          },
          "age": {
            "title": "Age",
            "description": "Age of organism at the time of collection of the sample.",
            "type": "string",
            "pattern": "^((\\d+(\\.[1-9])?(\\-\\d+(\\.[1-9])?)?)|(unknown)|([1-8]?\\d)|(90 or above))$"
          },
          "upper_bound_age_in_hours": {
            "title": "Upper Bound Age In Hours",
            "description": "Upper bound of age of organism in hours at the time of collection of the sample.",
            "type": "number"
          },
          "lower_bound_age_in_hours": {
            "title": "Lower Bound Age In Hours",
            "description": "Lower bound of age of organism in hours at the time of collection of the sample .",
            "type": "number"
          },
          "parts": {
            "title": "Biosample Parts",
            "type": "array",
            "description": "The parts into which this sample has been divided.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Biosample Part"
            }
          },
          "pooled_in": {
            "title": "Pooled In",
            "type": "array",
            "description": "The pooled samples in which this sample is included.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Biosample Pooled In"
            }
          },
          "classifications": {
            "title": "Classifications",
            "description": "The general category of this type of sample.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Classification",
              "type": "string"
            }
          }
        }
      },
      "WholeOrganism": {
        "title": "Whole Organism",
        "description": "A biosample that is a whole model organism. For example, a mouse embryo.",
        "type": "object",
        "required": [
          "award",
          "lab",
          "sources",
          "donors",
          "sample_terms"
        ],
        "not": {
          "anyOf": [
            {
              "required": [
                "part_of"
              ]
            },
            {
              "required": [
                "pooled_from"
              ]
            }
          ]
        },
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "taxa": {
            "title": "Taxa",
            "type": "string",
            "description": "The species of the organism.",
            "enum": [
              "Homo sapiens",
              "Mus musculus"
            ]
          },
          "publication_identifiers": {
            "title": "Publication Identifiers",
            "description": "The publication identifiers that provide more information about the object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Publication Identifier",
              "description": "A publication identifier that provides more information about the object.",
              "type": "string",
              "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$"
            }
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string",
            "format": "uri"
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "minItems": 1,
            "maxItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Lab",
                    "title": "Lab"
                  },
                  {
                    "$ref": "#/components/schemas/Source",
                    "title": "Source"
                  }
                ]
              ]
            }
          },
          "lot_id": {
            "title": "Lot ID",
            "description": "The lot identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "product_id": {
            "title": "Product ID",
            "description": "The product identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "22"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "lower_bound_age": {
            "title": "Lower Bound Age",
            "description": "Lower bound of age of the organism at the time of collection of the sample.",
            "type": "number"
          },
          "upper_bound_age": {
            "title": "Upper Bound Age",
            "description": "Upper bound of age of the organism at the time of collection of the sample.",
            "type": "number"
          },
          "age_units": {
            "title": "Age Units",
            "description": "The units of time associated with age of the biosample.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month",
              "year"
            ]
          },
          "sample_terms": {
            "title": "Sample Terms",
            "description": "Ontology terms identifying a biosample.",
            "type": "array",
            "minItems": 1,
            "maxItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/SampleTerm",
                    "title": "SampleTerm"
                  }
                ]
              ]
            },
            "default": [
              "25d5ad53-15fd-4a44-878a-ece2f7e86509"
            ]
          },
          "disease_terms": {
            "title": "Disease Terms",
            "description": "Ontology term of the disease associated with the biosample.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/PhenotypeTerm",
                    "title": "PhenotypeTerm"
                  }
                ]
              ]
            }
          },
          "pooled_from": {
            "title": "Biosamples Pooled From",
            "description": "The biosamples this biosample is pooled from.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 2,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/InVitroSystem",
                    "title": "InVitroSystem"
                  },
                  {
                    "$ref": "#/components/schemas/PrimaryCell",
                    "title": "PrimaryCell"
                  },
                  {
                    "$ref": "#/components/schemas/Tissue",
                    "title": "Tissue"
                  },
                  {
                    "$ref": "#/components/schemas/WholeOrganism",
                    "title": "WholeOrganism"
                  }
                ]
              ]
            }
          },
          "part_of": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/InVitroSystem",
                  "title": "InVitroSystem"
                },
                {
                  "$ref": "#/components/schemas/PrimaryCell",
                  "title": "PrimaryCell"
                },
                {
                  "$ref": "#/components/schemas/Tissue",
                  "title": "Tissue"
                },
                {
                  "$ref": "#/components/schemas/WholeOrganism",
                  "title": "WholeOrganism"
                }
              ]
            ]
          },
          "originated_from": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/InVitroSystem",
                  "title": "InVitroSystem"
                },
                {
                  "$ref": "#/components/schemas/PrimaryCell",
                  "title": "PrimaryCell"
                },
                {
                  "$ref": "#/components/schemas/Tissue",
                  "title": "Tissue"
                },
                {
                  "$ref": "#/components/schemas/WholeOrganism",
                  "title": "WholeOrganism"
                }
              ]
            ]
          },
          "treatments": {
            "title": "Treatments",
            "description": "A list of treatments applied to the biosample with the purpose of perturbation.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Treatment",
                    "title": "Treatment"
                  }
                ]
              ]
            }
          },
          "donors": {
            "title": "Donors",
            "description": "Donor(s) the sample was derived from.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/HumanDonor",
                    "title": "HumanDonor"
                  },
                  {
                    "$ref": "#/components/schemas/RodentDonor",
                    "title": "RodentDonor"
                  }
                ]
              ]
            }
          },
          "biomarkers": {
            "title": "Biomarkers",
            "description": "Biological markers that are associated with this sample.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Biomarker",
                    "title": "Biomarker"
                  }
                ]
              ]
            }
          },
          "embryonic": {
            "title": "Embryonic",
            "description": "Biosample is embryonic.",
            "type": "boolean"
          },
          "modifications": {
            "title": "Modifications",
            "description": "Links to modifications applied to this biosample.",
            "type": "array",
            "minItems": 1,
            "maxItems": 2,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/CrisprModification",
                    "title": "CrisprModification"
                  },
                  {
                    "$ref": "#/components/schemas/Modification",
                    "title": "Modification"
                  }
                ]
              ]
            }
          },
          "cellular_sub_pool": {
            "title": "Cellular Sub Pool",
            "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library.",
            "type": "string",
            "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$"
          },
          "starting_amount": {
            "title": "Starting Amount",
            "description": "The initial quantity of samples obtained.",
            "type": "number"
          },
          "starting_amount_units": {
            "title": "Starting Amount Units",
            "description": "The units used to quantify the amount of samples obtained.",
            "type": "string",
            "enum": [
              "cells",
              "cells/ml",
              "g",
              "items",
              "mg",
              "whole animals",
              "whole embryos",
              "\u03bcg",
              "ng"
            ]
          },
          "dbxrefs": {
            "title": "External Resources",
            "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "External Identifier",
              "description": "An identifier from external resource.",
              "type": "string",
              "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$"
            }
          },
          "date_obtained": {
            "title": "Date Obtained",
            "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
            "type": "string",
            "format": "date"
          },
          "sorted_from": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/InVitroSystem",
                  "title": "InVitroSystem"
                },
                {
                  "$ref": "#/components/schemas/MultiplexedSample",
                  "title": "MultiplexedSample"
                },
                {
                  "$ref": "#/components/schemas/PrimaryCell",
                  "title": "PrimaryCell"
                },
                {
                  "$ref": "#/components/schemas/TechnicalSample",
                  "title": "TechnicalSample"
                },
                {
                  "$ref": "#/components/schemas/Tissue",
                  "title": "Tissue"
                },
                {
                  "$ref": "#/components/schemas/WholeOrganism",
                  "title": "WholeOrganism"
                }
              ]
            ]
          },
          "sorted_from_detail": {
            "title": "Sorted From Detail",
            "description": "Detail for sample sorted into fractions capturing information about sorting.",
            "type": "string"
          },
          "virtual": {
            "title": "Virtual",
            "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
            "type": "boolean",
            "default": false
          },
          "construct_library_sets": {
            "title": "Construct Library Sets",
            "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/ConstructLibrarySet",
                    "title": "ConstructLibrarySet"
                  }
                ]
              ]
            }
          },
          "moi": {
            "title": "Multiplicity Of Infection",
            "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
            "type": "number",
            "minimum": 0
          },
          "nucleic_acid_delivery": {
            "title": "Nucleic Acid Delivery",
            "description": "Method of introduction of nucleic acid into the cell.",
            "type": "string",
            "enum": [
              "transfection",
              "adenoviral transduction",
              "lentiviral transduction"
            ]
          },
          "time_post_library_delivery": {
            "title": "Time Post Library Delivery",
            "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
            "type": "number"
          },
          "time_post_library_delivery_units": {
            "title": "Time Post Library Delivery Units",
            "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ]
          },
          "protocols": {
            "title": "Protocols",
            "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Protocol",
              "type": "string",
              "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the sample."
          },
          "file_sets": {
            "title": "File Sets",
            "type": "array",
            "description": "The file sets linked to this sample.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "File Set"
            }
          },
          "multiplexed_in": {
            "title": "Multiplexed In",
            "type": "array",
            "description": "The multiplexed samples in which this sample is included.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Multiplexed In"
            }
          },
          "sorted_fractions": {
            "title": "Sorted Fraction Samples",
            "type": "array",
            "description": "The fractions into which this sample has been sorted.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Sorted Fraction Sample"
            }
          },
          "origin_of": {
            "title": "Origin Sample Of",
            "type": "array",
            "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Originated Sample"
            }
          },
          "institutional_certificates": {
            "title": "Institutional Certificates",
            "type": "array",
            "description": "The institutional certificates under which use of this sample is approved.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Institutional Certificate"
            }
          },
          "sex": {
            "title": "Sex",
            "type": "string",
            "enum": [
              "female",
              "male",
              "mixed",
              "unspecified"
            ]
          },
          "age": {
            "title": "Age",
            "description": "Age of organism at the time of collection of the sample.",
            "type": "string",
            "pattern": "^((\\d+(\\.[1-9])?(\\-\\d+(\\.[1-9])?)?)|(unknown)|([1-8]?\\d)|(90 or above))$"
          },
          "upper_bound_age_in_hours": {
            "title": "Upper Bound Age In Hours",
            "description": "Upper bound of age of organism in hours at the time of collection of the sample.",
            "type": "number"
          },
          "lower_bound_age_in_hours": {
            "title": "Lower Bound Age In Hours",
            "description": "Lower bound of age of organism in hours at the time of collection of the sample .",
            "type": "number"
          },
          "parts": {
            "title": "Biosample Parts",
            "type": "array",
            "description": "The parts into which this sample has been divided.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Biosample Part"
            }
          },
          "pooled_in": {
            "title": "Pooled In",
            "type": "array",
            "description": "The pooled samples in which this sample is included.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Biosample Pooled In"
            }
          },
          "classifications": {
            "title": "Classifications",
            "description": "The general category of this type of sample.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Classification",
              "type": "string"
            }
          }
        }
      },
      "Software": {
        "title": "Software",
        "description": "A software used for computational  analysis. For example, Bowtie2 alignment software.",
        "type": "object",
        "required": [
          "lab",
          "award",
          "name",
          "title",
          "description",
          "source_url"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "publication_identifiers": {
            "title": "Publication Identifiers",
            "description": "The publication identifiers that provide more information about the object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Publication Identifier",
              "description": "A publication identifier that provides more information about the object.",
              "type": "string",
              "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$"
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "in progress",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "released"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "5"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "name": {
            "title": "Name",
            "description": "Unique name of the software package; a lowercase version of the title.",
            "type": "string",
            "pattern": "^[a-z0-9\\-\\_]+"
          },
          "title": {
            "title": "Title",
            "description": "The preferred viewable name of the software.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "source_url": {
            "title": "Source URL",
            "description": "An external resource to the codebase.",
            "type": "string",
            "format": "uri"
          },
          "used_by": {
            "title": "Used by",
            "type": "array",
            "description": "The component(s) of the IGVF consortium that utilize this software.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Used by",
              "type": "string",
              "enum": [
                "consortium analysis",
                "DACC",
                "processing pipelines"
              ]
            }
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "versions": {
            "title": "Versions",
            "type": "array",
            "description": "A list of versions that have been released for this software.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/SoftwareVersion",
                    "title": "SoftwareVersion"
                  }
                ]
              ]
            }
          }
        }
      },
      "SoftwareVersion": {
        "title": "Software Version",
        "description": "A specific version of a software used for computational analysis. For example, Bowtie2 v2.3.0.",
        "type": "object",
        "anyOf": [
          {
            "required": [
              "lab",
              "award",
              "software",
              "version",
              "download_id"
            ]
          },
          {
            "required": [
              "lab",
              "award",
              "software",
              "version",
              "downloaded_url"
            ]
          }
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "publication_identifiers": {
            "title": "Publication Identifiers",
            "description": "The publication identifiers that provide more information about the object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Publication Identifier",
              "description": "A publication identifier that provides more information about the object.",
              "type": "string",
              "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$"
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "in progress",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "released"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "5"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "software": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Software",
                  "title": "Software"
                }
              ]
            ]
          },
          "version": {
            "title": "Version",
            "description": "The version of a particular software.",
            "type": "string",
            "pattern": "^v(?!0\\.0\\.0$)[0-9]+\\.[0-9]+\\.[0-9]+$"
          },
          "download_id": {
            "title": "Download ID",
            "description": "The MD5 checksum, SHA-1 commit ID, image hash, or similar permanent identifier of the particular version of software used.",
            "type": "string",
            "format": "hex"
          },
          "downloaded_url": {
            "title": "Download URL",
            "description": "An external resource to track the version of the software downloaded.",
            "type": "string",
            "format": "uri"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "A unique identifier for a software version."
          }
        }
      },
      "Source": {
        "title": "Source",
        "description": "A vendor or a lab that provides samples for study.",
        "type": "object",
        "required": [
          "name",
          "title"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "in progress",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "released"
            ]
          },
          "url": {
            "title": "URL",
            "description": "An external resource with additional information.",
            "type": "string",
            "format": "uri"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "4"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "title": {
            "title": "Title",
            "description": "The complete name of the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "name": {
            "title": "Name",
            "description": "A short unique name for the source.",
            "type": "string",
            "pattern": "^[a-z0-9\\-]+$"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          }
        }
      },
      "Treatment": {
        "title": "Treatment",
        "description": "A protein or chemical treatment applied to samples such as lipopolysaccharide, interleukin-2, or leucine.",
        "type": "object",
        "required": [
          "award",
          "lab",
          "treatment_term_name",
          "treatment_type",
          "purpose",
          "depletion"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "sources": {
            "title": "Sources",
            "description": "The originating lab(s) or vendor(s).",
            "type": "array",
            "minItems": 1,
            "maxItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Lab",
                    "title": "Lab"
                  },
                  {
                    "$ref": "#/components/schemas/Source",
                    "title": "Source"
                  }
                ]
              ]
            }
          },
          "lot_id": {
            "title": "Lot ID",
            "description": "The lot identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "product_id": {
            "title": "Product ID",
            "description": "The product identifier provided by the originating lab or vendor.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that describe the treatment protocol details.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "in progress",
            "enum": [
              "archived",
              "deleted",
              "in progress",
              "released"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "7"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "amount": {
            "title": "Amount",
            "type": "number",
            "description": "Specific quantity of the applied treatment (used in conjunction with amount_units)."
          },
          "amount_units": {
            "title": "Amount Units",
            "type": "string",
            "description": "A unit for an amount other than those for time or temperature.",
            "enum": [
              "mg/kg",
              "mg/mL",
              "mM",
              "ng/mL",
              "nM",
              "percent",
              "\u03bcg/kg",
              "\u03bcg/kg",
              "\u03bcg/mL",
              "\u03bcM",
              "kpa"
            ]
          },
          "duration": {
            "title": "Duration",
            "type": "number",
            "description": "Duration indicates the time elapsed between the start and end of the treatment."
          },
          "duration_units": {
            "title": "Duration Units",
            "type": "string",
            "description": "A unit of time.",
            "enum": [
              "second",
              "minute",
              "hour",
              "day"
            ]
          },
          "pH": {
            "title": "pH",
            "type": "number",
            "description": "Final pH of the solution containing a chemical compound (if applicable)"
          },
          "purpose": {
            "title": "Purpose",
            "type": "string",
            "enum": [
              "activation",
              "agonist",
              "antagonist",
              "control",
              "differentiation",
              "de-differentiation",
              "perturbation",
              "selection",
              "stimulation"
            ],
            "description": "The intended purpose for treating the samples; Activation: treatment is known to activate a pathway in the biosample; Agonist: a substance which is known to initiate a physiological response when combined with a receptor; Antagonist: a substance that is known to interfere with or inhibits the physiological action of another; Control: treatment applied to a sample for control purposes; Differentiation: treatment that is applied to convert a less specialized cell to a more specialized cell; De-differentiation: treatment used to reprogram differentiated cells back to less determined cell states; Perturbation: treatment applied to the sample in order to study the effect of its application; Selection: treatment used to affect biosample in a way that can be used to distinguish cells and select for in the downstream steps; Stimulation: treatment applied to stimulate a cellular pathway."
          },
          "post_treatment_time": {
            "title": "Post-treatment Time",
            "description": "Post treatment time in conjunction with post treatment time units is used to specify the time that has passed between the point when biosamples were removed from the treatment solution before being sampled or treated with the next treatment.",
            "type": "number"
          },
          "post_treatment_time_units": {
            "title": "Post-treatment Time Units",
            "type": "string",
            "description": "A unit of time.",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ]
          },
          "temperature": {
            "title": "Temperature",
            "type": "number",
            "description": "The temperature in Celsius to which the sample was exposed"
          },
          "temperature_units": {
            "title": "Temperature Units",
            "type": "string",
            "description": "A unit of temperature.",
            "enum": [
              "Celsius"
            ]
          },
          "treatment_type": {
            "title": "Treatment Type",
            "type": "string",
            "enum": [
              "chemical",
              "protein",
              "environmental"
            ],
            "description": "The classification of treatment agent that specifies its exact molecular nature. Chemical type refers to (natural or synthetic) organic/inorganic compounds and also includes drugs, while protein type is restricted to active protein biomolecules that are naturally or artifically synthesized via cellular translation mechanism of converting DNA into a protein. Environmental type referes to other external conditions that directly influence biological processes or reactions within a given environment. Example of chemical type: lactate, ethanol,hydrocortisone, LPS etc. Example of protein type: Interferons, interlukin, antibodies, etc. Example of chemical type: stiffness."
          },
          "treatment_term_id": {
            "title": "Treatment Term ID",
            "description": "Ontology identifier describing a component in the treatment.",
            "type": "string",
            "pattern": "^((CHEBI:[0-9]{1,7})|(UniProtKB:[A-Z0-9]{6})|(NTR:[0-9]{2,8}))$"
          },
          "treatment_term_name": {
            "title": "Treatment Term Name",
            "description": "Ontology term describing a component in the treatment that is the principal component affecting the biosample being treated. Examples: interferon gamma, interleukin-4, Fibroblast growth factor 2, 20-hydroxyecdysone, 5-bromouridine etc.",
            "type": "string"
          },
          "depletion": {
            "title": "Depletion",
            "description": "Treatment is depleted.",
            "type": "boolean"
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          }
        }
      },
      "User": {
        "title": "User",
        "description": "A user of IGVF data portal who is a member or affiliate member of IGVF.",
        "type": "object",
        "required": [
          "email",
          "first_name",
          "last_name"
        ],
        "additionalProperties": false,
        "properties": {
          "status": {
            "title": "Status",
            "type": "string",
            "description": "The status of the metadata object.",
            "default": "current",
            "enum": [
              "current",
              "deleted",
              "disabled"
            ]
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "5"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "description": "The email associated with the user's account.",
            "format": "email",
            "pattern": "^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$"
          },
          "first_name": {
            "title": "First Name",
            "description": "The user's first (given) name.",
            "type": "string"
          },
          "last_name": {
            "title": "Last Name",
            "description": "The user's last (family) name.",
            "type": "string"
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "submits_for": {
            "title": "Submits For",
            "description": "Labs user is authorized to submit data for.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Lab",
                    "title": "Lab"
                  }
                ]
              ]
            }
          },
          "groups": {
            "title": "Groups",
            "description": "Additional access control groups",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Group",
              "type": "string",
              "enum": [
                "admin",
                "read-only-admin",
                "verified"
              ]
            }
          },
          "viewing_groups": {
            "title": "View Access Groups",
            "description": "The group that determines which set of data the user has permission to view.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "View Access Group",
              "type": "string",
              "enum": [
                "community",
                "IGVF"
              ]
            }
          },
          "job_title": {
            "title": "Job Title",
            "type": "string",
            "description": "The role of the user in their lab or organization.",
            "enum": [
              "Principal Investigator",
              "Co-Investigator",
              "Project Manager",
              "Submitter",
              "Post Doc",
              "Data Wrangler",
              "Scientist",
              "Computational Scientist",
              "Software Developer",
              "NHGRI staff member",
              "Other"
            ]
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "The full name of the user."
          }
        }
      },
      "Workflow": {
        "title": "Workflow",
        "description": "A workflow for computational analysis of genomic data. A workflow is made up of analysis steps.",
        "type": "object",
        "required": [
          "award",
          "lab",
          "source_url",
          "name"
        ],
        "additionalProperties": false,
        "properties": {
          "release_timestamp": {
            "title": "Release Timestamp",
            "description": "The date the object was released.",
            "type": "string",
            "format": "date-time"
          },
          "publication_identifiers": {
            "title": "Publication Identifiers",
            "description": "The publication identifiers that provide more information about the object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Publication Identifier",
              "description": "A publication identifier that provides more information about the object.",
              "type": "string",
              "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$"
            }
          },
          "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                [
                  {
                    "$ref": "#/components/schemas/Document",
                    "title": "Document"
                  }
                ]
              ]
            }
          },
          "lab": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Lab",
                  "title": "Lab"
                }
              ]
            ]
          },
          "award": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Award",
                  "title": "Award"
                }
              ]
            ]
          },
          "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object prefixed with IGVF.",
            "type": "string",
            "format": "accession"
          },
          "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Alternate Accession",
              "description": "An accession previously assigned to an object that has been merged with this object.",
              "type": "string",
              "format": "accession"
            }
          },
          "collections": {
            "title": "Collections",
            "description": "Some samples are part of particular data collections.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ClinGen",
                "ENCODE",
                "GREGoR",
                "IGVF_catalog_beta_v0.1",
                "IGVF_catalog_beta_v0.2",
                "IGVF_catalog_beta_v0.3",
                "IGVF_catalog_beta_v0.4",
                "MaveDB",
                "MPRAbase",
                "Vista"
              ]
            }
          },
          "status": {
            "title": "Status",
            "type": "string",
            "default": "in progress",
            "description": "The status of the metadata object.",
            "enum": [
              "in progress",
              "released",
              "deleted",
              "replaced",
              "revoked",
              "archived"
            ]
          },
          "revoke_detail": {
            "title": "Revoke Detail",
            "type": "string",
            "description": "Explanation of why an object was transitioned to the revoked status.",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "schema_version": {
            "title": "Schema Version",
            "description": "The version of the JSON schema that the server uses to validate the object.",
            "type": "string",
            "pattern": "^\\d+(\\.\\d+)*$",
            "default": "4"
          },
          "uuid": {
            "title": "UUID",
            "description": "The unique identifier associated with every object.",
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "title": "Notes",
            "description": "DACC internal notes.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "aliases": {
            "title": "Aliases",
            "description": "Lab specific identifiers to reference an object.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Lab Alias",
              "description": "A lab specific identifier to reference an object.",
              "type": "string",
              "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
            }
          },
          "creation_timestamp": {
            "title": "Creation Timestamp",
            "description": "The date the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "submitted_by": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/User",
                  "title": "User"
                }
              ]
            ]
          },
          "submitter_comment": {
            "title": "Submitter Comment",
            "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "description": {
            "title": "Description",
            "description": "A plain text description of the object.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "name": {
            "title": "Name",
            "description": "The preferred viewable name of the workflow.",
            "type": "string",
            "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
          },
          "source_url": {
            "title": "Source URL",
            "description": "An external resource to the code base of the workflow in github.",
            "type": "string",
            "format": "uri",
            "pattern": "^https?://github\\.com/(\\S+)$"
          },
          "workflow_repositories": {
            "title": "Workflow Repositories",
            "description": "Resources hosting the workflow.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Workflow Repository",
              "description": "Resource hosting the workflow.",
              "type": "string",
              "format": "uri"
            }
          },
          "standards_page": {
            "oneOf": [
              {
                "type": "string"
              },
              [
                {
                  "$ref": "#/components/schemas/Page",
                  "title": "Page"
                }
              ]
            ]
          },
          "@id": {
            "title": "ID",
            "type": "string"
          },
          "@type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "A summary of the object."
          },
          "analysis_steps": {
            "title": "Analysis Steps",
            "type": "array",
            "description": "The analysis steps which are part of this workflow.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "title": "Analysis Step"
            }
          }
        }
      }
    }
  }
}