/* tslint:disable */
/* eslint-disable */
/**
 * IGVF Project API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A file set for reference files which are utilized in the analysis of IGVF experiments. For example, genomic references from GENCODE.
 * @export
 * @interface CuratedSet
 */
export interface CuratedSet {
    /**
     * The date the object was released.
     * @type {string}
     * @memberof CuratedSet
     */
    releaseTimestamp?: string;
    /**
     * The species of the organism.
     * @type {string}
     * @memberof CuratedSet
     */
    taxa?: CuratedSetTaxaEnum;
    /**
     * The publications associated with this object.
     * @type {Set<string>}
     * @memberof CuratedSet
     */
    publications?: Set<string>;
    /**
     * The publication identifiers that provide more information about the object.
     * @type {Set<string>}
     * @memberof CuratedSet
     */
    publicationIdentifiers?: Set<string>;
    /**
     * Documents that provide additional information (not data file).
     * @type {Set<string>}
     * @memberof CuratedSet
     */
    documents?: Set<string>;
    /**
     * Lab associated with the submission.
     * @type {string}
     * @memberof CuratedSet
     */
    lab?: string;
    /**
     * Grant associated with the submission.
     * @type {string}
     * @memberof CuratedSet
     */
    award?: string;
    /**
     * A unique identifier to be used to reference the object prefixed with IGVF.
     * @type {string}
     * @memberof CuratedSet
     */
    accession?: string;
    /**
     * Accessions previously assigned to objects that have been merged with this object.
     * @type {Set<string>}
     * @memberof CuratedSet
     */
    alternateAccessions?: Set<string>;
    /**
     * Some samples are part of particular data collections.
     * @type {Set<string>}
     * @memberof CuratedSet
     */
    collections?: Set<CuratedSetCollectionsEnum>;
    /**
     * The status of the metadata object.
     * @type {string}
     * @memberof CuratedSet
     */
    status?: CuratedSetStatusEnum;
    /**
     * Explanation of why an object was transitioned to the revoked status.
     * @type {string}
     * @memberof CuratedSet
     */
    revokeDetail?: string;
    /**
     * An external resource with additional information.
     * @type {string}
     * @memberof CuratedSet
     */
    url?: string;
    /**
     * The version of the JSON schema that the server uses to validate the object.
     * @type {string}
     * @memberof CuratedSet
     */
    schemaVersion?: string;
    /**
     * The unique identifier associated with every object.
     * @type {string}
     * @memberof CuratedSet
     */
    uuid?: string;
    /**
     * DACC internal notes.
     * @type {string}
     * @memberof CuratedSet
     */
    notes?: string;
    /**
     * Lab specific identifiers to reference an object.
     * @type {Set<string>}
     * @memberof CuratedSet
     */
    aliases?: Set<string>;
    /**
     * The date the object was created.
     * @type {string}
     * @memberof CuratedSet
     */
    creationTimestamp?: string;
    /**
     * The user who submitted the object.
     * @type {string}
     * @memberof CuratedSet
     */
    submittedBy?: string;
    /**
     * Additional information specified by the submitter to be displayed as a comment on the portal.
     * @type {string}
     * @memberof CuratedSet
     */
    submitterComment?: string;
    /**
     * A plain text description of the object.
     * @type {string}
     * @memberof CuratedSet
     */
    description?: string;
    /**
     * Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.
     * @type {Set<string>}
     * @memberof CuratedSet
     */
    dbxrefs?: Set<string>;
    /**
     * The sample(s) associated with this file set.
     * @type {Set<string>}
     * @memberof CuratedSet
     */
    samples?: Set<string>;
    /**
     * The donor(s) associated with this file set.
     * @type {Set<string>}
     * @memberof CuratedSet
     */
    donors?: Set<string>;
    /**
     * The category that best describes this curated file set.
     * @type {string}
     * @memberof CuratedSet
     */
    fileSetType?: CuratedSetFileSetTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CuratedSet
     */
    id?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CuratedSet
     */
    type?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof CuratedSet
     */
    summary?: string;
    /**
     * The files associated with this file set.
     * @type {Set<string>}
     * @memberof CuratedSet
     */
    files?: Set<string>;
    /**
     * The file sets for which this file set is a control.
     * @type {Set<string>}
     * @memberof CuratedSet
     */
    controlFor?: Set<string>;
    /**
     * The timestamp the first file object in the file_set or associated auxiliary sets was created.
     * @type {string}
     * @memberof CuratedSet
     */
    submittedFilesTimestamp?: string;
    /**
     * The file sets that use this file set as an input.
     * @type {Set<string>}
     * @memberof CuratedSet
     */
    inputFileSetFor?: Set<string>;
    /**
     * The genome assemblies to which the referencing files in the file set are utilizing (e.g., GRCh38).
     * @type {Set<string>}
     * @memberof CuratedSet
     */
    assemblies?: Set<string>;
    /**
     * The annotation versions of the reference resource.
     * @type {Set<string>}
     * @memberof CuratedSet
     */
    transcriptomeAnnotations?: Set<string>;
}


/**
 * @export
 */
export const CuratedSetTaxaEnum = {
    HomoSapiens: 'Homo sapiens',
    MusMusculus: 'Mus musculus'
} as const;
export type CuratedSetTaxaEnum = typeof CuratedSetTaxaEnum[keyof typeof CuratedSetTaxaEnum];

/**
 * @export
 */
export const CuratedSetCollectionsEnum = {
    ClinGen: 'ClinGen',
    Encode: 'ENCODE',
    GregoR: 'GREGoR',
    IgvfCatalogBetaV01: 'IGVF_catalog_beta_v0.1',
    IgvfCatalogBetaV02: 'IGVF_catalog_beta_v0.2',
    IgvfCatalogBetaV03: 'IGVF_catalog_beta_v0.3',
    IgvfCatalogBetaV04: 'IGVF_catalog_beta_v0.4',
    MaveDb: 'MaveDB',
    MprAbase: 'MPRAbase',
    Vista: 'Vista'
} as const;
export type CuratedSetCollectionsEnum = typeof CuratedSetCollectionsEnum[keyof typeof CuratedSetCollectionsEnum];

/**
 * @export
 */
export const CuratedSetStatusEnum = {
    InProgress: 'in progress',
    Released: 'released',
    Deleted: 'deleted',
    Replaced: 'replaced',
    Revoked: 'revoked',
    Archived: 'archived'
} as const;
export type CuratedSetStatusEnum = typeof CuratedSetStatusEnum[keyof typeof CuratedSetStatusEnum];

/**
 * @export
 */
export const CuratedSetFileSetTypeEnum = {
    Barcodes: 'barcodes',
    EditingTemplates: 'editing templates',
    Elements: 'elements',
    ExternalDataForCatalog: 'external data for catalog',
    Genome: 'genome',
    Genes: 'genes',
    GuideRnas: 'guide RNAs',
    Transcriptome: 'transcriptome',
    Variants: 'variants'
} as const;
export type CuratedSetFileSetTypeEnum = typeof CuratedSetFileSetTypeEnum[keyof typeof CuratedSetFileSetTypeEnum];


/**
 * Check if a given object implements the CuratedSet interface.
 */
export function instanceOfCuratedSet(value: object): value is CuratedSet {
    return true;
}

export function CuratedSetFromJSON(json: any): CuratedSet {
    return CuratedSetFromJSONTyped(json, false);
}

export function CuratedSetFromJSONTyped(json: any, ignoreDiscriminator: boolean): CuratedSet {
    if (json == null) {
        return json;
    }
    return {
        
        'releaseTimestamp': json['release_timestamp'] == null ? undefined : json['release_timestamp'],
        'taxa': json['taxa'] == null ? undefined : json['taxa'],
        'publications': json['publications'] == null ? undefined : json['publications'],
        'publicationIdentifiers': json['publication_identifiers'] == null ? undefined : json['publication_identifiers'],
        'documents': json['documents'] == null ? undefined : json['documents'],
        'lab': json['lab'] == null ? undefined : json['lab'],
        'award': json['award'] == null ? undefined : json['award'],
        'accession': json['accession'] == null ? undefined : json['accession'],
        'alternateAccessions': json['alternate_accessions'] == null ? undefined : json['alternate_accessions'],
        'collections': json['collections'] == null ? undefined : json['collections'],
        'status': json['status'] == null ? undefined : json['status'],
        'revokeDetail': json['revoke_detail'] == null ? undefined : json['revoke_detail'],
        'url': json['url'] == null ? undefined : json['url'],
        'schemaVersion': json['schema_version'] == null ? undefined : json['schema_version'],
        'uuid': json['uuid'] == null ? undefined : json['uuid'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'aliases': json['aliases'] == null ? undefined : json['aliases'],
        'creationTimestamp': json['creation_timestamp'] == null ? undefined : json['creation_timestamp'],
        'submittedBy': json['submitted_by'] == null ? undefined : json['submitted_by'],
        'submitterComment': json['submitter_comment'] == null ? undefined : json['submitter_comment'],
        'description': json['description'] == null ? undefined : json['description'],
        'dbxrefs': json['dbxrefs'] == null ? undefined : json['dbxrefs'],
        'samples': json['samples'] == null ? undefined : json['samples'],
        'donors': json['donors'] == null ? undefined : json['donors'],
        'fileSetType': json['file_set_type'] == null ? undefined : json['file_set_type'],
        'id': json['@id'] == null ? undefined : json['@id'],
        'type': json['@type'] == null ? undefined : json['@type'],
        'summary': json['summary'] == null ? undefined : json['summary'],
        'files': json['files'] == null ? undefined : json['files'],
        'controlFor': json['control_for'] == null ? undefined : json['control_for'],
        'submittedFilesTimestamp': json['submitted_files_timestamp'] == null ? undefined : json['submitted_files_timestamp'],
        'inputFileSetFor': json['input_file_set_for'] == null ? undefined : json['input_file_set_for'],
        'assemblies': json['assemblies'] == null ? undefined : json['assemblies'],
        'transcriptomeAnnotations': json['transcriptome_annotations'] == null ? undefined : json['transcriptome_annotations'],
    };
}

export function CuratedSetToJSON(value?: CuratedSet | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'release_timestamp': value['releaseTimestamp'],
        'taxa': value['taxa'],
        'publications': value['publications'] == null ? undefined : Array.from(value['publications'] as Set<any>),
        'publication_identifiers': value['publicationIdentifiers'] == null ? undefined : Array.from(value['publicationIdentifiers'] as Set<any>),
        'documents': value['documents'] == null ? undefined : Array.from(value['documents'] as Set<any>),
        'lab': value['lab'],
        'award': value['award'],
        'accession': value['accession'],
        'alternate_accessions': value['alternateAccessions'] == null ? undefined : Array.from(value['alternateAccessions'] as Set<any>),
        'collections': value['collections'] == null ? undefined : Array.from(value['collections'] as Set<any>),
        'status': value['status'],
        'revoke_detail': value['revokeDetail'],
        'url': value['url'],
        'schema_version': value['schemaVersion'],
        'uuid': value['uuid'],
        'notes': value['notes'],
        'aliases': value['aliases'] == null ? undefined : Array.from(value['aliases'] as Set<any>),
        'creation_timestamp': value['creationTimestamp'],
        'submitted_by': value['submittedBy'],
        'submitter_comment': value['submitterComment'],
        'description': value['description'],
        'dbxrefs': value['dbxrefs'] == null ? undefined : Array.from(value['dbxrefs'] as Set<any>),
        'samples': value['samples'] == null ? undefined : Array.from(value['samples'] as Set<any>),
        'donors': value['donors'] == null ? undefined : Array.from(value['donors'] as Set<any>),
        'file_set_type': value['fileSetType'],
        '@id': value['id'],
        '@type': value['type'],
        'summary': value['summary'],
        'files': value['files'] == null ? undefined : Array.from(value['files'] as Set<any>),
        'control_for': value['controlFor'] == null ? undefined : Array.from(value['controlFor'] as Set<any>),
        'submitted_files_timestamp': value['submittedFilesTimestamp'],
        'input_file_set_for': value['inputFileSetFor'] == null ? undefined : Array.from(value['inputFileSetFor'] as Set<any>),
        'assemblies': value['assemblies'] == null ? undefined : Array.from(value['assemblies'] as Set<any>),
        'transcriptome_annotations': value['transcriptomeAnnotations'] == null ? undefined : Array.from(value['transcriptomeAnnotations'] as Set<any>),
    };
}

