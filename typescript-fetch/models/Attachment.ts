/* tslint:disable */
/* eslint-disable */
/**
 * IGVF Project API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The attached content.
 * @export
 * @interface Attachment
 */
export interface Attachment {
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    download?: string;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    href?: string;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    type?: AttachmentTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    md5sum?: string;
    /**
     * 
     * @type {number}
     * @memberof Attachment
     */
    size?: number;
    /**
     * 
     * @type {number}
     * @memberof Attachment
     */
    width?: number;
    /**
     * 
     * @type {number}
     * @memberof Attachment
     */
    height?: number;
}


/**
 * @export
 */
export const AttachmentTypeEnum = {
    ApplicationJson: 'application/json',
    ApplicationPdf: 'application/pdf',
    ImageGif: 'image/gif',
    ImageJpeg: 'image/jpeg',
    ImagePng: 'image/png',
    ImageSvs: 'image/svs',
    ImageTiff: 'image/tiff',
    TextAutosql: 'text/autosql',
    TextHtml: 'text/html',
    TextPlain: 'text/plain',
    TextTabSeparatedValues: 'text/tab-separated-values'
} as const;
export type AttachmentTypeEnum = typeof AttachmentTypeEnum[keyof typeof AttachmentTypeEnum];


/**
 * Check if a given object implements the Attachment interface.
 */
export function instanceOfAttachment(value: object): value is Attachment {
    return true;
}

export function AttachmentFromJSON(json: any): Attachment {
    return AttachmentFromJSONTyped(json, false);
}

export function AttachmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Attachment {
    if (json == null) {
        return json;
    }
    return {
        
        'download': json['download'] == null ? undefined : json['download'],
        'href': json['href'] == null ? undefined : json['href'],
        'type': json['type'] == null ? undefined : json['type'],
        'md5sum': json['md5sum'] == null ? undefined : json['md5sum'],
        'size': json['size'] == null ? undefined : json['size'],
        'width': json['width'] == null ? undefined : json['width'],
        'height': json['height'] == null ? undefined : json['height'],
    };
}

export function AttachmentToJSON(value?: Attachment | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'download': value['download'],
        'href': value['href'],
        'type': value['type'],
        'md5sum': value['md5sum'],
        'size': value['size'],
        'width': value['width'],
        'height': value['height'],
    };
}

