/* tslint:disable */
/* eslint-disable */
/**
 * IGVF Project API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Familial relation of this donor.
 * @export
 * @interface RelatedDonor
 */
export interface RelatedDonor {
    /**
     * An identifier for the related donor.
     * @type {string}
     * @memberof RelatedDonor
     */
    donor: string;
    /**
     * A descriptive term for the related donorâ€™s relationship to this donor.
     * @type {string}
     * @memberof RelatedDonor
     */
    relationshipType: RelatedDonorRelationshipTypeEnum;
}


/**
 * @export
 */
export const RelatedDonorRelationshipTypeEnum = {
    Aunt: 'aunt',
    Child: 'child',
    FirstCousinOnceRemoved: 'first cousin once removed',
    FirstCousin: 'first cousin',
    FraternalTwin: 'fraternal twin',
    Grandparent: 'grandparent',
    HalfSibling: 'half-sibling',
    Niece: 'niece',
    Nephew: 'nephew',
    Parent: 'parent',
    PaternalTwin: 'paternal twin',
    Sibling: 'sibling',
    SecondCousin: 'second cousin',
    Uncle: 'uncle'
} as const;
export type RelatedDonorRelationshipTypeEnum = typeof RelatedDonorRelationshipTypeEnum[keyof typeof RelatedDonorRelationshipTypeEnum];


/**
 * Check if a given object implements the RelatedDonor interface.
 */
export function instanceOfRelatedDonor(value: object): value is RelatedDonor {
    if (!('donor' in value) || value['donor'] === undefined) return false;
    if (!('relationshipType' in value) || value['relationshipType'] === undefined) return false;
    return true;
}

export function RelatedDonorFromJSON(json: any): RelatedDonor {
    return RelatedDonorFromJSONTyped(json, false);
}

export function RelatedDonorFromJSONTyped(json: any, ignoreDiscriminator: boolean): RelatedDonor {
    if (json == null) {
        return json;
    }
    return {
        
        'donor': json['donor'],
        'relationshipType': json['relationship_type'],
    };
}

export function RelatedDonorToJSON(value?: RelatedDonor | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'donor': value['donor'],
        'relationship_type': value['relationshipType'],
    };
}

