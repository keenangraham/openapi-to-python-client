/* tslint:disable */
/* eslint-disable */
/**
 * IGVF Project API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Protein-encoding open reading frames (ORF)
 * @export
 * @interface OpenReadingFrame
 */
export interface OpenReadingFrame {
    /**
     * The date the object was released.
     * @type {string}
     * @memberof OpenReadingFrame
     */
    releaseTimestamp?: string;
    /**
     * The status of the metadata object.
     * @type {string}
     * @memberof OpenReadingFrame
     */
    status?: OpenReadingFrameStatusEnum;
    /**
     * The version of the JSON schema that the server uses to validate the object.
     * @type {string}
     * @memberof OpenReadingFrame
     */
    schemaVersion?: string;
    /**
     * The unique identifier associated with every object.
     * @type {string}
     * @memberof OpenReadingFrame
     */
    uuid?: string;
    /**
     * DACC internal notes.
     * @type {string}
     * @memberof OpenReadingFrame
     */
    notes?: string;
    /**
     * Lab specific identifiers to reference an object.
     * @type {Set<string>}
     * @memberof OpenReadingFrame
     */
    aliases?: Set<string>;
    /**
     * The date the object was created.
     * @type {string}
     * @memberof OpenReadingFrame
     */
    creationTimestamp?: string;
    /**
     * The user who submitted the object.
     * @type {string}
     * @memberof OpenReadingFrame
     */
    submittedBy?: string;
    /**
     * Additional information specified by the submitter to be displayed as a comment on the portal.
     * @type {string}
     * @memberof OpenReadingFrame
     */
    submitterComment?: string;
    /**
     * A plain text description of the object.
     * @type {string}
     * @memberof OpenReadingFrame
     */
    description?: string;
    /**
     * Lab associated with the submission.
     * @type {string}
     * @memberof OpenReadingFrame
     */
    lab?: string;
    /**
     * Grant associated with the submission.
     * @type {string}
     * @memberof OpenReadingFrame
     */
    award?: string;
    /**
     * Open reading frame ID.
     * @type {string}
     * @memberof OpenReadingFrame
     */
    orfId?: string;
    /**
     * ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix.
     * @type {Set<string>}
     * @memberof OpenReadingFrame
     */
    gene?: Set<string>;
    /**
     * ENSEMBL ProteinID of official nomenclature approved protein. The ProteinID does not include the current version number suffix.
     * @type {string}
     * @memberof OpenReadingFrame
     */
    proteinId?: string;
    /**
     * Unique identifiers from the hORFeome database
     * @type {Set<string>}
     * @memberof OpenReadingFrame
     */
    dbxrefs?: Set<string>;
    /**
     * The percentage of identical matches to Ensembl protein.
     * @type {number}
     * @memberof OpenReadingFrame
     */
    pctIdenticalProtein?: number;
    /**
     * The percentage of ORF covered by Ensembl protein.
     * @type {number}
     * @memberof OpenReadingFrame
     */
    pctCoverageProtein?: number;
    /**
     * The percentage of Ensembl protein covered by ORF.
     * @type {number}
     * @memberof OpenReadingFrame
     */
    pctCoverageOrf?: number;
    /**
     * 
     * @type {string}
     * @memberof OpenReadingFrame
     */
    id?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof OpenReadingFrame
     */
    type?: Array<string>;
    /**
     * A summary of the object.
     * @type {string}
     * @memberof OpenReadingFrame
     */
    summary?: string;
}


/**
 * @export
 */
export const OpenReadingFrameStatusEnum = {
    Archived: 'archived',
    Deleted: 'deleted',
    InProgress: 'in progress',
    Released: 'released'
} as const;
export type OpenReadingFrameStatusEnum = typeof OpenReadingFrameStatusEnum[keyof typeof OpenReadingFrameStatusEnum];


/**
 * Check if a given object implements the OpenReadingFrame interface.
 */
export function instanceOfOpenReadingFrame(value: object): value is OpenReadingFrame {
    return true;
}

export function OpenReadingFrameFromJSON(json: any): OpenReadingFrame {
    return OpenReadingFrameFromJSONTyped(json, false);
}

export function OpenReadingFrameFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenReadingFrame {
    if (json == null) {
        return json;
    }
    return {
        
        'releaseTimestamp': json['release_timestamp'] == null ? undefined : json['release_timestamp'],
        'status': json['status'] == null ? undefined : json['status'],
        'schemaVersion': json['schema_version'] == null ? undefined : json['schema_version'],
        'uuid': json['uuid'] == null ? undefined : json['uuid'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'aliases': json['aliases'] == null ? undefined : json['aliases'],
        'creationTimestamp': json['creation_timestamp'] == null ? undefined : json['creation_timestamp'],
        'submittedBy': json['submitted_by'] == null ? undefined : json['submitted_by'],
        'submitterComment': json['submitter_comment'] == null ? undefined : json['submitter_comment'],
        'description': json['description'] == null ? undefined : json['description'],
        'lab': json['lab'] == null ? undefined : json['lab'],
        'award': json['award'] == null ? undefined : json['award'],
        'orfId': json['orf_id'] == null ? undefined : json['orf_id'],
        'gene': json['gene'] == null ? undefined : json['gene'],
        'proteinId': json['protein_id'] == null ? undefined : json['protein_id'],
        'dbxrefs': json['dbxrefs'] == null ? undefined : json['dbxrefs'],
        'pctIdenticalProtein': json['pct_identical_protein'] == null ? undefined : json['pct_identical_protein'],
        'pctCoverageProtein': json['pct_coverage_protein'] == null ? undefined : json['pct_coverage_protein'],
        'pctCoverageOrf': json['pct_coverage_orf'] == null ? undefined : json['pct_coverage_orf'],
        'id': json['@id'] == null ? undefined : json['@id'],
        'type': json['@type'] == null ? undefined : json['@type'],
        'summary': json['summary'] == null ? undefined : json['summary'],
    };
}

export function OpenReadingFrameToJSON(value?: OpenReadingFrame | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'release_timestamp': value['releaseTimestamp'],
        'status': value['status'],
        'schema_version': value['schemaVersion'],
        'uuid': value['uuid'],
        'notes': value['notes'],
        'aliases': value['aliases'] == null ? undefined : Array.from(value['aliases'] as Set<any>),
        'creation_timestamp': value['creationTimestamp'],
        'submitted_by': value['submittedBy'],
        'submitter_comment': value['submitterComment'],
        'description': value['description'],
        'lab': value['lab'],
        'award': value['award'],
        'orf_id': value['orfId'],
        'gene': value['gene'] == null ? undefined : Array.from(value['gene'] as Set<any>),
        'protein_id': value['proteinId'],
        'dbxrefs': value['dbxrefs'] == null ? undefined : Array.from(value['dbxrefs'] as Set<any>),
        'pct_identical_protein': value['pctIdenticalProtein'],
        'pct_coverage_protein': value['pctCoverageProtein'],
        'pct_coverage_orf': value['pctCoverageOrf'],
        '@id': value['id'],
        '@type': value['type'],
        'summary': value['summary'],
    };
}

