/* tslint:disable */
/* eslint-disable */
/**
 * IGVF Project API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A binary file containing genome annotations which are indexed and can be visualized on a genome browser.
 * @export
 * @interface GenomeBrowserAnnotationFile
 */
export interface GenomeBrowserAnnotationFile {
    /**
     * Genome assembly applicable for the annotation data.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    assembly?: GenomeBrowserAnnotationFileAssemblyEnum;
    /**
     * The date the object was released.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    releaseTimestamp?: string;
    /**
     * The subtype of bed files.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    fileFormatType?: GenomeBrowserAnnotationFileFileFormatTypeEnum;
    /**
     * The annotation and version of the reference resource.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    transcriptomeAnnotation?: GenomeBrowserAnnotationFileTranscriptomeAnnotationEnum;
    /**
     * Documents that provide additional information (not data file).
     * @type {Set<string>}
     * @memberof GenomeBrowserAnnotationFile
     */
    documents?: Set<string>;
    /**
     * Lab associated with the submission.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    lab?: string;
    /**
     * Grant associated with the submission.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    award?: string;
    /**
     * A unique identifier to be used to reference the object prefixed with IGVF.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    accession?: string;
    /**
     * Accessions previously assigned to objects that have been merged with this object.
     * @type {Set<string>}
     * @memberof GenomeBrowserAnnotationFile
     */
    alternateAccessions?: Set<string>;
    /**
     * Some samples are part of particular data collections.
     * @type {Set<string>}
     * @memberof GenomeBrowserAnnotationFile
     */
    collections?: Set<GenomeBrowserAnnotationFileCollectionsEnum>;
    /**
     * The status of the metadata object.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    status?: GenomeBrowserAnnotationFileStatusEnum;
    /**
     * Explanation of why an object was transitioned to the revoked status.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    revokeDetail?: string;
    /**
     * The version of the JSON schema that the server uses to validate the object.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    schemaVersion?: string;
    /**
     * The unique identifier associated with every object.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    uuid?: string;
    /**
     * DACC internal notes.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    notes?: string;
    /**
     * Lab specific identifiers to reference an object.
     * @type {Set<string>}
     * @memberof GenomeBrowserAnnotationFile
     */
    aliases?: Set<string>;
    /**
     * The date the object was created.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    creationTimestamp?: string;
    /**
     * The user who submitted the object.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    submittedBy?: string;
    /**
     * Additional information specified by the submitter to be displayed as a comment on the portal.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    submitterComment?: string;
    /**
     * A plain text description of the object.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    description?: string;
    /**
     * The analysis step version of the file.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    analysisStepVersion?: string;
    /**
     * The MD5sum of the uncompressed file.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    contentMd5sum?: string;
    /**
     * The type of content in the file.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    contentType?: string;
    /**
     * Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.
     * @type {Set<string>}
     * @memberof GenomeBrowserAnnotationFile
     */
    dbxrefs?: Set<string>;
    /**
     * The files participating as inputs into software to produce this output file.
     * @type {Set<string>}
     * @memberof GenomeBrowserAnnotationFile
     */
    derivedFrom?: Set<string>;
    /**
     * The file format or extension of the file.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    fileFormat?: GenomeBrowserAnnotationFileFileFormatEnum;
    /**
     * Document that further explains the file format.
     * @type {Set<string>}
     * @memberof GenomeBrowserAnnotationFile
     */
    fileFormatSpecifications?: Set<string>;
    /**
     * The file set that this file belongs to.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    fileSet?: string;
    /**
     * File size specified in bytes.
     * @type {number}
     * @memberof GenomeBrowserAnnotationFile
     */
    fileSize?: number;
    /**
     * The md5sum of the file being transferred.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    md5sum?: string;
    /**
     * Original name of the file.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    submittedFileName?: string;
    /**
     * The upload/validation status of the file.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    uploadStatus?: GenomeBrowserAnnotationFileUploadStatusEnum;
    /**
     * Explanation of why the file failed the automated content checks.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    validationErrorDetail?: string;
    /**
     * 
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    id?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof GenomeBrowserAnnotationFile
     */
    type?: Array<string>;
    /**
     * A summary of the genome browser annotation file.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    summary?: string;
    /**
     * Construct library set(s) that this file was used for in insert design.
     * @type {Set<string>}
     * @memberof GenomeBrowserAnnotationFile
     */
    integratedIn?: Set<string>;
    /**
     * The files which are derived from this file.
     * @type {Set<string>}
     * @memberof GenomeBrowserAnnotationFile
     */
    inputFileFor?: Set<string>;
    /**
     * File Set(s) that this file is a gene list for.
     * @type {Set<string>}
     * @memberof GenomeBrowserAnnotationFile
     */
    geneListFor?: Set<string>;
    /**
     * File Set(s) that this file is a loci list for.
     * @type {Set<string>}
     * @memberof GenomeBrowserAnnotationFile
     */
    lociListFor?: Set<string>;
    /**
     * The download path to obtain file.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    href?: string;
    /**
     * The S3 URI of public file object.
     * @type {string}
     * @memberof GenomeBrowserAnnotationFile
     */
    s3Uri?: string;
    /**
     * The upload credentials for S3 to submit the file content.
     * @type {object}
     * @memberof GenomeBrowserAnnotationFile
     */
    uploadCredentials?: object;
}


/**
 * @export
 */
export const GenomeBrowserAnnotationFileAssemblyEnum = {
    Grch38: 'GRCh38',
    Grcm39: 'GRCm39'
} as const;
export type GenomeBrowserAnnotationFileAssemblyEnum = typeof GenomeBrowserAnnotationFileAssemblyEnum[keyof typeof GenomeBrowserAnnotationFileAssemblyEnum];

/**
 * @export
 */
export const GenomeBrowserAnnotationFileFileFormatTypeEnum = {
    Bed12: 'bed12',
    Bed3: 'bed3',
    Bed32: 'bed3+',
    Bed5: 'bed5',
    Bed6: 'bed6',
    Bed62: 'bed6+',
    Bed9: 'bed9',
    Bed92: 'bed9+',
    MpraStarr: 'mpra_starr'
} as const;
export type GenomeBrowserAnnotationFileFileFormatTypeEnum = typeof GenomeBrowserAnnotationFileFileFormatTypeEnum[keyof typeof GenomeBrowserAnnotationFileFileFormatTypeEnum];

/**
 * @export
 */
export const GenomeBrowserAnnotationFileTranscriptomeAnnotationEnum = {
    _40: 'GENCODE 40',
    _41: 'GENCODE 41',
    _42: 'GENCODE 42',
    _43: 'GENCODE 43',
    _44: 'GENCODE 44',
    _45: 'GENCODE 45',
    M30: 'GENCODE M30',
    M31: 'GENCODE M31',
    M32: 'GENCODE M32',
    M33: 'GENCODE M33',
    M34: 'GENCODE M34'
} as const;
export type GenomeBrowserAnnotationFileTranscriptomeAnnotationEnum = typeof GenomeBrowserAnnotationFileTranscriptomeAnnotationEnum[keyof typeof GenomeBrowserAnnotationFileTranscriptomeAnnotationEnum];

/**
 * @export
 */
export const GenomeBrowserAnnotationFileCollectionsEnum = {
    ClinGen: 'ClinGen',
    Encode: 'ENCODE',
    GregoR: 'GREGoR',
    IgvfCatalogBetaV01: 'IGVF_catalog_beta_v0.1',
    IgvfCatalogBetaV02: 'IGVF_catalog_beta_v0.2',
    IgvfCatalogBetaV03: 'IGVF_catalog_beta_v0.3',
    IgvfCatalogBetaV04: 'IGVF_catalog_beta_v0.4',
    MaveDb: 'MaveDB',
    MprAbase: 'MPRAbase',
    Vista: 'Vista'
} as const;
export type GenomeBrowserAnnotationFileCollectionsEnum = typeof GenomeBrowserAnnotationFileCollectionsEnum[keyof typeof GenomeBrowserAnnotationFileCollectionsEnum];

/**
 * @export
 */
export const GenomeBrowserAnnotationFileStatusEnum = {
    InProgress: 'in progress',
    Released: 'released',
    Deleted: 'deleted',
    Replaced: 'replaced',
    Revoked: 'revoked',
    Archived: 'archived'
} as const;
export type GenomeBrowserAnnotationFileStatusEnum = typeof GenomeBrowserAnnotationFileStatusEnum[keyof typeof GenomeBrowserAnnotationFileStatusEnum];

/**
 * @export
 */
export const GenomeBrowserAnnotationFileFileFormatEnum = {
    BigBed: 'bigBed',
    Tabix: 'tabix'
} as const;
export type GenomeBrowserAnnotationFileFileFormatEnum = typeof GenomeBrowserAnnotationFileFileFormatEnum[keyof typeof GenomeBrowserAnnotationFileFileFormatEnum];

/**
 * @export
 */
export const GenomeBrowserAnnotationFileUploadStatusEnum = {
    Pending: 'pending',
    FileNotFound: 'file not found',
    Invalidated: 'invalidated',
    Validated: 'validated'
} as const;
export type GenomeBrowserAnnotationFileUploadStatusEnum = typeof GenomeBrowserAnnotationFileUploadStatusEnum[keyof typeof GenomeBrowserAnnotationFileUploadStatusEnum];


/**
 * Check if a given object implements the GenomeBrowserAnnotationFile interface.
 */
export function instanceOfGenomeBrowserAnnotationFile(value: object): value is GenomeBrowserAnnotationFile {
    return true;
}

export function GenomeBrowserAnnotationFileFromJSON(json: any): GenomeBrowserAnnotationFile {
    return GenomeBrowserAnnotationFileFromJSONTyped(json, false);
}

export function GenomeBrowserAnnotationFileFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenomeBrowserAnnotationFile {
    if (json == null) {
        return json;
    }
    return {
        
        'assembly': json['assembly'] == null ? undefined : json['assembly'],
        'releaseTimestamp': json['release_timestamp'] == null ? undefined : json['release_timestamp'],
        'fileFormatType': json['file_format_type'] == null ? undefined : json['file_format_type'],
        'transcriptomeAnnotation': json['transcriptome_annotation'] == null ? undefined : json['transcriptome_annotation'],
        'documents': json['documents'] == null ? undefined : json['documents'],
        'lab': json['lab'] == null ? undefined : json['lab'],
        'award': json['award'] == null ? undefined : json['award'],
        'accession': json['accession'] == null ? undefined : json['accession'],
        'alternateAccessions': json['alternate_accessions'] == null ? undefined : json['alternate_accessions'],
        'collections': json['collections'] == null ? undefined : json['collections'],
        'status': json['status'] == null ? undefined : json['status'],
        'revokeDetail': json['revoke_detail'] == null ? undefined : json['revoke_detail'],
        'schemaVersion': json['schema_version'] == null ? undefined : json['schema_version'],
        'uuid': json['uuid'] == null ? undefined : json['uuid'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'aliases': json['aliases'] == null ? undefined : json['aliases'],
        'creationTimestamp': json['creation_timestamp'] == null ? undefined : json['creation_timestamp'],
        'submittedBy': json['submitted_by'] == null ? undefined : json['submitted_by'],
        'submitterComment': json['submitter_comment'] == null ? undefined : json['submitter_comment'],
        'description': json['description'] == null ? undefined : json['description'],
        'analysisStepVersion': json['analysis_step_version'] == null ? undefined : json['analysis_step_version'],
        'contentMd5sum': json['content_md5sum'] == null ? undefined : json['content_md5sum'],
        'contentType': json['content_type'] == null ? undefined : json['content_type'],
        'dbxrefs': json['dbxrefs'] == null ? undefined : json['dbxrefs'],
        'derivedFrom': json['derived_from'] == null ? undefined : json['derived_from'],
        'fileFormat': json['file_format'] == null ? undefined : json['file_format'],
        'fileFormatSpecifications': json['file_format_specifications'] == null ? undefined : json['file_format_specifications'],
        'fileSet': json['file_set'] == null ? undefined : json['file_set'],
        'fileSize': json['file_size'] == null ? undefined : json['file_size'],
        'md5sum': json['md5sum'] == null ? undefined : json['md5sum'],
        'submittedFileName': json['submitted_file_name'] == null ? undefined : json['submitted_file_name'],
        'uploadStatus': json['upload_status'] == null ? undefined : json['upload_status'],
        'validationErrorDetail': json['validation_error_detail'] == null ? undefined : json['validation_error_detail'],
        'id': json['@id'] == null ? undefined : json['@id'],
        'type': json['@type'] == null ? undefined : json['@type'],
        'summary': json['summary'] == null ? undefined : json['summary'],
        'integratedIn': json['integrated_in'] == null ? undefined : json['integrated_in'],
        'inputFileFor': json['input_file_for'] == null ? undefined : json['input_file_for'],
        'geneListFor': json['gene_list_for'] == null ? undefined : json['gene_list_for'],
        'lociListFor': json['loci_list_for'] == null ? undefined : json['loci_list_for'],
        'href': json['href'] == null ? undefined : json['href'],
        's3Uri': json['s3_uri'] == null ? undefined : json['s3_uri'],
        'uploadCredentials': json['upload_credentials'] == null ? undefined : json['upload_credentials'],
    };
}

export function GenomeBrowserAnnotationFileToJSON(value?: GenomeBrowserAnnotationFile | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'assembly': value['assembly'],
        'release_timestamp': value['releaseTimestamp'],
        'file_format_type': value['fileFormatType'],
        'transcriptome_annotation': value['transcriptomeAnnotation'],
        'documents': value['documents'] == null ? undefined : Array.from(value['documents'] as Set<any>),
        'lab': value['lab'],
        'award': value['award'],
        'accession': value['accession'],
        'alternate_accessions': value['alternateAccessions'] == null ? undefined : Array.from(value['alternateAccessions'] as Set<any>),
        'collections': value['collections'] == null ? undefined : Array.from(value['collections'] as Set<any>),
        'status': value['status'],
        'revoke_detail': value['revokeDetail'],
        'schema_version': value['schemaVersion'],
        'uuid': value['uuid'],
        'notes': value['notes'],
        'aliases': value['aliases'] == null ? undefined : Array.from(value['aliases'] as Set<any>),
        'creation_timestamp': value['creationTimestamp'],
        'submitted_by': value['submittedBy'],
        'submitter_comment': value['submitterComment'],
        'description': value['description'],
        'analysis_step_version': value['analysisStepVersion'],
        'content_md5sum': value['contentMd5sum'],
        'content_type': value['contentType'],
        'dbxrefs': value['dbxrefs'] == null ? undefined : Array.from(value['dbxrefs'] as Set<any>),
        'derived_from': value['derivedFrom'] == null ? undefined : Array.from(value['derivedFrom'] as Set<any>),
        'file_format': value['fileFormat'],
        'file_format_specifications': value['fileFormatSpecifications'] == null ? undefined : Array.from(value['fileFormatSpecifications'] as Set<any>),
        'file_set': value['fileSet'],
        'file_size': value['fileSize'],
        'md5sum': value['md5sum'],
        'submitted_file_name': value['submittedFileName'],
        'upload_status': value['uploadStatus'],
        'validation_error_detail': value['validationErrorDetail'],
        '@id': value['id'],
        '@type': value['type'],
        'summary': value['summary'],
        'integrated_in': value['integratedIn'] == null ? undefined : Array.from(value['integratedIn'] as Set<any>),
        'input_file_for': value['inputFileFor'] == null ? undefined : Array.from(value['inputFileFor'] as Set<any>),
        'gene_list_for': value['geneListFor'] == null ? undefined : Array.from(value['geneListFor'] as Set<any>),
        'loci_list_for': value['lociListFor'] == null ? undefined : Array.from(value['lociListFor'] as Set<any>),
        'href': value['href'],
        's3_uri': value['s3Uri'],
        'upload_credentials': value['uploadCredentials'],
    };
}

