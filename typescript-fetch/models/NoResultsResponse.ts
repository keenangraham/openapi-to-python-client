/* tslint:disable */
/* eslint-disable */
/**
 * IGVF Project API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NoResultsResponseFacetGroupsInner } from './NoResultsResponseFacetGroupsInner';
import {
    NoResultsResponseFacetGroupsInnerFromJSON,
    NoResultsResponseFacetGroupsInnerFromJSONTyped,
    NoResultsResponseFacetGroupsInnerToJSON,
} from './NoResultsResponseFacetGroupsInner';
import type { NoResultsResponseFiltersInner } from './NoResultsResponseFiltersInner';
import {
    NoResultsResponseFiltersInnerFromJSON,
    NoResultsResponseFiltersInnerFromJSONTyped,
    NoResultsResponseFiltersInnerToJSON,
} from './NoResultsResponseFiltersInner';
import type { NoResultsResponseFacetsInner } from './NoResultsResponseFacetsInner';
import {
    NoResultsResponseFacetsInnerFromJSON,
    NoResultsResponseFacetsInnerFromJSONTyped,
    NoResultsResponseFacetsInnerToJSON,
} from './NoResultsResponseFacetsInner';
import type { NoResultsResponseSortValue } from './NoResultsResponseSortValue';
import {
    NoResultsResponseSortValueFromJSON,
    NoResultsResponseSortValueFromJSONTyped,
    NoResultsResponseSortValueToJSON,
} from './NoResultsResponseSortValue';
import type { NoResultsResponseColumnsValue } from './NoResultsResponseColumnsValue';
import {
    NoResultsResponseColumnsValueFromJSON,
    NoResultsResponseColumnsValueFromJSONTyped,
    NoResultsResponseColumnsValueToJSON,
} from './NoResultsResponseColumnsValue';

/**
 * 
 * @export
 * @interface NoResultsResponse
 */
export interface NoResultsResponse {
    /**
     * 
     * @type {string}
     * @memberof NoResultsResponse
     */
    context?: string;
    /**
     * 
     * @type {Array<any>}
     * @memberof NoResultsResponse
     */
    graph?: Array<any>;
    /**
     * 
     * @type {string}
     * @memberof NoResultsResponse
     */
    id?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof NoResultsResponse
     */
    type?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof NoResultsResponse
     */
    clearFilters?: string;
    /**
     * 
     * @type {object}
     * @memberof NoResultsResponse
     */
    columns?: object;
    /**
     * 
     * @type {Array<NoResultsResponseFacetGroupsInner>}
     * @memberof NoResultsResponse
     */
    facetGroups?: Array<NoResultsResponseFacetGroupsInner>;
    /**
     * 
     * @type {Array<NoResultsResponseFacetsInner>}
     * @memberof NoResultsResponse
     */
    facets?: Array<NoResultsResponseFacetsInner>;
    /**
     * 
     * @type {Array<NoResultsResponseFiltersInner>}
     * @memberof NoResultsResponse
     */
    filters?: Array<NoResultsResponseFiltersInner>;
    /**
     * 
     * @type {string}
     * @memberof NoResultsResponse
     */
    notification?: string;
    /**
     * 
     * @type {object}
     * @memberof NoResultsResponse
     */
    sort?: object;
    /**
     * 
     * @type {string}
     * @memberof NoResultsResponse
     */
    title?: string;
    /**
     * 
     * @type {number}
     * @memberof NoResultsResponse
     */
    total?: number;
}

/**
 * Check if a given object implements the NoResultsResponse interface.
 */
export function instanceOfNoResultsResponse(value: object): value is NoResultsResponse {
    return true;
}

export function NoResultsResponseFromJSON(json: any): NoResultsResponse {
    return NoResultsResponseFromJSONTyped(json, false);
}

export function NoResultsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): NoResultsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'context': json['@context'] == null ? undefined : json['@context'],
        'graph': json['@graph'] == null ? undefined : json['@graph'],
        'id': json['@id'] == null ? undefined : json['@id'],
        'type': json['@type'] == null ? undefined : json['@type'],
        'clearFilters': json['clear_filters'] == null ? undefined : json['clear_filters'],
        'columns': json['columns'] == null ? undefined : json['columns'],
        'facetGroups': json['facet_groups'] == null ? undefined : ((json['facet_groups'] as Array<any>).map(NoResultsResponseFacetGroupsInnerFromJSON)),
        'facets': json['facets'] == null ? undefined : ((json['facets'] as Array<any>).map(NoResultsResponseFacetsInnerFromJSON)),
        'filters': json['filters'] == null ? undefined : ((json['filters'] as Array<any>).map(NoResultsResponseFiltersInnerFromJSON)),
        'notification': json['notification'] == null ? undefined : json['notification'],
        'sort': json['sort'] == null ? undefined : json['sort'],
        'title': json['title'] == null ? undefined : json['title'],
        'total': json['total'] == null ? undefined : json['total'],
    };
}

export function NoResultsResponseToJSON(value?: NoResultsResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        '@context': value['context'],
        '@graph': value['graph'],
        '@id': value['id'],
        '@type': value['type'],
        'clear_filters': value['clearFilters'],
        'columns': value['columns'],
        'facet_groups': value['facetGroups'] == null ? undefined : ((value['facetGroups'] as Array<any>).map(NoResultsResponseFacetGroupsInnerToJSON)),
        'facets': value['facets'] == null ? undefined : ((value['facets'] as Array<any>).map(NoResultsResponseFacetsInnerToJSON)),
        'filters': value['filters'] == null ? undefined : ((value['filters'] as Array<any>).map(NoResultsResponseFiltersInnerToJSON)),
        'notification': value['notification'],
        'sort': value['sort'],
        'title': value['title'],
        'total': value['total'],
    };
}

