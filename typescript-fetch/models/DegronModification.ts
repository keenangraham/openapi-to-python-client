/* tslint:disable */
/* eslint-disable */
/**
 * IGVF Project API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A degron modification that can induce degradation of a protein.
 * @export
 * @interface DegronModification
 */
export interface DegronModification {
    /**
     * The date the object was released.
     * @type {string}
     * @memberof DegronModification
     */
    releaseTimestamp?: string;
    /**
     * The originating lab(s) or vendor(s).
     * @type {Set<string>}
     * @memberof DegronModification
     */
    sources?: Set<string>;
    /**
     * The lot identifier provided by the originating lab or vendor.
     * @type {string}
     * @memberof DegronModification
     */
    lotId?: string;
    /**
     * The product or catalog identifier provided following deposition to addgene.org.
     * @type {string}
     * @memberof DegronModification
     */
    productId?: string;
    /**
     * Documents that provide additional information (not data file).
     * @type {Set<string>}
     * @memberof DegronModification
     */
    documents?: Set<string>;
    /**
     * The status of the metadata object.
     * @type {string}
     * @memberof DegronModification
     */
    status?: DegronModificationStatusEnum;
    /**
     * Lab associated with the submission.
     * @type {string}
     * @memberof DegronModification
     */
    lab?: string;
    /**
     * Grant associated with the submission.
     * @type {string}
     * @memberof DegronModification
     */
    award?: string;
    /**
     * The version of the JSON schema that the server uses to validate the object.
     * @type {string}
     * @memberof DegronModification
     */
    schemaVersion?: string;
    /**
     * The unique identifier associated with every object.
     * @type {string}
     * @memberof DegronModification
     */
    uuid?: string;
    /**
     * DACC internal notes.
     * @type {string}
     * @memberof DegronModification
     */
    notes?: string;
    /**
     * Lab specific identifiers to reference an object.
     * @type {Set<string>}
     * @memberof DegronModification
     */
    aliases?: Set<string>;
    /**
     * The date the object was created.
     * @type {string}
     * @memberof DegronModification
     */
    creationTimestamp?: string;
    /**
     * The user who submitted the object.
     * @type {string}
     * @memberof DegronModification
     */
    submittedBy?: string;
    /**
     * Additional information specified by the submitter to be displayed as a comment on the portal.
     * @type {string}
     * @memberof DegronModification
     */
    submitterComment?: string;
    /**
     * A plain text description of the object.
     * @type {string}
     * @memberof DegronModification
     */
    description?: string;
    /**
     * A boolean indicating whether the modification has been activated by a chemical agent.
     * @type {boolean}
     * @memberof DegronModification
     */
    activated?: boolean;
    /**
     * The CHEBI identifier for the activating agent of the modification.
     * @type {string}
     * @memberof DegronModification
     */
    activatingAgentTermId?: string;
    /**
     * The CHEBI name for the activating agent of the modification.
     * @type {string}
     * @memberof DegronModification
     */
    activatingAgentTermName?: string;
    /**
     * The purpose or intended effect of a modification.
     * @type {string}
     * @memberof DegronModification
     */
    modality?: DegronModificationModalityEnum;
    /**
     * The type of degron system implemented.
     * @type {string}
     * @memberof DegronModification
     */
    degronSystem?: DegronModificationDegronSystemEnum;
    /**
     * The tagged proteins which are targeted for degradation.
     * @type {Set<string>}
     * @memberof DegronModification
     */
    taggedProteins?: Set<string>;
    /**
     * 
     * @type {string}
     * @memberof DegronModification
     */
    id?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof DegronModification
     */
    type?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof DegronModification
     */
    summary?: string;
    /**
     * The biosamples which have been modified with this modification.
     * @type {Set<string>}
     * @memberof DegronModification
     */
    biosamplesModified?: Set<string>;
}


/**
 * @export
 */
export const DegronModificationStatusEnum = {
    Archived: 'archived',
    Deleted: 'deleted',
    InProgress: 'in progress',
    Released: 'released'
} as const;
export type DegronModificationStatusEnum = typeof DegronModificationStatusEnum[keyof typeof DegronModificationStatusEnum];

/**
 * @export
 */
export const DegronModificationModalityEnum = {
    Degradation: 'degradation'
} as const;
export type DegronModificationModalityEnum = typeof DegronModificationModalityEnum[keyof typeof DegronModificationModalityEnum];

/**
 * @export
 */
export const DegronModificationDegronSystemEnum = {
    Aid: 'AID',
    AlissAid: 'AlissAid',
    SsAid: 'ssAID'
} as const;
export type DegronModificationDegronSystemEnum = typeof DegronModificationDegronSystemEnum[keyof typeof DegronModificationDegronSystemEnum];


/**
 * Check if a given object implements the DegronModification interface.
 */
export function instanceOfDegronModification(value: object): value is DegronModification {
    return true;
}

export function DegronModificationFromJSON(json: any): DegronModification {
    return DegronModificationFromJSONTyped(json, false);
}

export function DegronModificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): DegronModification {
    if (json == null) {
        return json;
    }
    return {
        
        'releaseTimestamp': json['release_timestamp'] == null ? undefined : json['release_timestamp'],
        'sources': json['sources'] == null ? undefined : json['sources'],
        'lotId': json['lot_id'] == null ? undefined : json['lot_id'],
        'productId': json['product_id'] == null ? undefined : json['product_id'],
        'documents': json['documents'] == null ? undefined : json['documents'],
        'status': json['status'] == null ? undefined : json['status'],
        'lab': json['lab'] == null ? undefined : json['lab'],
        'award': json['award'] == null ? undefined : json['award'],
        'schemaVersion': json['schema_version'] == null ? undefined : json['schema_version'],
        'uuid': json['uuid'] == null ? undefined : json['uuid'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'aliases': json['aliases'] == null ? undefined : json['aliases'],
        'creationTimestamp': json['creation_timestamp'] == null ? undefined : json['creation_timestamp'],
        'submittedBy': json['submitted_by'] == null ? undefined : json['submitted_by'],
        'submitterComment': json['submitter_comment'] == null ? undefined : json['submitter_comment'],
        'description': json['description'] == null ? undefined : json['description'],
        'activated': json['activated'] == null ? undefined : json['activated'],
        'activatingAgentTermId': json['activating_agent_term_id'] == null ? undefined : json['activating_agent_term_id'],
        'activatingAgentTermName': json['activating_agent_term_name'] == null ? undefined : json['activating_agent_term_name'],
        'modality': json['modality'] == null ? undefined : json['modality'],
        'degronSystem': json['degron_system'] == null ? undefined : json['degron_system'],
        'taggedProteins': json['tagged_proteins'] == null ? undefined : json['tagged_proteins'],
        'id': json['@id'] == null ? undefined : json['@id'],
        'type': json['@type'] == null ? undefined : json['@type'],
        'summary': json['summary'] == null ? undefined : json['summary'],
        'biosamplesModified': json['biosamples_modified'] == null ? undefined : json['biosamples_modified'],
    };
}

export function DegronModificationToJSON(value?: DegronModification | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'release_timestamp': value['releaseTimestamp'],
        'sources': value['sources'] == null ? undefined : Array.from(value['sources'] as Set<any>),
        'lot_id': value['lotId'],
        'product_id': value['productId'],
        'documents': value['documents'] == null ? undefined : Array.from(value['documents'] as Set<any>),
        'status': value['status'],
        'lab': value['lab'],
        'award': value['award'],
        'schema_version': value['schemaVersion'],
        'uuid': value['uuid'],
        'notes': value['notes'],
        'aliases': value['aliases'] == null ? undefined : Array.from(value['aliases'] as Set<any>),
        'creation_timestamp': value['creationTimestamp'],
        'submitted_by': value['submittedBy'],
        'submitter_comment': value['submitterComment'],
        'description': value['description'],
        'activated': value['activated'],
        'activating_agent_term_id': value['activatingAgentTermId'],
        'activating_agent_term_name': value['activatingAgentTermName'],
        'modality': value['modality'],
        'degron_system': value['degronSystem'],
        'tagged_proteins': value['taggedProteins'] == null ? undefined : Array.from(value['taggedProteins'] as Set<any>),
        '@id': value['id'],
        '@type': value['type'],
        'summary': value['summary'],
        'biosamples_modified': value['biosamplesModified'] == null ? undefined : Array.from(value['biosamplesModified'] as Set<any>),
    };
}

