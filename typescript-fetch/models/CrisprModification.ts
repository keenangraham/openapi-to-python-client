/* tslint:disable */
/* eslint-disable */
/**
 * IGVF Project API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A CRISPR modification altering sample genomic material. For example, CRISPRi dCas9-KRAB modification.
 * @export
 * @interface CrisprModification
 */
export interface CrisprModification {
    /**
     * The date the object was released.
     * @type {string}
     * @memberof CrisprModification
     */
    releaseTimestamp?: string;
    /**
     * The originating lab(s) or vendor(s).
     * @type {Set<string>}
     * @memberof CrisprModification
     */
    sources?: Set<string>;
    /**
     * The lot identifier provided by the originating lab or vendor.
     * @type {string}
     * @memberof CrisprModification
     */
    lotId?: string;
    /**
     * The product or catalog identifier provided following deposition to addgene.org.
     * @type {string}
     * @memberof CrisprModification
     */
    productId?: string;
    /**
     * Documents that provide additional information (not data file).
     * @type {Set<string>}
     * @memberof CrisprModification
     */
    documents?: Set<string>;
    /**
     * The status of the metadata object.
     * @type {string}
     * @memberof CrisprModification
     */
    status?: CrisprModificationStatusEnum;
    /**
     * Lab associated with the submission.
     * @type {string}
     * @memberof CrisprModification
     */
    lab?: string;
    /**
     * Grant associated with the submission.
     * @type {string}
     * @memberof CrisprModification
     */
    award?: string;
    /**
     * The version of the JSON schema that the server uses to validate the object.
     * @type {string}
     * @memberof CrisprModification
     */
    schemaVersion?: string;
    /**
     * The unique identifier associated with every object.
     * @type {string}
     * @memberof CrisprModification
     */
    uuid?: string;
    /**
     * DACC internal notes.
     * @type {string}
     * @memberof CrisprModification
     */
    notes?: string;
    /**
     * Lab specific identifiers to reference an object.
     * @type {Set<string>}
     * @memberof CrisprModification
     */
    aliases?: Set<string>;
    /**
     * The date the object was created.
     * @type {string}
     * @memberof CrisprModification
     */
    creationTimestamp?: string;
    /**
     * The user who submitted the object.
     * @type {string}
     * @memberof CrisprModification
     */
    submittedBy?: string;
    /**
     * Additional information specified by the submitter to be displayed as a comment on the portal.
     * @type {string}
     * @memberof CrisprModification
     */
    submitterComment?: string;
    /**
     * A plain text description of the object.
     * @type {string}
     * @memberof CrisprModification
     */
    description?: string;
    /**
     * A boolean indicating whether the modification has been activated by a chemical agent.
     * @type {boolean}
     * @memberof CrisprModification
     */
    activated?: boolean;
    /**
     * The CHEBI identifier for the activating agent of the modification.
     * @type {string}
     * @memberof CrisprModification
     */
    activatingAgentTermId?: string;
    /**
     * The CHEBI name for the activating agent of the modification.
     * @type {string}
     * @memberof CrisprModification
     */
    activatingAgentTermName?: string;
    /**
     * The purpose or intended effect of a modification.
     * @type {string}
     * @memberof CrisprModification
     */
    modality?: CrisprModificationModalityEnum;
    /**
     * The name of the CRISPR associated protein used in the modification.
     * @type {string}
     * @memberof CrisprModification
     */
    cas?: CrisprModificationCasEnum;
    /**
     * The name of the molecule fused to a Cas protein.
     * @type {string}
     * @memberof CrisprModification
     */
    fusedDomain?: CrisprModificationFusedDomainEnum;
    /**
     * The tagged protein in modifications in which the Cas nuclease is fused to an antibody.
     * @type {string}
     * @memberof CrisprModification
     */
    taggedProtein?: string;
    /**
     * The originating species of the Cas nuclease.
     * @type {string}
     * @memberof CrisprModification
     */
    casSpecies?: CrisprModificationCasSpeciesEnum;
    /**
     * 
     * @type {string}
     * @memberof CrisprModification
     */
    id?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CrisprModification
     */
    type?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof CrisprModification
     */
    summary?: string;
    /**
     * The biosamples which have been modified with this modification.
     * @type {Set<string>}
     * @memberof CrisprModification
     */
    biosamplesModified?: Set<string>;
}


/**
 * @export
 */
export const CrisprModificationStatusEnum = {
    Archived: 'archived',
    Deleted: 'deleted',
    InProgress: 'in progress',
    Released: 'released'
} as const;
export type CrisprModificationStatusEnum = typeof CrisprModificationStatusEnum[keyof typeof CrisprModificationStatusEnum];

/**
 * @export
 */
export const CrisprModificationModalityEnum = {
    Activation: 'activation',
    BaseEditing: 'base editing',
    Cutting: 'cutting',
    Interference: 'interference',
    Knockout: 'knockout',
    Localizing: 'localizing',
    PrimeEditing: 'prime editing'
} as const;
export type CrisprModificationModalityEnum = typeof CrisprModificationModalityEnum[keyof typeof CrisprModificationModalityEnum];

/**
 * @export
 */
export const CrisprModificationCasEnum = {
    Cas9: 'Cas9',
    Cas12a: 'Cas12a',
    Cas13: 'Cas13',
    DCas9: 'dCas9',
    NCas9: 'nCas9',
    SpG: 'SpG',
    SpRy: 'SpRY'
} as const;
export type CrisprModificationCasEnum = typeof CrisprModificationCasEnum[keyof typeof CrisprModificationCasEnum];

/**
 * @export
 */
export const CrisprModificationFusedDomainEnum = {
    _2xVp64: '2xVP64',
    _3xVp64: '3xVP64',
    Abe8e: 'ABE8e',
    Abe820: 'ABE8.20',
    AntiFlag: 'ANTI-FLAG',
    Be4: 'BE4',
    Be4max: 'BE4max',
    EA3A: 'eA3A',
    EA3AT31A: 'eA3A-T31A',
    EA3AT44DS45A: 'eA3A-T44D-S45A',
    Kox1Krab: 'KOX1-KRAB',
    MMlvRtPe2: 'M-MLV RT (PE2)',
    P300: 'p300',
    TdCbe: 'TdCBE',
    TdCgbe: 'TdCGBE',
    TdDe: 'TdDE',
    Vph: 'VPH',
    Vp64: 'VP64',
    Vp64P65RtaVpr: 'VP64-p65-Rta (VPR)',
    Zim3Krab: 'ZIM3-KRAB'
} as const;
export type CrisprModificationFusedDomainEnum = typeof CrisprModificationFusedDomainEnum[keyof typeof CrisprModificationFusedDomainEnum];

/**
 * @export
 */
export const CrisprModificationCasSpeciesEnum = {
    StreptococcusPyogenesSp: 'Streptococcus pyogenes (Sp)',
    StaphylococcusAureusSa: 'Staphylococcus aureus (Sa)',
    CampylobacterJejuniCj: 'Campylobacter jejuni (Cj)',
    NeisseriaMeningitidisNm: 'Neisseria meningitidis (Nm)'
} as const;
export type CrisprModificationCasSpeciesEnum = typeof CrisprModificationCasSpeciesEnum[keyof typeof CrisprModificationCasSpeciesEnum];


/**
 * Check if a given object implements the CrisprModification interface.
 */
export function instanceOfCrisprModification(value: object): value is CrisprModification {
    return true;
}

export function CrisprModificationFromJSON(json: any): CrisprModification {
    return CrisprModificationFromJSONTyped(json, false);
}

export function CrisprModificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): CrisprModification {
    if (json == null) {
        return json;
    }
    return {
        
        'releaseTimestamp': json['release_timestamp'] == null ? undefined : json['release_timestamp'],
        'sources': json['sources'] == null ? undefined : json['sources'],
        'lotId': json['lot_id'] == null ? undefined : json['lot_id'],
        'productId': json['product_id'] == null ? undefined : json['product_id'],
        'documents': json['documents'] == null ? undefined : json['documents'],
        'status': json['status'] == null ? undefined : json['status'],
        'lab': json['lab'] == null ? undefined : json['lab'],
        'award': json['award'] == null ? undefined : json['award'],
        'schemaVersion': json['schema_version'] == null ? undefined : json['schema_version'],
        'uuid': json['uuid'] == null ? undefined : json['uuid'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'aliases': json['aliases'] == null ? undefined : json['aliases'],
        'creationTimestamp': json['creation_timestamp'] == null ? undefined : json['creation_timestamp'],
        'submittedBy': json['submitted_by'] == null ? undefined : json['submitted_by'],
        'submitterComment': json['submitter_comment'] == null ? undefined : json['submitter_comment'],
        'description': json['description'] == null ? undefined : json['description'],
        'activated': json['activated'] == null ? undefined : json['activated'],
        'activatingAgentTermId': json['activating_agent_term_id'] == null ? undefined : json['activating_agent_term_id'],
        'activatingAgentTermName': json['activating_agent_term_name'] == null ? undefined : json['activating_agent_term_name'],
        'modality': json['modality'] == null ? undefined : json['modality'],
        'cas': json['cas'] == null ? undefined : json['cas'],
        'fusedDomain': json['fused_domain'] == null ? undefined : json['fused_domain'],
        'taggedProtein': json['tagged_protein'] == null ? undefined : json['tagged_protein'],
        'casSpecies': json['cas_species'] == null ? undefined : json['cas_species'],
        'id': json['@id'] == null ? undefined : json['@id'],
        'type': json['@type'] == null ? undefined : json['@type'],
        'summary': json['summary'] == null ? undefined : json['summary'],
        'biosamplesModified': json['biosamples_modified'] == null ? undefined : json['biosamples_modified'],
    };
}

export function CrisprModificationToJSON(value?: CrisprModification | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'release_timestamp': value['releaseTimestamp'],
        'sources': value['sources'] == null ? undefined : Array.from(value['sources'] as Set<any>),
        'lot_id': value['lotId'],
        'product_id': value['productId'],
        'documents': value['documents'] == null ? undefined : Array.from(value['documents'] as Set<any>),
        'status': value['status'],
        'lab': value['lab'],
        'award': value['award'],
        'schema_version': value['schemaVersion'],
        'uuid': value['uuid'],
        'notes': value['notes'],
        'aliases': value['aliases'] == null ? undefined : Array.from(value['aliases'] as Set<any>),
        'creation_timestamp': value['creationTimestamp'],
        'submitted_by': value['submittedBy'],
        'submitter_comment': value['submitterComment'],
        'description': value['description'],
        'activated': value['activated'],
        'activating_agent_term_id': value['activatingAgentTermId'],
        'activating_agent_term_name': value['activatingAgentTermName'],
        'modality': value['modality'],
        'cas': value['cas'],
        'fused_domain': value['fusedDomain'],
        'tagged_protein': value['taggedProtein'],
        'cas_species': value['casSpecies'],
        '@id': value['id'],
        '@type': value['type'],
        'summary': value['summary'],
        'biosamples_modified': value['biosamplesModified'] == null ? undefined : Array.from(value['biosamplesModified'] as Set<any>),
    };
}

