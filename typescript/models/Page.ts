/**
 * IGVF Project API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { PageLayout } from '../models/PageLayout';
import { HttpFile } from '../http/http';

/**
* A page on the IGVF portal.
*/
export class Page {
    /**
    * The date the object was released.
    */
    'releaseTimestamp'?: string;
    /**
    * Lab associated with the submission.
    */
    'lab'?: string;
    /**
    * Grant associated with the submission.
    */
    'award'?: string;
    /**
    * The status of the metadata object.
    */
    'status'?: PageStatusEnum;
    /**
    * The version of the JSON schema that the server uses to validate the object.
    */
    'schemaVersion'?: string;
    /**
    * The unique identifier associated with every object.
    */
    'uuid'?: string;
    /**
    * DACC internal notes.
    */
    'notes'?: string;
    /**
    * Lab specific identifiers to reference an object.
    */
    'aliases'?: Set<string>;
    /**
    * The date the object was created.
    */
    'creationTimestamp'?: string;
    /**
    * The user who submitted the object.
    */
    'submittedBy'?: string;
    /**
    * Additional information specified by the submitter to be displayed as a comment on the portal.
    */
    'submitterComment'?: string;
    /**
    * A plain text description of the object.
    */
    'description'?: string;
    /**
    * The parent page associated with this page.
    */
    'parent'?: string;
    /**
    * The name shown in this page\'s URL.
    */
    'name'?: string;
    /**
    * The name shown in the browser\'s title bar and tabs.
    */
    'title'?: string;
    'layout'?: PageLayout;
    'id'?: string;
    'type'?: Array<string>;
    /**
    * A summary of the object.
    */
    'summary'?: string;
    /**
    * The path of the page.
    */
    'canonicalUri'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "releaseTimestamp",
            "baseName": "release_timestamp",
            "type": "string",
            "format": ""
        },
        {
            "name": "lab",
            "baseName": "lab",
            "type": "string",
            "format": ""
        },
        {
            "name": "award",
            "baseName": "award",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "PageStatusEnum",
            "format": ""
        },
        {
            "name": "schemaVersion",
            "baseName": "schema_version",
            "type": "string",
            "format": ""
        },
        {
            "name": "uuid",
            "baseName": "uuid",
            "type": "string",
            "format": ""
        },
        {
            "name": "notes",
            "baseName": "notes",
            "type": "string",
            "format": ""
        },
        {
            "name": "aliases",
            "baseName": "aliases",
            "type": "Set<string>",
            "format": ""
        },
        {
            "name": "creationTimestamp",
            "baseName": "creation_timestamp",
            "type": "string",
            "format": ""
        },
        {
            "name": "submittedBy",
            "baseName": "submitted_by",
            "type": "string",
            "format": ""
        },
        {
            "name": "submitterComment",
            "baseName": "submitter_comment",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "parent",
            "baseName": "parent",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string",
            "format": ""
        },
        {
            "name": "layout",
            "baseName": "layout",
            "type": "PageLayout",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "@id",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "@type",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "summary",
            "baseName": "summary",
            "type": "string",
            "format": ""
        },
        {
            "name": "canonicalUri",
            "baseName": "canonical_uri",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Page.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum PageStatusEnum {
    Archived = 'archived',
    Deleted = 'deleted',
    InProgress = 'in progress',
    Released = 'released'
}

