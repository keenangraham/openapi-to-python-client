/**
 * IGVF Project API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* A CRISPR modification altering sample genomic material. For example, CRISPRi dCas9-KRAB modification.
*/
export class CrisprModification {
    /**
    * The date the object was released.
    */
    'releaseTimestamp'?: string;
    /**
    * The originating lab(s) or vendor(s).
    */
    'sources'?: Set<string>;
    /**
    * The lot identifier provided by the originating lab or vendor.
    */
    'lotId'?: string;
    /**
    * The product or catalog identifier provided following deposition to addgene.org.
    */
    'productId'?: string;
    /**
    * Documents that provide additional information (not data file).
    */
    'documents'?: Set<string>;
    /**
    * The status of the metadata object.
    */
    'status'?: CrisprModificationStatusEnum;
    /**
    * Lab associated with the submission.
    */
    'lab'?: string;
    /**
    * Grant associated with the submission.
    */
    'award'?: string;
    /**
    * The version of the JSON schema that the server uses to validate the object.
    */
    'schemaVersion'?: string;
    /**
    * The unique identifier associated with every object.
    */
    'uuid'?: string;
    /**
    * DACC internal notes.
    */
    'notes'?: string;
    /**
    * Lab specific identifiers to reference an object.
    */
    'aliases'?: Set<string>;
    /**
    * The date the object was created.
    */
    'creationTimestamp'?: string;
    /**
    * The user who submitted the object.
    */
    'submittedBy'?: string;
    /**
    * Additional information specified by the submitter to be displayed as a comment on the portal.
    */
    'submitterComment'?: string;
    /**
    * A plain text description of the object.
    */
    'description'?: string;
    /**
    * A boolean indicating whether the modification has been activated by a chemical agent.
    */
    'activated'?: boolean;
    /**
    * The CHEBI identifier for the activating agent of the modification.
    */
    'activatingAgentTermId'?: string;
    /**
    * The CHEBI name for the activating agent of the modification.
    */
    'activatingAgentTermName'?: string;
    /**
    * The purpose or intended effect of a modification.
    */
    'modality'?: CrisprModificationModalityEnum;
    /**
    * The name of the CRISPR associated protein used in the modification.
    */
    'cas'?: CrisprModificationCasEnum;
    /**
    * The name of the molecule fused to a Cas protein.
    */
    'fusedDomain'?: CrisprModificationFusedDomainEnum;
    /**
    * The tagged protein in modifications in which the Cas nuclease is fused to an antibody.
    */
    'taggedProtein'?: string;
    /**
    * The originating species of the Cas nuclease.
    */
    'casSpecies'?: CrisprModificationCasSpeciesEnum;
    'id'?: string;
    'type'?: Array<string>;
    'summary'?: string;
    /**
    * The biosamples which have been modified with this modification.
    */
    'biosamplesModified'?: Set<string>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "releaseTimestamp",
            "baseName": "release_timestamp",
            "type": "string",
            "format": ""
        },
        {
            "name": "sources",
            "baseName": "sources",
            "type": "Set<string>",
            "format": ""
        },
        {
            "name": "lotId",
            "baseName": "lot_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "productId",
            "baseName": "product_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "documents",
            "baseName": "documents",
            "type": "Set<string>",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "CrisprModificationStatusEnum",
            "format": ""
        },
        {
            "name": "lab",
            "baseName": "lab",
            "type": "string",
            "format": ""
        },
        {
            "name": "award",
            "baseName": "award",
            "type": "string",
            "format": ""
        },
        {
            "name": "schemaVersion",
            "baseName": "schema_version",
            "type": "string",
            "format": ""
        },
        {
            "name": "uuid",
            "baseName": "uuid",
            "type": "string",
            "format": ""
        },
        {
            "name": "notes",
            "baseName": "notes",
            "type": "string",
            "format": ""
        },
        {
            "name": "aliases",
            "baseName": "aliases",
            "type": "Set<string>",
            "format": ""
        },
        {
            "name": "creationTimestamp",
            "baseName": "creation_timestamp",
            "type": "string",
            "format": ""
        },
        {
            "name": "submittedBy",
            "baseName": "submitted_by",
            "type": "string",
            "format": ""
        },
        {
            "name": "submitterComment",
            "baseName": "submitter_comment",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "activated",
            "baseName": "activated",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "activatingAgentTermId",
            "baseName": "activating_agent_term_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "activatingAgentTermName",
            "baseName": "activating_agent_term_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "modality",
            "baseName": "modality",
            "type": "CrisprModificationModalityEnum",
            "format": ""
        },
        {
            "name": "cas",
            "baseName": "cas",
            "type": "CrisprModificationCasEnum",
            "format": ""
        },
        {
            "name": "fusedDomain",
            "baseName": "fused_domain",
            "type": "CrisprModificationFusedDomainEnum",
            "format": ""
        },
        {
            "name": "taggedProtein",
            "baseName": "tagged_protein",
            "type": "string",
            "format": ""
        },
        {
            "name": "casSpecies",
            "baseName": "cas_species",
            "type": "CrisprModificationCasSpeciesEnum",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "@id",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "@type",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "summary",
            "baseName": "summary",
            "type": "string",
            "format": ""
        },
        {
            "name": "biosamplesModified",
            "baseName": "biosamples_modified",
            "type": "Set<string>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CrisprModification.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum CrisprModificationStatusEnum {
    Archived = 'archived',
    Deleted = 'deleted',
    InProgress = 'in progress',
    Released = 'released'
}
export enum CrisprModificationModalityEnum {
    Activation = 'activation',
    BaseEditing = 'base editing',
    Cutting = 'cutting',
    Interference = 'interference',
    Knockout = 'knockout',
    Localizing = 'localizing',
    PrimeEditing = 'prime editing'
}
export enum CrisprModificationCasEnum {
    Cas9 = 'Cas9',
    Cas12a = 'Cas12a',
    Cas13 = 'Cas13',
    DCas9 = 'dCas9',
    NCas9 = 'nCas9',
    SpG = 'SpG',
    SpRy = 'SpRY'
}
export enum CrisprModificationFusedDomainEnum {
    _2xVp64 = '2xVP64',
    _3xVp64 = '3xVP64',
    Abe8e = 'ABE8e',
    Abe820 = 'ABE8.20',
    AntiFlag = 'ANTI-FLAG',
    Be4 = 'BE4',
    Be4max = 'BE4max',
    EA3A = 'eA3A',
    EA3AT31A = 'eA3A-T31A',
    EA3AT44DS45A = 'eA3A-T44D-S45A',
    Kox1Krab = 'KOX1-KRAB',
    MMlvRtPe2 = 'M-MLV RT (PE2)',
    P300 = 'p300',
    TdCbe = 'TdCBE',
    TdCgbe = 'TdCGBE',
    TdDe = 'TdDE',
    Vph = 'VPH',
    Vp64 = 'VP64',
    Vp64P65RtaVpr = 'VP64-p65-Rta (VPR)',
    Zim3Krab = 'ZIM3-KRAB'
}
export enum CrisprModificationCasSpeciesEnum {
    StreptococcusPyogenesSp = 'Streptococcus pyogenes (Sp)',
    StaphylococcusAureusSa = 'Staphylococcus aureus (Sa)',
    CampylobacterJejuniCj = 'Campylobacter jejuni (Cj)',
    NeisseriaMeningitidisNm = 'Neisseria meningitidis (Nm)'
}

