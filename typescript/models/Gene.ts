/**
 * IGVF Project API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { GeneLocation1 } from '../models/GeneLocation1';
import { HttpFile } from '../http/http';

/**
* A gene in the human or mouse genomes. The genes objects in IGVF are imported from GENCODE.
*/
export class Gene {
    /**
    * The date the object was released.
    */
    'releaseTimestamp'?: string;
    /**
    * The annotation and version of the reference resource.
    */
    'transcriptomeAnnotation'?: GeneTranscriptomeAnnotationEnum;
    /**
    * The species of the organism.
    */
    'taxa'?: GeneTaxaEnum;
    /**
    * The status of the metadata object.
    */
    'status'?: GeneStatusEnum;
    /**
    * The version of the JSON schema that the server uses to validate the object.
    */
    'schemaVersion'?: string;
    /**
    * The unique identifier associated with every object.
    */
    'uuid'?: string;
    /**
    * DACC internal notes.
    */
    'notes'?: string;
    /**
    * Lab specific identifiers to reference an object.
    */
    'aliases'?: Set<string>;
    /**
    * The date the object was created.
    */
    'creationTimestamp'?: string;
    /**
    * The user who submitted the object.
    */
    'submittedBy'?: string;
    /**
    * Additional information specified by the submitter to be displayed as a comment on the portal.
    */
    'submitterComment'?: string;
    /**
    * A plain text description of the object.
    */
    'description'?: string;
    /**
    * ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix.
    */
    'geneid'?: string;
    /**
    * Gene symbol approved by the official nomenclature.
    */
    'symbol'?: string;
    /**
    * The full gene name preferably approved by the official nomenclature.
    */
    'name'?: string;
    /**
    * Alternative symbols that have been used to refer to the gene.
    */
    'synonyms'?: Set<string>;
    /**
    * Unique identifiers from external resources.
    */
    'dbxrefs'?: Set<string>;
    /**
    * Gene locations specified using 1-based, closed coordinates for different versions of reference genome assemblies.
    */
    'locations'?: Set<GeneLocation1>;
    /**
    * Current ENSEMBL GeneID version number of the gene.
    */
    'versionNumber'?: string;
    'id'?: string;
    'type'?: Array<string>;
    /**
    * A summary of the object.
    */
    'summary'?: string;
    'title'?: string;
    /**
    * The ENSEMBL GeneID concatenated with its version number.
    */
    'geneidWithVersion'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "releaseTimestamp",
            "baseName": "release_timestamp",
            "type": "string",
            "format": ""
        },
        {
            "name": "transcriptomeAnnotation",
            "baseName": "transcriptome_annotation",
            "type": "GeneTranscriptomeAnnotationEnum",
            "format": ""
        },
        {
            "name": "taxa",
            "baseName": "taxa",
            "type": "GeneTaxaEnum",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "GeneStatusEnum",
            "format": ""
        },
        {
            "name": "schemaVersion",
            "baseName": "schema_version",
            "type": "string",
            "format": ""
        },
        {
            "name": "uuid",
            "baseName": "uuid",
            "type": "string",
            "format": ""
        },
        {
            "name": "notes",
            "baseName": "notes",
            "type": "string",
            "format": ""
        },
        {
            "name": "aliases",
            "baseName": "aliases",
            "type": "Set<string>",
            "format": ""
        },
        {
            "name": "creationTimestamp",
            "baseName": "creation_timestamp",
            "type": "string",
            "format": ""
        },
        {
            "name": "submittedBy",
            "baseName": "submitted_by",
            "type": "string",
            "format": ""
        },
        {
            "name": "submitterComment",
            "baseName": "submitter_comment",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "geneid",
            "baseName": "geneid",
            "type": "string",
            "format": ""
        },
        {
            "name": "symbol",
            "baseName": "symbol",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "synonyms",
            "baseName": "synonyms",
            "type": "Set<string>",
            "format": ""
        },
        {
            "name": "dbxrefs",
            "baseName": "dbxrefs",
            "type": "Set<string>",
            "format": ""
        },
        {
            "name": "locations",
            "baseName": "locations",
            "type": "Set<GeneLocation1>",
            "format": ""
        },
        {
            "name": "versionNumber",
            "baseName": "version_number",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "@id",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "@type",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "summary",
            "baseName": "summary",
            "type": "string",
            "format": ""
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string",
            "format": ""
        },
        {
            "name": "geneidWithVersion",
            "baseName": "geneid_with_version",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Gene.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum GeneTranscriptomeAnnotationEnum {
    _40 = 'GENCODE 40',
    _41 = 'GENCODE 41',
    _42 = 'GENCODE 42',
    _43 = 'GENCODE 43',
    _44 = 'GENCODE 44',
    _45 = 'GENCODE 45',
    M30 = 'GENCODE M30',
    M31 = 'GENCODE M31',
    M32 = 'GENCODE M32',
    M33 = 'GENCODE M33',
    M34 = 'GENCODE M34'
}
export enum GeneTaxaEnum {
    HomoSapiens = 'Homo sapiens',
    MusMusculus = 'Mus musculus'
}
export enum GeneStatusEnum {
    Archived = 'archived',
    Deleted = 'deleted',
    InProgress = 'in progress',
    Released = 'released'
}

