/**
 * IGVF Project API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* A degron modification that can induce degradation of a protein.
*/
export class DegronModification {
    /**
    * The date the object was released.
    */
    'releaseTimestamp'?: string;
    /**
    * The originating lab(s) or vendor(s).
    */
    'sources'?: Set<string>;
    /**
    * The lot identifier provided by the originating lab or vendor.
    */
    'lotId'?: string;
    /**
    * The product or catalog identifier provided following deposition to addgene.org.
    */
    'productId'?: string;
    /**
    * Documents that provide additional information (not data file).
    */
    'documents'?: Set<string>;
    /**
    * The status of the metadata object.
    */
    'status'?: DegronModification.StatusEnum;
    /**
    * Lab associated with the submission.
    */
    'lab'?: string;
    /**
    * Grant associated with the submission.
    */
    'award'?: string;
    /**
    * The version of the JSON schema that the server uses to validate the object.
    */
    'schemaVersion'?: string;
    /**
    * The unique identifier associated with every object.
    */
    'uuid'?: string;
    /**
    * DACC internal notes.
    */
    'notes'?: string;
    /**
    * Lab specific identifiers to reference an object.
    */
    'aliases'?: Set<string>;
    /**
    * The date the object was created.
    */
    'creationTimestamp'?: string;
    /**
    * The user who submitted the object.
    */
    'submittedBy'?: string;
    /**
    * Additional information specified by the submitter to be displayed as a comment on the portal.
    */
    'submitterComment'?: string;
    /**
    * A plain text description of the object.
    */
    'description'?: string;
    /**
    * A boolean indicating whether the modification has been activated by a chemical agent.
    */
    'activated'?: boolean;
    /**
    * The CHEBI identifier for the activating agent of the modification.
    */
    'activatingAgentTermId'?: string;
    /**
    * The CHEBI name for the activating agent of the modification.
    */
    'activatingAgentTermName'?: string;
    /**
    * The purpose or intended effect of a modification.
    */
    'modality'?: DegronModification.ModalityEnum;
    /**
    * The type of degron system implemented.
    */
    'degronSystem'?: DegronModification.DegronSystemEnum;
    /**
    * The tagged proteins which are targeted for degradation.
    */
    'taggedProteins'?: Set<string>;
    'id'?: string;
    'type'?: Array<string>;
    'summary'?: string;
    /**
    * The biosamples which have been modified with this modification.
    */
    'biosamplesModified'?: Set<string>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "releaseTimestamp",
            "baseName": "release_timestamp",
            "type": "string"
        },
        {
            "name": "sources",
            "baseName": "sources",
            "type": "Set<string>"
        },
        {
            "name": "lotId",
            "baseName": "lot_id",
            "type": "string"
        },
        {
            "name": "productId",
            "baseName": "product_id",
            "type": "string"
        },
        {
            "name": "documents",
            "baseName": "documents",
            "type": "Set<string>"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "DegronModification.StatusEnum"
        },
        {
            "name": "lab",
            "baseName": "lab",
            "type": "string"
        },
        {
            "name": "award",
            "baseName": "award",
            "type": "string"
        },
        {
            "name": "schemaVersion",
            "baseName": "schema_version",
            "type": "string"
        },
        {
            "name": "uuid",
            "baseName": "uuid",
            "type": "string"
        },
        {
            "name": "notes",
            "baseName": "notes",
            "type": "string"
        },
        {
            "name": "aliases",
            "baseName": "aliases",
            "type": "Set<string>"
        },
        {
            "name": "creationTimestamp",
            "baseName": "creation_timestamp",
            "type": "string"
        },
        {
            "name": "submittedBy",
            "baseName": "submitted_by",
            "type": "string"
        },
        {
            "name": "submitterComment",
            "baseName": "submitter_comment",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "activated",
            "baseName": "activated",
            "type": "boolean"
        },
        {
            "name": "activatingAgentTermId",
            "baseName": "activating_agent_term_id",
            "type": "string"
        },
        {
            "name": "activatingAgentTermName",
            "baseName": "activating_agent_term_name",
            "type": "string"
        },
        {
            "name": "modality",
            "baseName": "modality",
            "type": "DegronModification.ModalityEnum"
        },
        {
            "name": "degronSystem",
            "baseName": "degron_system",
            "type": "DegronModification.DegronSystemEnum"
        },
        {
            "name": "taggedProteins",
            "baseName": "tagged_proteins",
            "type": "Set<string>"
        },
        {
            "name": "id",
            "baseName": "@id",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "@type",
            "type": "Array<string>"
        },
        {
            "name": "summary",
            "baseName": "summary",
            "type": "string"
        },
        {
            "name": "biosamplesModified",
            "baseName": "biosamples_modified",
            "type": "Set<string>"
        }    ];

    static getAttributeTypeMap() {
        return DegronModification.attributeTypeMap;
    }
}

export namespace DegronModification {
    export enum StatusEnum {
        Archived = <any> 'archived',
        Deleted = <any> 'deleted',
        InProgress = <any> 'in progress',
        Released = <any> 'released'
    }
    export enum ModalityEnum {
        Degradation = <any> 'degradation'
    }
    export enum DegronSystemEnum {
        Aid = <any> 'AID',
        AlissAid = <any> 'AlissAid',
        SsAid = <any> 'ssAID'
    }
}
