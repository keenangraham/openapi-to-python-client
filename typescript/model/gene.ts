/**
 * IGVF Project API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { GeneLocation1 } from './geneLocation1';

/**
* A gene in the human or mouse genomes. The genes objects in IGVF are imported from GENCODE.
*/
export class Gene {
    /**
    * The date the object was released.
    */
    'releaseTimestamp'?: string;
    /**
    * The annotation and version of the reference resource.
    */
    'transcriptomeAnnotation'?: Gene.TranscriptomeAnnotationEnum;
    /**
    * The species of the organism.
    */
    'taxa'?: Gene.TaxaEnum;
    /**
    * The status of the metadata object.
    */
    'status'?: Gene.StatusEnum;
    /**
    * The version of the JSON schema that the server uses to validate the object.
    */
    'schemaVersion'?: string;
    /**
    * The unique identifier associated with every object.
    */
    'uuid'?: string;
    /**
    * DACC internal notes.
    */
    'notes'?: string;
    /**
    * Lab specific identifiers to reference an object.
    */
    'aliases'?: Set<string>;
    /**
    * The date the object was created.
    */
    'creationTimestamp'?: string;
    /**
    * The user who submitted the object.
    */
    'submittedBy'?: string;
    /**
    * Additional information specified by the submitter to be displayed as a comment on the portal.
    */
    'submitterComment'?: string;
    /**
    * A plain text description of the object.
    */
    'description'?: string;
    /**
    * ENSEMBL GeneID of official nomenclature approved gene. The GeneID does not include the current version number suffix.
    */
    'geneid'?: string;
    /**
    * Gene symbol approved by the official nomenclature.
    */
    'symbol'?: string;
    /**
    * The full gene name preferably approved by the official nomenclature.
    */
    'name'?: string;
    /**
    * Alternative symbols that have been used to refer to the gene.
    */
    'synonyms'?: Set<string>;
    /**
    * Unique identifiers from external resources.
    */
    'dbxrefs'?: Set<string>;
    /**
    * Gene locations specified using 1-based, closed coordinates for different versions of reference genome assemblies.
    */
    'locations'?: Set<GeneLocation1>;
    /**
    * Current ENSEMBL GeneID version number of the gene.
    */
    'versionNumber'?: string;
    'id'?: string;
    'type'?: Array<string>;
    /**
    * A summary of the object.
    */
    'summary'?: string;
    'title'?: string;
    /**
    * The ENSEMBL GeneID concatenated with its version number.
    */
    'geneidWithVersion'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "releaseTimestamp",
            "baseName": "release_timestamp",
            "type": "string"
        },
        {
            "name": "transcriptomeAnnotation",
            "baseName": "transcriptome_annotation",
            "type": "Gene.TranscriptomeAnnotationEnum"
        },
        {
            "name": "taxa",
            "baseName": "taxa",
            "type": "Gene.TaxaEnum"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "Gene.StatusEnum"
        },
        {
            "name": "schemaVersion",
            "baseName": "schema_version",
            "type": "string"
        },
        {
            "name": "uuid",
            "baseName": "uuid",
            "type": "string"
        },
        {
            "name": "notes",
            "baseName": "notes",
            "type": "string"
        },
        {
            "name": "aliases",
            "baseName": "aliases",
            "type": "Set<string>"
        },
        {
            "name": "creationTimestamp",
            "baseName": "creation_timestamp",
            "type": "string"
        },
        {
            "name": "submittedBy",
            "baseName": "submitted_by",
            "type": "string"
        },
        {
            "name": "submitterComment",
            "baseName": "submitter_comment",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "geneid",
            "baseName": "geneid",
            "type": "string"
        },
        {
            "name": "symbol",
            "baseName": "symbol",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "synonyms",
            "baseName": "synonyms",
            "type": "Set<string>"
        },
        {
            "name": "dbxrefs",
            "baseName": "dbxrefs",
            "type": "Set<string>"
        },
        {
            "name": "locations",
            "baseName": "locations",
            "type": "Set<GeneLocation1>"
        },
        {
            "name": "versionNumber",
            "baseName": "version_number",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "@id",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "@type",
            "type": "Array<string>"
        },
        {
            "name": "summary",
            "baseName": "summary",
            "type": "string"
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string"
        },
        {
            "name": "geneidWithVersion",
            "baseName": "geneid_with_version",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Gene.attributeTypeMap;
    }
}

export namespace Gene {
    export enum TranscriptomeAnnotationEnum {
        _40 = <any> 'GENCODE 40',
        _41 = <any> 'GENCODE 41',
        _42 = <any> 'GENCODE 42',
        _43 = <any> 'GENCODE 43',
        _44 = <any> 'GENCODE 44',
        _45 = <any> 'GENCODE 45',
        M30 = <any> 'GENCODE M30',
        M31 = <any> 'GENCODE M31',
        M32 = <any> 'GENCODE M32',
        M33 = <any> 'GENCODE M33',
        M34 = <any> 'GENCODE M34'
    }
    export enum TaxaEnum {
        HomoSapiens = <any> 'Homo sapiens',
        MusMusculus = <any> 'Mus musculus'
    }
    export enum StatusEnum {
        Archived = <any> 'archived',
        Deleted = <any> 'deleted',
        InProgress = <any> 'in progress',
        Released = <any> 'released'
    }
}
