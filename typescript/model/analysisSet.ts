/**
 * IGVF Project API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* A file set for analyses. Analysis sets represent the results of a computational analysis of raw genomic data or other analyses.
*/
export class AnalysisSet {
    /**
    * The file set(s) required for this analysis.
    */
    'inputFileSets'?: Set<string>;
    /**
    * The date the object was released.
    */
    'releaseTimestamp'?: string;
    /**
    * The publications associated with this object.
    */
    'publications'?: Set<string>;
    /**
    * The publication identifiers that provide more information about the object.
    */
    'publicationIdentifiers'?: Set<string>;
    /**
    * Documents that provide additional information (not data file).
    */
    'documents'?: Set<string>;
    /**
    * Lab associated with the submission.
    */
    'lab'?: string;
    /**
    * Grant associated with the submission.
    */
    'award'?: string;
    /**
    * A unique identifier to be used to reference the object prefixed with IGVF.
    */
    'accession'?: string;
    /**
    * Accessions previously assigned to objects that have been merged with this object.
    */
    'alternateAccessions'?: Set<string>;
    /**
    * Some samples are part of particular data collections.
    */
    'collections'?: Set<AnalysisSet.CollectionsEnum>;
    /**
    * The status of the metadata object.
    */
    'status'?: AnalysisSet.StatusEnum;
    /**
    * Explanation of why an object was transitioned to the revoked status.
    */
    'revokeDetail'?: string;
    /**
    * The version of the JSON schema that the server uses to validate the object.
    */
    'schemaVersion'?: string;
    /**
    * The unique identifier associated with every object.
    */
    'uuid'?: string;
    /**
    * DACC internal notes.
    */
    'notes'?: string;
    /**
    * Lab specific identifiers to reference an object.
    */
    'aliases'?: Set<string>;
    /**
    * The date the object was created.
    */
    'creationTimestamp'?: string;
    /**
    * The user who submitted the object.
    */
    'submittedBy'?: string;
    /**
    * Additional information specified by the submitter to be displayed as a comment on the portal.
    */
    'submitterComment'?: string;
    /**
    * A plain text description of the object.
    */
    'description'?: string;
    /**
    * Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file sets.
    */
    'dbxrefs'?: Set<string>;
    /**
    * The sample(s) associated with this file set.
    */
    'samples'?: Set<string>;
    /**
    * The donors of the samples associated with this analysis set.
    */
    'donors'?: Set<string>;
    /**
    * The level of this analysis set. An intermediate analysis cannot be interpreted on its own and is part of a principal analysis. A principal analysis is the core analysis for an experimental design, the results of which can be interpretable on their own.
    */
    'fileSetType'?: AnalysisSet.FileSetTypeEnum;
    'id'?: string;
    'type'?: Array<string>;
    'summary'?: string;
    /**
    * The files associated with this file set.
    */
    'files'?: Set<string>;
    /**
    * The file sets for which this file set is a control.
    */
    'controlFor'?: Set<string>;
    /**
    * The timestamp the first file object in the file_set or associated auxiliary sets was created.
    */
    'submittedFilesTimestamp'?: string;
    /**
    * The file sets that use this file set as an input.
    */
    'inputFileSetFor'?: Set<string>;
    /**
    * Title(s) of assays that produced data analyzed in the analysis set.
    */
    'assayTitles'?: Set<string>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "inputFileSets",
            "baseName": "input_file_sets",
            "type": "Set<string>"
        },
        {
            "name": "releaseTimestamp",
            "baseName": "release_timestamp",
            "type": "string"
        },
        {
            "name": "publications",
            "baseName": "publications",
            "type": "Set<string>"
        },
        {
            "name": "publicationIdentifiers",
            "baseName": "publication_identifiers",
            "type": "Set<string>"
        },
        {
            "name": "documents",
            "baseName": "documents",
            "type": "Set<string>"
        },
        {
            "name": "lab",
            "baseName": "lab",
            "type": "string"
        },
        {
            "name": "award",
            "baseName": "award",
            "type": "string"
        },
        {
            "name": "accession",
            "baseName": "accession",
            "type": "string"
        },
        {
            "name": "alternateAccessions",
            "baseName": "alternate_accessions",
            "type": "Set<string>"
        },
        {
            "name": "collections",
            "baseName": "collections",
            "type": "Set<AnalysisSet.CollectionsEnum>"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "AnalysisSet.StatusEnum"
        },
        {
            "name": "revokeDetail",
            "baseName": "revoke_detail",
            "type": "string"
        },
        {
            "name": "schemaVersion",
            "baseName": "schema_version",
            "type": "string"
        },
        {
            "name": "uuid",
            "baseName": "uuid",
            "type": "string"
        },
        {
            "name": "notes",
            "baseName": "notes",
            "type": "string"
        },
        {
            "name": "aliases",
            "baseName": "aliases",
            "type": "Set<string>"
        },
        {
            "name": "creationTimestamp",
            "baseName": "creation_timestamp",
            "type": "string"
        },
        {
            "name": "submittedBy",
            "baseName": "submitted_by",
            "type": "string"
        },
        {
            "name": "submitterComment",
            "baseName": "submitter_comment",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "dbxrefs",
            "baseName": "dbxrefs",
            "type": "Set<string>"
        },
        {
            "name": "samples",
            "baseName": "samples",
            "type": "Set<string>"
        },
        {
            "name": "donors",
            "baseName": "donors",
            "type": "Set<string>"
        },
        {
            "name": "fileSetType",
            "baseName": "file_set_type",
            "type": "AnalysisSet.FileSetTypeEnum"
        },
        {
            "name": "id",
            "baseName": "@id",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "@type",
            "type": "Array<string>"
        },
        {
            "name": "summary",
            "baseName": "summary",
            "type": "string"
        },
        {
            "name": "files",
            "baseName": "files",
            "type": "Set<string>"
        },
        {
            "name": "controlFor",
            "baseName": "control_for",
            "type": "Set<string>"
        },
        {
            "name": "submittedFilesTimestamp",
            "baseName": "submitted_files_timestamp",
            "type": "string"
        },
        {
            "name": "inputFileSetFor",
            "baseName": "input_file_set_for",
            "type": "Set<string>"
        },
        {
            "name": "assayTitles",
            "baseName": "assay_titles",
            "type": "Set<string>"
        }    ];

    static getAttributeTypeMap() {
        return AnalysisSet.attributeTypeMap;
    }
}

export namespace AnalysisSet {
    export enum CollectionsEnum {
        ClinGen = <any> 'ClinGen',
        Encode = <any> 'ENCODE',
        GregoR = <any> 'GREGoR',
        IgvfCatalogBetaV01 = <any> 'IGVF_catalog_beta_v0.1',
        IgvfCatalogBetaV02 = <any> 'IGVF_catalog_beta_v0.2',
        IgvfCatalogBetaV03 = <any> 'IGVF_catalog_beta_v0.3',
        IgvfCatalogBetaV04 = <any> 'IGVF_catalog_beta_v0.4',
        MaveDb = <any> 'MaveDB',
        MprAbase = <any> 'MPRAbase',
        Vista = <any> 'Vista'
    }
    export enum StatusEnum {
        InProgress = <any> 'in progress',
        Released = <any> 'released',
        Deleted = <any> 'deleted',
        Replaced = <any> 'replaced',
        Revoked = <any> 'revoked',
        Archived = <any> 'archived'
    }
    export enum FileSetTypeEnum {
        IntermediateAnalysis = <any> 'intermediate analysis',
        PrincipalAnalysis = <any> 'principal analysis'
    }
}
