/**
 * IGVF Project API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* A lab that is part of or affiliated with the IGVF consortium.
*/
export class Lab {
    /**
    * The status of the metadata object.
    */
    'status'?: Lab.StatusEnum;
    /**
    * An external resource with additional information.
    */
    'url'?: string;
    /**
    * The version of the JSON schema that the server uses to validate the object.
    */
    'schemaVersion'?: string;
    /**
    * The unique identifier associated with every object.
    */
    'uuid'?: string;
    /**
    * DACC internal notes.
    */
    'notes'?: string;
    /**
    * Lab specific identifiers to reference an object.
    */
    'aliases'?: Set<string>;
    /**
    * The date the object was created.
    */
    'creationTimestamp'?: string;
    /**
    * The user who submitted the object.
    */
    'submittedBy'?: string;
    /**
    * Additional information specified by the submitter to be displayed as a comment on the portal.
    */
    'submitterComment'?: string;
    /**
    * A plain text description of the object.
    */
    'description'?: string;
    /**
    * A short unique name for the lab, current convention is lower cased and hyphen delimited of PI\'s first and last name (e.g. john-doe).
    */
    'name'?: string;
    /**
    * Principle Investigator of the lab.
    */
    'pi'?: string;
    /**
    * Grants associated with the lab.
    */
    'awards'?: Set<string>;
    /**
    * An abbreviation for the institute the lab is associated with.
    */
    'instituteLabel'?: string;
    'id'?: string;
    'type'?: Array<string>;
    /**
    * A summary of the lab.
    */
    'summary'?: string;
    'title'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "status",
            "baseName": "status",
            "type": "Lab.StatusEnum"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        },
        {
            "name": "schemaVersion",
            "baseName": "schema_version",
            "type": "string"
        },
        {
            "name": "uuid",
            "baseName": "uuid",
            "type": "string"
        },
        {
            "name": "notes",
            "baseName": "notes",
            "type": "string"
        },
        {
            "name": "aliases",
            "baseName": "aliases",
            "type": "Set<string>"
        },
        {
            "name": "creationTimestamp",
            "baseName": "creation_timestamp",
            "type": "string"
        },
        {
            "name": "submittedBy",
            "baseName": "submitted_by",
            "type": "string"
        },
        {
            "name": "submitterComment",
            "baseName": "submitter_comment",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "pi",
            "baseName": "pi",
            "type": "string"
        },
        {
            "name": "awards",
            "baseName": "awards",
            "type": "Set<string>"
        },
        {
            "name": "instituteLabel",
            "baseName": "institute_label",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "@id",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "@type",
            "type": "Array<string>"
        },
        {
            "name": "summary",
            "baseName": "summary",
            "type": "string"
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Lab.attributeTypeMap;
    }
}

export namespace Lab {
    export enum StatusEnum {
        Current = <any> 'current',
        Deleted = <any> 'deleted',
        Disabled = <any> 'disabled'
    }
}
